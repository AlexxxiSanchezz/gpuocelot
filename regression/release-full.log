INFO     Reading in test file /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/regression/full.level
INFO      Found the following tests:
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLexer
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestParser
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestEmulator
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestInstructions
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestKernels
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDataflowGraph
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMInstructions
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXToLLVMTranslator
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMKernels
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaMalloc
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTexture2D
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTextureArray
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaGlobals
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDeviceSwitching
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaSequence
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCalVectorScale
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXAssembly
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestFunctionCall
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestIndirectFunctionCall
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestExternalFunctions
INFO     ==== INDIVIDUAL TEST RESULTS ====

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDeviceSwitching 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMInstructions 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestFunctionCall 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTexture2D 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestFunctionCall
INFO     Test completed in 0.0652740001678 seconds
INFO      It produced the following output:
(0.003051) KernelPartitioningPass.cpp:76:   KernelPartitioningPass::runOnFunction(kernel)
(0.003076) KernelPartitioningPass.cpp:113:  partitioning blocks at barriers
(0.003085) KernelPartitioningPass.cpp:148:    encountered 0 barriers
(0.003216) KernelPartitioningPass.cpp:195:   KernelGraph( partitioning with heuristic minimum)
(0.003231) KernelPartitioningPass.cpp:290:  KernelGraph::_partitionMinimumSize()
(0.003275) KernelPartitioningPass.cpp:727:  LiveRegisters [count: 2]
(0.003286) KernelPartitioningPass.cpp:729:    saved 72 bytes per thread
(0.003311) KernelPartitioningPass.cpp:568:    Spill region size is 16
(0.003329) KernelPartitioningPass.cpp:1111: Subkernel::create(kernel)
(0.003339) KernelPartitioningPass.cpp:1134: Subkernel::_create(kernel id: 1)
(0.003359) KernelPartitioningPass.cpp:1162: 
(0.003367) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.003381) KernelPartitioningPass.cpp:1173:  adding block $BB_2_0002
(0.003402) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_2_0002 -> $BB_2_0003
(0.003416) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_2_0002 -> $BB_2_0004
(0.003425) KernelPartitioningPass.cpp:1262:  ENTRY EDGE: entry -> $BB_2_0002
(0.003438) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.003446) KernelPartitioningPass.cpp:1281:  looking in block mapping: entry -> $BB_2_0002
(0.003454) KernelPartitioningPass.cpp:1285:   examined terminator
(0.003461) KernelPartitioningPass.cpp:1296:   instantiating internal edge
(0.003470) KernelPartitioningPass.cpp:1302:   adding internal edge: entry -> $BB_2_0002 type: fallthrough
(0.003480) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.003488) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.003502) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.003511) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.003520) KernelPartitioningPass.cpp:1374:   $BB_2_0002
(0.003528) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.003548) KernelPartitioningPass.cpp:1111: Subkernel::create(kernel)
(0.003557) KernelPartitioningPass.cpp:1134: Subkernel::_create(kernel id: 2)
(0.003572) KernelPartitioningPass.cpp:1162: 
(0.003580) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.003589) KernelPartitioningPass.cpp:1173:  adding block $BB_2_0003
(0.003598) KernelPartitioningPass.cpp:1192:   this block exits
(0.003609) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_2_0003 -> exit
(0.003620) KernelPartitioningPass.cpp:1259:   adding EXTERNAL IN-Edge $BB_2_0002 -> $BB_2_0003 with entry ID 131073
(0.003629) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.003637) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.003646) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.003655) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.003664) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.003672) KernelPartitioningPass.cpp:1374:   $BB_2_0003
(0.003680) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.003694) KernelPartitioningPass.cpp:1111: Subkernel::create(kernel)
(0.003703) KernelPartitioningPass.cpp:1134: Subkernel::_create(kernel id: 3)
(0.003717) KernelPartitioningPass.cpp:1162: 
(0.003725) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.003738) KernelPartitioningPass.cpp:1173:  adding block $BB_2_0004
(0.003749) KernelPartitioningPass.cpp:1192:   this block exits
(0.003759) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_2_0004 -> exit
(0.003770) KernelPartitioningPass.cpp:1259:   adding EXTERNAL IN-Edge $BB_2_0002 -> $BB_2_0004 with entry ID 196609
(0.003779) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.003786) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.003795) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.003804) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.003832) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.003841) KernelPartitioningPass.cpp:1374:   $BB_2_0004
(0.003850) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.003865) KernelPartitioningPass.cpp:573:  Linking external edges
(0.003873) KernelPartitioningPass.cpp:575:    but first!
(0.003881) KernelPartitioningPass.cpp:581:    subkernel _subkernel_kernel_1 out edges: 
(0.003889) KernelPartitioningPass.cpp:588:      $BB_2_0002 -> $BB_2_0003
(0.003898) KernelPartitioningPass.cpp:588:      $BB_2_0002 -> $BB_2_0004
(0.003906) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.003914) KernelPartitioningPass.cpp:581:    subkernel _subkernel_kernel_2 out edges: 
(0.003922) KernelPartitioningPass.cpp:588:      $BB_2_0003 -> exit
(0.003929) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.003936) KernelPartitioningPass.cpp:599:      $BB_2_0002 -> $BB_2_0003
(0.003944) KernelPartitioningPass.cpp:581:    subkernel _subkernel_kernel_3 out edges: 
(0.003952) KernelPartitioningPass.cpp:588:      $BB_2_0004 -> exit
(0.003959) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.003967) KernelPartitioningPass.cpp:599:      $BB_2_0002 -> $BB_2_0004
(0.003975) KernelPartitioningPass.cpp:604:    now linking
(0.003983) KernelPartitioningPass.cpp:621:     same subkernel
(0.003991) KernelPartitioningPass.cpp:635:    linking $BB_2_0002_exit_handler_to_2_0003 to $BB_2_0003_entry_handler_from_2_0002 (entry 131073)
(0.003999) KernelPartitioningPass.cpp:621:     same subkernel
(0.004007) KernelPartitioningPass.cpp:635:    linking $BB_2_0002_exit_handler_to_2_0004 to $BB_2_0004_entry_handler_from_2_0002 (entry 196609)
(0.004015) KernelPartitioningPass.cpp:621:     same subkernel
(0.004023) KernelPartitioningPass.cpp:647:   failed to link external edge: $BB_2_0003 -> exit
(0.004031) KernelPartitioningPass.cpp:621:     same subkernel
(0.004038) KernelPartitioningPass.cpp:647:   failed to link external edge: $BB_2_0004 -> exit
(0.004090) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.004110) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.004121) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.004130) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_2_0002 -> $BB_2_0002_exit_handler_to_2_0003 (2 live values
(0.004150) KernelPartitioningPass.cpp:1731:       alive: 2 [type: s64, offset: 0]
(0.004168) KernelPartitioningPass.cpp:1731:       alive: 6 [type: s32, offset: 8]
(0.004181) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.004191) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_2_0002_exit_handler_to_2_0003
(0.004208) KernelPartitioningPass.cpp:1664:   adding $BB_2_0002 to frontierExitBlocks
(0.004222) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_2_0002 -> $BB_2_0002_exit_handler_to_2_0004 (2 live values
(0.004233) KernelPartitioningPass.cpp:1731:       alive: 2 [type: s64, offset: 0]
(0.004246) KernelPartitioningPass.cpp:1731:       alive: 6 [type: s32, offset: 8]
(0.004259) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 1
(0.004267) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_2_0002_exit_handler_to_2_0004
(0.004283) KernelPartitioningPass.cpp:1664:   adding $BB_2_0002 to frontierExitBlocks
(0.004293) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.004303) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.004311) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_2_0002
(0.004335) KernelPartitioningPass.cpp:1782:  block $BB_2_0002 (2 external edges) terminator: @%p7 bra $BB_2_0004
(0.004345) KernelPartitioningPass.cpp:1785:    branch
(0.004352) KernelPartitioningPass.cpp:1791:  1 external edge, modifying branch target to point to handler
(0.004361) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
(0.004407) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalTestFunctionCall: ocelot/executive/implementation/DynamicTranslationCache.cpp:1028: void setupCallTargets(ir::PTXKernel&, const executive::DynamicTranslationCache&): Assertion `0 && "arbitrary function calls not yet supported"' failed.
Handlers()
(0.004428) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.004438) KernelPartitioningPass.cpp:1585:     IN-edge: $BB_2_0003_entry_handler_from_2_0002 -> $BB_2_0003 (2 live values
(0.004452) KernelPartitioningPass.cpp:1725:       skipping alive: 2 [type: s64]
(0.004461) KernelPartitioningPass.cpp:1725:       skipping alive: 6 [type: s32]
(0.004472) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.004481) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_2_0003 -> $BB_2_0003_thread_exit (0 live values
(0.004491) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.004500) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_2_0003_thread_exit
(0.004514) KernelPartitioningPass.cpp:1664:   adding $BB_2_0003 to frontierExitBlocks
(0.004524) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.004532) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.004540) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_2_0003
(0.004551) KernelPartitioningPass.cpp:1782:  block $BB_2_0003 (1 external edges) terminator: exit
(0.004560) KernelPartitioningPass.cpp:1810:    exit
(0.004567) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
(0.004615) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.004629) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.004637) KernelPartitioningPass.cpp:1585:     IN-edge: $BB_2_0004_entry_handler_from_2_0002 -> $BB_2_0004 (2 live values
(0.004649) KernelPartitioningPass.cpp:1731:       alive: 2 [type: s64, offset: 0]
(0.004663) KernelPartitioningPass.cpp:1731:       alive: 6 [type: s32, offset: 8]
(0.004677) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.004685) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_2_0004 -> $BB_2_0004_thread_exit (0 live values
(0.004696) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.004704) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_2_0004_thread_exit
(0.004719) KernelPartitioningPass.cpp:1664:   adding $BB_2_0004 to frontierExitBlocks
(0.004728) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.004738) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.004747) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_2_0004
(0.004755) KernelPartitioningPass.cpp:1782:  block $BB_2_0004 (1 external edges) terminator: exit
(0.004763) KernelPartitioningPass.cpp:1810:    exit
(0.004772) KernelPartitioningPass.cpp:1825: end frontier exit blocks:

INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMInstructions
INFO     Test completed in 0.0684361457825 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestLLVMInstructions

Description: A test for the assembly code generation and automatic 
             verfication of individual LLVM instructions. Test Points: 1) For each 
             instruction, generate several assembly strings using the 
             instruction's toString method, make sure that these pass the valid() 
             check, compare to references from the LLVM manual.


Test Seed : 1336535631
Test time : 0.001055

Status :  Checked instruction "<result> = add i32 4, %var"
Add Instruction Passed
 Checked instruction "%ptr = alloca i32"
 Checked instruction "%ptr = alloca i32, i32 4"
 Checked instruction "%ptr = alloca i32, i32 4, align 1024"
 Checked instruction "%ptr = alloca i32, align 1024"
Alloca Instruction Passed
 Checked instruction "<result> = and i32 4, %var"
 Checked instruction "<result> = and i32 15, 40"
 Checked instruction "<result> = and i32 4, 8"
And Instruction Passed
 Checked instruction "<result> = ashr i32 4, 1"
 Checked instruction "<result> = ashr i8 -2, 1"
 Checked instruction "<result> = ashr < 2 x i32 > < i32 -2, i32 4 >, < i32 1, i32 3 >"
Ashr Instruction Passed
 Checked instruction "%X = bitcast i8 -1 to i8"
 Checked instruction "%Z = bitcast < 2 x i32 > %V to i64"
Bitcast Instruction Passed
 Checked instruction "br i1 %cond, label %IfEqual, label %IfUnequal"
Br Instruction Passed
 Checked instruction "%retval = call i32 @test(i32 %argc)"
 Checked instruction "call i32 (i8*, ...)* @printf(i8* %msg, i32 12, i8 42)"
 Checked instruction "%X = tail call i32 @foo()"
 Checked instruction "%Y = tail call fastcc i32 @foo()"
 Checked instruction "call void @foo(i8 97 signext)"
 Checked instruction "%r = call %struct.A @foo()"
 Checked instruction "call void @foo() noreturn"
 Checked instruction "%ZZ = call zeroext i32 @bar()"
Call Instruction Passed
 Checked instruction "%result = extractelement < 4 x i32 > %vec, i32 0"
Extractelement Instruction Passed
 Checked instruction "%result = extractvalue { i32, float } %agg, 0"
Extractvalue Instruction Passed
 Checked instruction "<result> = fadd float 0x4010000000000000, %var"
Fadd Instruction Passed
 Checked instruction "<result> = fcmp oeq float 0x4010000000000000, 0x4014000000000000"
 Checked instruction "<result> = fcmp one float 0x4010000000000000, 0x4014000000000000"
 Checked instruction "<result> = fcmp olt float 0x4010000000000000, 0x4014000000000000"
 Checked instruction "<result> = fcmp ueq float 0x3ff0000000000000, 0x4000000000000000"
Fcmp Instruction Passed
 Checked instruction "<result> = fdiv float 0x4010000000000000, %var"
Fdiv Instruction Passed
 Checked instruction "<result> = fmul float 0x4010000000000000, %var"
Fmul Instruction Passed
 Checked instruction "%X = fpext float 0x400921cac0000000 to double"
 Checked instruction "%Y = fpext float 0x3ff0000000000000 to float"
Fpext Instruction Passed
 Checked instruction "%X = fptosi double 0xc05ec00000000000 to i32"
Fptosi Instruction Passed
 Checked instruction "%X = fptoui double 0x405ec00000000000 to i32"
Fptoui Instruction Passed
 Checked instruction "%X = fptrunc double 0x405ec00000000000 to float"
Fptrunc Instruction Passed
 Checked instruction "free [ 4 x i8 ]* %array"
Free Instruction Passed
 Checked instruction "<result> = frem float 0x4010000000000000, %var"
Frem Instruction Passed
 Checked instruction "<result> = fsub float 0x0, %val"
Fsub Instruction Passed
 Checked instruction "%vptr = getelementptr { i32, < 2 x i8 > }* %svptr, i32 0, i32 1, i32 1"
 Checked instruction "%eptr = getelementptr [ 12 x i8 ]* %aptr, i32 0, i32 1"
Getelementptr Instruction Passed
 Checked instruction "<result> = icmp ne float* %X, %X"
Icmp Instruction Passed
 Checked instruction "%result = insertelement < 4 x i32 > %vec, i32 1, i32 0"
Insertelement Instruction Passed
 Checked instruction "%result = insertvalue { i32, float } %agg, i32 1, 0"
Insertvalue Instruction Passed
 Checked instruction "%Y = inttoptr i64 0 to i32*"
Inttoptr Instruction Passed
 Checked instruction "%retval = invoke i32 @Test(i32 15) to label %Continue unwind label %TestCleanup"
Invoke Instruction Passed
 Checked instruction "%val = load i32* %ptr"
Load Instruction Passed
 Checked instruction "<result> = lshr i8 -2, 1"
Lshr Instruction Passed
 Checked instruction "%array2 = malloc [ 12 x i8 ], i32 %size"
Malloc Instruction Passed
 Checked instruction "<result> = mul i32 4, %var"
Mul Instruction Passed
 Checked instruction "<result> = or i32 15, 40"
Or Instruction Passed
 Checked instruction "%indvar = phi i32 [ 0, %LoopHeader ], [ %nextindvar, %Loop ]"
Phi Instruction Passed
 Checked instruction "%Y = ptrtoint i32* %x to i64"
Prtoint Instruction Passed
 Checked instruction "ret void"
Ret Instruction Passed
 Checked instruction "<result> = sdiv i32 4, %var"
Sdiv Instruction Passed
 Checked instruction "%X = select i1 1, i8 17, i8 42"
Select Instruction Passed
 Checked instruction "%X = sext i8 -1 to i16"
Sext Instruction Passed
 Checked instruction "<result> = shl i32 1, 32"
Shl Instruction Passed
 Checked instruction "%result = shufflevector < 4 x i32 > %v1, < 4 x i32 > %v2, < 8 x i32 > < i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7 >"
ShuffleVector Instruction Passed
 Checked instruction "%X = sitofp i32 257 to float"
Sitofp Instruction Passed
 Checked instruction "<result> = srem i32 4, %var"
Srem Instruction Passed
 Checked instruction "store i32 3, i32* %ptr"
Store Instruction Passed
 Checked instruction "<result> = sub i32 4, %var"
Sub Instruction Passed
 Checked instruction "switch i32 %val, label %otherwise [ i32 0, label %onzero i32 1, label %onone i32 2, label %ontwo ]"
Switch Instruction Passed
 Checked instruction "%Y = trunc i32 123 to i1"
Trunc Instruction Passed
 Checked instruction "<result> = udiv i32 4, %var"
Udiv Instruction Passed
 Checked instruction "%Y = uitofp i8 -1 to double"
Uitofp Instruction Passed
 Checked instruction "unreachable"
Unreachable Instruction Passed
 Checked instruction "unwind"
Unwind Instruction Passed
 Checked instruction "<result> = urem i32 4, %var"
Urem Instruction Passed
 Checked instruction "%tmp = va_arg i8** %ap, i32"
VarArg Instruction Passed
 Checked instruction "<result> = xor i32 -1, %V"
Xor Instruction Passed
 Checked instruction "%X = zext i32 257 to i64"
Zext Instruction Passed



INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestInstructions 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaSequence 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTexture2D
INFO     Test completed in 0.11617398262 seconds
INFO      It produced the following output:
(0.004319) KernelPartitioningPass.cpp:76:   KernelPartitioningPass::runOnFunction(_Z6kernelPfii)
(0.004350) KernelPartitioningPass.cpp:113:  partitioning blocks at barriers
(0.004364) KernelPartitioningPass.cpp:148:    encountered 0 barriers
(0.004521) KernelPartitioningPass.cpp:195:   KernelGraph( partitioning with heuristic minimum)
(0.004541) KernelPartitioningPass.cpp:290:  KernelGraph::_partitionMinimumSize()
(0.004589) KernelPartitioningPass.cpp:727:  LiveRegisters [count: 0]
(0.004604) KernelPartitioningPass.cpp:729:    saved 160 bytes per thread
(0.004632) KernelPartitioningPass.cpp:568:    Spill region size is 0
(0.004657) KernelPartitioningPass.cpp:1111: Subkernel::create(_Z6kernelPfii)
(0.004671) KernelPartitioningPass.cpp:1134: Subkernel::_create(_Z6kernelPfii id: 1)
(0.004700) KernelPartitioningPass.cpp:1162: 
(0.004713) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.004749) KernelPartitioningPass.cpp:1173:  adding block $BB_1_0002
(0.004773) KernelPartitioningPass.cpp:1192:   this block exits
(0.004794) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.004809) KernelPartitioningPass.cpp:1262:  ENTRY EDGE: entry -> $BB_1_0002
(0.004827) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.004839) KernelPartitioningPass.cpp:1281:  looking in block mapping: entry -> $BB_1_0002
(0.004851) KernelPartitioningPass.cpp:1285:   examined terminator
(0.004862) KernelPartitioningPass.cpp:1296:   instantiating internal edge
(0.004875) KernelPartitioningPass.cpp:1302:   adding internal edge: entry -> $BB_1_0002 type: fallthrough
(0.004889) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.004901) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.004919) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.004932) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.004946) KernelPartitioningPass.cpp:1374:   $BB_1_0002
(0.004958) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.004984) KernelPartitioningPass.cpp:573:  Linking external edges
(0.004997) KernelPartitioningPass.cpp:575:    but first!
(0.005008) KernelPartitioningPass.cpp:581:    subkernel _subkernel__Z6kernelPfii_1 out edges: 
(0.005020) KernelPartitioningPass.cpp:588:      $BB_1_0002 -> exit
(0.005033) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.005045) KernelPartitioningPass.cpp:604:    now linking
(0.005057) KernelPartitioningPass.cpp:621:     same subkernel
(0.005069) KernelPartitioningPass.cpp:647:   failed to link external edge: $BB_1_0002 -> exit
(0.005170) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.005203) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.005219) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.005232) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_1_0002 -> $BB_1_0002_thread_exit (0 live values
(0.005257) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.005271) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_1_0002_thread_exit
(0.005296) KernelPartitioningPass.cpp:1664:   adding $BB_1_0002 to frontierExitBlocks
(0.005318) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.005332) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.005344) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_1_0002
(0.005365) KernelPartitioningPass.cpp:1782:  block $BB_1_0002 (1 external edges) terminator: exit
(0.005378) KernelPartitioningPass.cpp:1810:    exit
(0.005391) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
Pass/Fail : Pass

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXToLLVMTranslator -i ../tests/ptx 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDeviceSwitching
INFO     Test completed in 0.123755931854 seconds
INFO      It produced the following output:
(0.003491) KernelPartitioningPass.cpp:76:   KernelPartitioningPass::runOnFunction(increment)
(0.003528) KernelPartitioningPass.cpp:113:  partitioning blocks at barriers
(0.003542) KernelPartitioningPass.cpp:148:    encountered 0 barriers
(0.003682) KernelPartitioningPass.cpp:195:   KernelGraph( partitioning with heuristic minimum)
(0.003704) KernelPartitioningPass.cpp:290:  KernelGraph::_partitionMinimumSize()
(0.003754) KernelPartitioningPass.cpp:727:  LiveRegisters [count: 0]
(0.003769) KernelPartitioningPass.cpp:729:    saved 16 bytes per thread
(0.003800) KernelPartitioningPass.cpp:568:    Spill region size is 0
(0.003827) KernelPartitioningPass.cpp:1111: Subkernel::create(increment)
(0.003842) KernelPartitioningPass.cpp:1134: Subkernel::_create(increment id: 1)
(0.003870) KernelPartitioningPass.cpp:1162: 
(0.003883) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.003902) KernelPartitioningPass.cpp:1173:  adding block $BB_1_0002
(0.003931) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_1_0002 -> $BB_1_0003
(0.003947) KernelPartitioningPass.cpp:1262:  ENTRY EDGE: entry -> $BB_1_0002
(0.003967) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.003979) KernelPartitioningPass.cpp:1281:  looking in block mapping: entry -> $BB_1_0002
(0.003991) KernelPartitioningPass.cpp:1285:   examined terminator
(0.004003) KernelPartitioningPass.cpp:1296:   instantiating internal edge
(0.004016) KernelPartitioningPass.cpp:1302:   adding internal edge: entry -> $BB_1_0002 type: fallthrough
(0.004031) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.004043) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.004062) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.004076) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.004089) KernelPartitioningPass.cpp:1374:   $BB_1_0002
(0.004101) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.004129) KernelPartitioningPass.cpp:1111: Subkernel::create(increment)
(0.004142) KernelPartitioningPass.cpp:1134: Subkernel::_create(increment id: 2)
(0.004164) KernelPartitioningPass.cpp:1162: 
(0.004176) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.004189) KernelPartitioningPass.cpp:1173:  adding block $BB_1_0003
(0.004203) KernelPartitioningPass.cpp:1192:   this block exits
(0.004218) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_1_0003 -> exit
(0.004234) KernelPartitioningPass.cpp:1259:   adding EXTERNAL IN-Edge $BB_1_0002 -> $BB_1_0003 with entry ID 131073
(0.004248) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.004259) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.004272) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.004285) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.004298) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.004310) KernelPartitioningPass.cpp:1374:   $BB_1_0003
(0.004322) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.004344) KernelPartitioningPass.cpp:573:  Linking external edges
(0.004356) KernelPartitioningPass.cpp:575:    but first!
(0.004367) KernelPartitioningPass.cpp:581:    subkernel _subkernel_increment_1 out edges: 
(0.004379) KernelPartitioningPass.cpp:588:      $BB_1_0002 -> $BB_1_0003
(0.004391) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.004402) KernelPartitioningPass.cpp:581:    subkernel _subkernel_increment_2 out edges: 
(0.004414) KernelPartitioningPass.cpp:588:      $BB_1_0003 -> exit
(0.004425) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.004436) KernelPartitioningPass.cpp:599:      $BB_1_0002 -> $BB_1_0003
(0.004448) KernelPartitioningPass.cpp:604:    now linking
(0.004459) KernelPartitioningPass.cpp:621:     same subkernel
(0.004470) KernelPartitioningPass.cpp:635:    linking $BB_1_0002_exit_handler_to_1_0003 to $BB_1_0003_entry_handler_from_1_0002 (entry 131073)
(0.004482) KernelPartitioningPass.cpp:621:     same subkernel
(0.004537) KernelPartitioningPass.cpp:647:   failed to link external edge: $BB_1_0003 -> exit
(0.004599) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.004627) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.004644) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.004657) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_1_0002 -> $BB_1_0002_exit_handler_to_1_0003 (0 live values
(0.004686) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.004701) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_1_0002_exit_handler_to_1_0003
(0.004732) KernelPartitioningPass.cpp:1664:   adding $BB_1_0002 to frontierExitBlocks
(0.004757) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.004771) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.004784) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_1_0002
(0.004835) KernelPartitioningPass.cpp:1782:  block $BB_1_0002 (1 external edges) terminator: st.global.u32 [%r0], %r2
(0.004859) KernelPartitioningPass.cpp:1821:  fall-through non-control-flow instruction to external edge: st.global.u32 [%r0], %r2
(0.004871) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
(0.004933) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.004952) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.004966) KernelPartitioningPass.cpp:1585:     IN-edge: $BB_1_0003_entry_handler_from_1_0002 -> $BB_1_0003 (0 live values
(0.004990) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.005004) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_1_0003 -> $BB_1_0003_thread_exit (0 live values
(0.005019) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.005032) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_1_0003_thread_exit
(0.005053) KernelPartitioningPass.cpp:1664:   adding $BB_1_0003 to frontierExitBlocks
(0.005067) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.005081) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.005093) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_1_0003
(0.005109) KernelPartitioningPass.cpp:1782:  block $BB_1_0003 (1 external edges) terminator: exit
(0.005122) KernelPartitioningPass.cpp:1810:    exit
(0.005134) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
(0.027557) KernelPartitioningPass.cpp:76:   KernelPartitioningPass::runOnFunction(increment)
(0.027590) KernelPartitioningPass.cpp:113:  partitioning blocks at barriers
(0.027603) KernelPartitioningPass.cpp:148:    encountered 0 barriers
(0.027685) KernelPartitioningPass.cpp:195:   KernelGraph( partitioning with heuristic minimum)
(0.027700) KernelPartitioningPass.cpp:290:  KernelGraph::_partitionMinimumSize()
(0.027728) KernelPartitioningPass.cpp:727:  LiveRegisters [count: 0]
(0.027741) KernelPartitioningPass.cpp:729:    saved 16 bytes per thread
(0.027767) KernelPartitioningPass.cpp:568:    Spill region size is 0
(0.027786) KernelPartitioningPass.cpp:1111: Subkernel::create(increment)
(0.027799) KernelPartitioningPass.cpp:1134: Subkernel::_create(increment id: 1)
(0.027822) KernelPartitioningPass.cpp:1162: 
(0.027835) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.027852) KernelPartitioningPass.cpp:1173:  adding block $BB_1_0002
(0.027875) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_1_0002 -> $BB_1_0003
(0.027890) KernelPartitioningPass.cpp:1262:  ENTRY EDGE: entry -> $BB_1_0002
(0.027907) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.027918) KernelPartitioningPass.cpp:1281:  looking in block mapping: entry -> $BB_1_0002
(0.027930) KernelPartitioningPass.cpp:1285:   examined terminator
(0.027942) KernelPartitioningPass.cpp:1296:   instantiating internal edge
(0.027954) KernelPartitioningPass.cpp:1302:   adding internal edge: entry -> $BB_1_0002 type: fallthrough
(0.027968) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.028023) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.028039) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.028054) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.028066) KernelPartitioningPass.cpp:1374:   $BB_1_0002
(0.028078) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.028101) KernelPartitioningPass.cpp:1111: Subkernel::create(increment)
(0.028114) KernelPartitioningPass.cpp:1134: Subkernel::_create(increment id: 2)
(0.028136) KernelPartitioningPass.cpp:1162: 
(0.028148) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.028162) KernelPartitioningPass.cpp:1173:  adding block $BB_1_0003
(0.028176) KernelPartitioningPass.cpp:1192:   this block exits
(0.028192) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_1_0003 -> exit
(0.028208) KernelPartitioningPass.cpp:1259:   adding EXTERNAL IN-Edge $BB_1_0002 -> $BB_1_0003 with entry ID 131073
(0.028222) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.028233) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.028246) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.028259) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.028272) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.028284) KernelPartitioningPass.cpp:1374:   $BB_1_0003
(0.028296) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.028316) KernelPartitioningPass.cpp:573:  Linking external edges
(0.028329) KernelPartitioningPass.cpp:575:    but first!
(0.028340) KernelPartitioningPass.cpp:581:    subkernel _subkernel_increment_1 out edges: 
(0.028352) KernelPartitioningPass.cpp:588:      $BB_1_0002 -> $BB_1_0003
(0.028363) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.028375) KernelPartitioningPass.cpp:581:    subkernel _subkernel_increment_2 out edges: 
(0.028387) KernelPartitioningPass.cpp:588:      $BB_1_0003 -> exit
(0.028399) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.028410) KernelPartitioningPass.cpp:599:      $BB_1_0002 -> $BB_1_0003
(0.028422) KernelPartitioningPass.cpp:604:    now linking
(0.028434) KernelPartitioningPass.cpp:621:     same subkernel
(0.028445) KernelPartitioningPass.cpp:635:    linking $BB_1_0002_exit_handler_to_1_0003 to $BB_1_0003_entry_handler_from_1_0002 (entry 131073)
(0.028458) KernelPartitioningPass.cpp:621:     same subkernel
(0.028469) KernelPartitioningPass.cpp:647:   failed to link external edge: $BB_1_0003 -> exit
(0.028523) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.028545) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.028559) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.028571) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_1_0002 -> $BB_1_0002_exit_handler_to_1_0003 (0 live values
(0.028590) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.028604) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_1_0002_exit_handler_to_1_0003
(0.028633) KernelPartitioningPass.cpp:1664:   adding $BB_1_0002 to frontierExitBlocks
(0.028650) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.028664) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.028677) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_1_0002
(0.028706) KernelPartitioningPass.cpp:1782:  block $BB_1_0002 (1 external edges) terminator: st.global.u32 [%r0], %r2
(0.028729) KernelPartitioningPass.cpp:1821:  fall-through non-control-flow instruction to external edge: st.global.u32 [%r0], %r2
(0.028741) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
(0.028799) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.028817) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.028830) KernelPartitioningPass.cpp:1585:     IN-edge: $BB_1_0003_entry_handler_from_1_0002 -> $BB_1_0003 (0 live values
(0.028882) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.028896) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_1_0003 -> $BB_1_0003_thread_exit (0 live values
(0.028912) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.028924) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_1_0003_thread_exit
(0.028946) KernelPartitioningPass.cpp:1664:   adding $BB_1_0003 to frontierExitBlocks
(0.028960) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.028974) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.028986) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_1_0003
(0.028999) KernelPartitioningPass.cpp:1782:  block $BB_1_0003 (1 external edges) terminator: exit
(0.029011) KernelPartitioningPass.cpp:1810:    exit
(0.029024) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
(0.034089) KernelPartitioningPass.cpp:76:   KernelPartitioningPass::runOnFunction(increment)
(0.034106) KernelPartitioningPass.cpp:113:  partitioning blocks at barriers
(0.034115) KernelPartitioningPass.cpp:148:    encountered 0 barriers
(0.034162) KernelPartitioningPass.cpp:195:   KernelGraph( partitioning with heuristic minimum)
(0.034172) KernelPartitioningPass.cpp:290:  KernelGraph::_partitionMinimumSize()
(0.034191) KernelPartitioningPass.cpp:727:  LiveRegisters [count: 0]
(0.034200) KernelPartitioningPass.cpp:729:    saved 16 bytes per thread
(0.034216) KernelPartitioningPass.cpp:568:    Spill region size is 0
(0.034228) KernelPartitioningPass.cpp:1111: Subkernel::create(increment)
(0.034237) KernelPartitioningPass.cpp:1134: Subkernel::_create(increment id: 1)
(0.034253) KernelPartitioningPass.cpp:1162: 
(0.034262) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.034273) KernelPartitioningPass.cpp:1173:  adding block $BB_1_0002
(0.034288) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_1_0002 -> $BB_1_0003
(0.034297) KernelPartitioningPass.cpp:1262:  ENTRY EDGE: entry -> $BB_1_0002
(0.034308) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.034316) KernelPartitioningPass.cpp:1281:  looking in block mapping: entry -> $BB_1_0002
(0.034325) KernelPartitioningPass.cpp:1285:   examined terminator
(0.034332) KernelPartitioningPass.cpp:1296:   instantiating internal edge
(0.034341) KernelPartitioningPass.cpp:1302:   adding internal edge: entry -> $BB_1_0002 type: fallthrough
(0.034351) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.034359) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.034368) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.034377) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.034385) KernelPartitioningPass.cpp:1374:   $BB_1_0002
(0.034394) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.034410) KernelPartitioningPass.cpp:1111: Subkernel::create(increment)
(0.034419) KernelPartitioningPass.cpp:1134: Subkernel::_create(increment id: 2)
(0.034433) KernelPartitioningPass.cpp:1162: 
(0.034441) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.034451) KernelPartitioningPass.cpp:1173:  adding block $BB_1_0003
(0.034460) KernelPartitioningPass.cpp:1192:   this block exits
(0.034471) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_1_0003 -> exit
(0.034482) KernelPartitioningPass.cpp:1259:   adding EXTERNAL IN-Edge $BB_1_0002 -> $BB_1_0003 with entry ID 131073
(0.034492) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.034500) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.034508) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.034517) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.034526) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.034534) KernelPartitioningPass.cpp:1374:   $BB_1_0003
(0.034542) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.034599) KernelPartitioningPass.cpp:573:  Linking external edges
(0.034609) KernelPartitioningPass.cpp:575:    but first!
(0.034617) KernelPartitioningPass.cpp:581:    subkernel _subkernel_increment_1 out edges: 
(0.034626) KernelPartitioningPass.cpp:588:      $BB_1_0002 -> $BB_1_0003
(0.034635) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.034643) KernelPartitioningPass.cpp:581:    subkernel _subkernel_increment_2 out edges: 
(0.034652) KernelPartitioningPass.cpp:588:      $BB_1_0003 -> exit
(0.034660) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.034668) KernelPartitioningPass.cpp:599:      $BB_1_0002 -> $BB_1_0003
(0.034676) KernelPartitioningPass.cpp:604:    now linking
(0.034684) KernelPartitioningPass.cpp:621:     same subkernel
(0.034692) KernelPartitioningPass.cpp:635:    linking $BB_1_0002_exit_handler_to_1_0003 to $BB_1_0003_entry_handler_from_1_0002 (entry 131073)
(0.034701) KernelPartitioningPass.cpp:621:     same subkernel
(0.034709) KernelPartitioningPass.cpp:647:   failed to link external edge: $BB_1_0003 -> exit
(0.034747) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.034762) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.034770) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.034779) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_1_0002 -> $BB_1_0002_exit_handler_to_1_0003 (0 live values
(0.034792) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.034802) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_1_0002_exit_handler_to_1_0003
(0.034821) KernelPartitioningPass.cpp:1664:   adding $BB_1_0002 to frontierExitBlocks
(0.034832) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.034841) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.034849) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_1_0002
(0.034882) KernelPartitioningPass.cpp:1782:  block $BB_1_0002 (1 external edges) terminator: st.global.u32 [%r0], %r2
(0.034898) KernelPartitioningPass.cpp:1821:  fall-through non-control-flow instruction to external edge: st.global.u32 [%r0], %r2
(0.034906) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
(0.034945) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.034957) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.034966) KernelPartitioningPass.cpp:1585:     IN-edge: $BB_1_0003_entry_handler_from_1_0002 -> $BB_1_0003 (0 live values
(0.034981) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.034990) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_1_0003 -> $BB_1_0003_thread_exit (0 live values
(0.035000) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.035009) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_1_0003_thread_exit
(0.035025) KernelPartitioningPass.cpp:1664:   adding $BB_1_0003 to frontierExitBlocks
(0.035034) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.035043) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.035051) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_1_0003
(0.035060) KernelPartitioningPass.cpp:1782:  block $BB_1_0003 (1 external edges) terminator: exit
(0.035069) KernelPartitioningPass.cpp:1810:    exit
(0.035076) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
Pass/Fail : Pass


Name : TestDeviceSwitching

Description: A unit test for the ability of the CUDA runtime to switch 
             between devices and use multiple threads Test Points: 1) In a single 
             threaded application, iterate across all devices launching the same 
             simple kernel each time 2) Test context migration support in 
             ocelot. Iterate across all devices, launching a simple kernel that 
             updates shared variable. Use the context switch mechanism to 
             migrate the shared data. 3) Test multi-threading support. Launch one 
             host thread to allocate memory, pass pointers to worker 
             threads, each of which should launch independent kernels in 
             parallel.


Test Seed : 1336535631
Test time : 0.0339463

Status : Test Point 1 Passed
Test Point 2 Passed
Test Point 3 Passed



INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLexer -i ../tests/ptx 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestInstructions
INFO     Test completed in 0.0982749462128 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestInstructions

Description: 


Test Seed : 1336535632
Test time : 0.0011971

Status : Test output:
Accessors test passed.
pass: load and store instructions
Abs test passed.
pass: arithmetic instructions
pass: exotic arithmetic instructions
pass: floating-point instructions
pass: logical instructions
pass: comparison instructions
pass: predicated Add and Ld isntructions



INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestIndirectFunctionCall 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXToLLVMTranslator
INFO     Test completed in 0.0593700408936 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestPTXToLLVMTranslator

Description: This is a basic test that just tries to get through a 
             translation successfully of as many PTX programs as possible Test 
             Points: 1) Scan for all PTX files in a directory, try to 
             translate them.


Test Seed : 1336535632
Test time : 2.57492e-05

Status : 


INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTextureArray 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaSequence
INFO     Test completed in 0.129978179932 seconds
INFO      It produced the following output:
sequence() - A_gpu = 0x09f1000
(0.017204) KernelPartitioningPass.cpp:76:   KernelPartitioningPass::runOnFunction(sequence)
(0.017246) KernelPartitioningPass.cpp:113:  partitioning blocks at barriers
(0.017256) KernelPartitioningPass.cpp:148:    encountered 0 barriers
(0.017420) KernelPartitioningPass.cpp:195:   KernelGraph( partitioning with heuristic minimum)
(0.017437) KernelPartitioningPass.cpp:290:  KernelGraph::_partitionMinimumSize()
(0.017488) KernelPartitioningPass.cpp:727:  LiveRegisters [count: 2]
(0.017500) KernelPartitioningPass.cpp:729:    saved 64 bytes per thread
(0.017528) KernelPartitioningPass.cpp:568:    Spill region size is 16
(0.017550) KernelPartitioningPass.cpp:1111: Subkernel::create(sequence)
(0.017560) KernelPartitioningPass.cpp:1134: Subkernel::_create(sequence id: 1)
(0.017582) KernelPartitioningPass.cpp:1162: 
(0.017591) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.017608) KernelPartitioningPass.cpp:1173:  adding block $BB_1_0002
(0.017634) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_1_0002 -> $BB_1_0003
(0.017648) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_1_0002 -> $BB_1_0004
(0.017657) KernelPartitioningPass.cpp:1262:  ENTRY EDGE: entry -> $BB_1_0002
(0.017672) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.017680) KernelPartitioningPass.cpp:1281:  looking in block mapping: entry -> $BB_1_0002
(0.017689) KernelPartitioningPass.cpp:1285:   examined terminator
(0.017697) KernelPartitioningPass.cpp:1296:   instantiating internal edge
(0.017706) KernelPartitioningPass.cpp:1302:   adding internal edge: entry -> $BB_1_0002 type: fallthrough
(0.017716) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.017725) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.017740) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.017750) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.017760) KernelPartitioningPass.cpp:1374:   $BB_1_0002
(0.017769) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.017796) KernelPartitioningPass.cpp:1111: Subkernel::create(sequence)
(0.017805) KernelPartitioningPass.cpp:1134: Subkernel::_create(sequence id: 2)
(0.017822) KernelPartitioningPass.cpp:1162: 
(0.017830) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.017840) KernelPartitioningPass.cpp:1173:  adding block $BB_1_0003
(0.017850) KernelPartitioningPass.cpp:1192:   this block exits
(0.017861) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_1_0003 -> exit
(0.017873) KernelPartitioningPass.cpp:1259:   adding EXTERNAL IN-Edge $BB_1_0002 -> $BB_1_0003 with entry ID 131073
(0.017882) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.017890) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.017899) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.017908) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.017916) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.017925) KernelPartitioningPass.cpp:1374:   $BB_1_0003
(0.017933) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.017948) KernelPartitioningPass.cpp:1111: Subkernel::create(sequence)
(0.017957) KernelPartitioningPass.cpp:1134: Subkernel::_create(sequence id: 3)
(0.017972) KernelPartitioningPass.cpp:1162: 
(0.017980) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.017993) KernelPartitioningPass.cpp:1173:  adding block $BB_1_0004
(0.018004) KernelPartitioningPass.cpp:1192:   this block exits
(0.018014) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_1_0004 -> exit
(0.018025) KernelPartitioningPass.cpp:1259:   adding EXTERNAL IN-Edge $BB_1_0002 -> $BB_1_0004 with entry ID 196609
(0.018035) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.018043) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.018052) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.018114) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.018124) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.018133) KernelPartitioningPass.cpp:1374:   $BB_1_0004
(0.018142) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.018157) KernelPartitioningPass.cpp:573:  Linking external edges
(0.018165) KernelPartitioningPass.cpp:575:    but first!
(0.018173) KernelPartitioningPass.cpp:581:    subkernel _subkernel_sequence_1 out edges: 
(0.018181) KernelPartitioningPass.cpp:588:      $BB_1_0002 -> $BB_1_0003
(0.018192) KernelPartitioningPass.cpp:588:      $BB_1_0002 -> $BB_1_0004
(0.018200) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.018209) KernelPartitioningPass.cpp:581:    subkernel _subkernel_sequence_2 out edges: 
(0.018217) KernelPartitioningPass.cpp:588:      $BB_1_0003 -> exit
(0.018225) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.018232) KernelPartitioningPass.cpp:599:      $BB_1_0002 -> $BB_1_0003
(0.018240) KernelPartitioningPass.cpp:581:    subkernel _subkernel_sequence_3 out edges: 
(0.018248) KernelPartitioningPass.cpp:588:      $BB_1_0004 -> exit
(0.018255) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.018263) KernelPartitioningPass.cpp:599:      $BB_1_0002 -> $BB_1_0004
(0.018270) KernelPartitioningPass.cpp:604:    now linking
(0.018278) KernelPartitioningPass.cpp:621:     same subkernel
(0.018286) KernelPartitioningPass.cpp:635:    linking $BB_1_0002_exit_handler_to_1_0003 to $BB_1_0003_entry_handler_from_1_0002 (entry 131073)
(0.018295) KernelPartitioningPass.cpp:621:     same subkernel
(0.018303) KernelPartitioningPass.cpp:635:    linking $BB_1_0002_exit_handler_to_1_0004 to $BB_1_0004_entry_handler_from_1_0002 (entry 196609)
(0.018311) KernelPartitioningPass.cpp:621:     same subkernel
(0.018319) KernelPartitioningPass.cpp:647:   failed to link external edge: $BB_1_0003 -> exit
(0.018327) KernelPartitioningPass.cpp:621:     same subkernel
(0.018334) KernelPartitioningPass.cpp:647:   failed to link external edge: $BB_1_0004 -> exit
(0.018396) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.018420) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.018431) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.018441) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_1_0002 -> $BB_1_0002_exit_handler_to_1_0003 (2 live values
(0.018466) KernelPartitioningPass.cpp:1731:       alive: 2 [type: s64, offset: 0]
(0.018489) KernelPartitioningPass.cpp:1731:       alive: 6 [type: s32, offset: 8]
(0.018503) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.018514) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_1_0002_exit_handler_to_1_0003
(0.018533) KernelPartitioningPass.cpp:1664:   adding $BB_1_0002 to frontierExitBlocks
(0.018548) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_1_0002 -> $BB_1_0002_exit_handler_to_1_0004 (2 live values
(0.018559) KernelPartitioningPass.cpp:1731:       alive: 2 [type: s64, offset: 0]
(0.018574) KernelPartitioningPass.cpp:1731:       alive: 6 [type: s32, offset: 8]
(0.018588) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 1
(0.018597) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_1_0002_exit_handler_to_1_0004
(0.018616) KernelPartitioningPass.cpp:1664:   adding $BB_1_0002 to frontierExitBlocks
(0.018627) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.018637) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.018646) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_1_0002
(0.018681) KernelPartitioningPass.cpp:1782:  block $BB_1_0002 (2 external edges) terminator: @%p7 bra $BB_1_0004
(0.018692) KernelPartitioningPass.cpp:1785:    branch
(0.018700) KernelPartitioningPass.cpp:1791:  1 external edge, modifying branch target to point to handler
(0.018711) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
(0.018764) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.018804) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.018814) KernelPartitioningPass.cpp:1585:     IN-edge: $BB_1_0003_entry_handler_from_1_0002 -> $BB_1_0003 (2 live values
(0.018832) KernelPartitioningPass.cpp:1725:       skipping alive: 2 [type: s64]
(0.018843) KernelPartitioningPass.cpp:1725:       skipping alive: 6 [type: s32]
(0.018855) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.018865) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_1_0003 -> $BB_1_0003_thread_exit (0 live values
(0.018875) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.018884) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_1_0003_thread_exit
(0.018898) KernelPartitioningPass.cpp:1664:   adding $BB_1_0003 to frontierExitBlocks
(0.018909) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.018918) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.018927) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_1_0003
(0.018938) KernelPartitioningPass.cpp:1782:  block $BB_1_0003 (1 external edges) terminator: exit
(0.018947) KernelPartitioningPass.cpp:1810:    exit
(0.018955) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
(0.019002) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.019017) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.019026) KernelPartitioningPass.cpp:1585:     IN-edge: $BB_1_0004_entry_handler_from_1_0002 -> $BB_1_0004 (2 live values
(0.019037) KernelPartitioningPass.cpp:1731:       alive: 2 [type: s64, offset: 0]
(0.019053) KernelPartitioningPass.cpp:1731:       alive: 6 [type: s32, offset: 8]
(0.019069) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.019079) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_1_0004 -> $BB_1_0004_thread_exit (0 live values
(0.019089) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.019098) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_1_0004_thread_exit
(0.019113) KernelPartitioningPass.cpp:1664:   adding $BB_1_0004 to frontierExitBlocks
(0.019123) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.019132) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.019140) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_1_0004
(0.019148) KernelPartitioningPass.cpp:1782:  block $BB_1_0004 (1 external edges) terminator: exit
(0.019157) KernelPartitioningPass.cpp:1810:    exit
(0.019166) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
(0.039592) KernelPartitioningPass.cpp:76:   KernelPartitioningPass::runOnFunction(testShr)
(0.039621) KernelPartitioningPass.cpp:113:  partitioning blocks at barriers
(0.039631) KernelPartitioningPass.cpp:131:    barrier in block $BB_4_0002(instruction 11)
(0.039659) KernelPartitioningPass.cpp:148:    encountered 1 barriers
(0.039757) KernelPartitioningPass.cpp:195:   KernelGraph( partitioning with heuristic minimum)
(0.039768) KernelPartitioningPass.cpp:290:  KernelGraph::_partitionMinimumSize()
(0.039797) KernelPartitioningPass.cpp:727:  LiveRegisters [count: 3]
(0.039807) KernelPartitioningPass.cpp:729:    saved 136 bytes per thread
(0.039828) KernelPartitioningPass.cpp:568:    Spill region size is 24
(0.039840) KernelPartitioningPass.cpp:1111: Subkernel::create(testShr)
(0.039849) KernelPartitioningPass.cpp:1134: Subkernel::_create(testShr id: 4)
(0.039868) KernelPartitioningPass.cpp:1162: 
(0.039876) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.039896) KernelPartitioningPass.cpp:1173:  adding block $BB_4_0002
(0.039913) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_4_0002 -> $BB_4_0002_bar
(0.039923) KernelPartitioningPass.cpp:1262:  ENTRY EDGE: entry -> $BB_4_0002
(0.039935) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.039943) KernelPartitioningPass.cpp:1281:  looking in block mapping: entry -> $BB_4_0002
(0.039951) KernelPartitioningPass.cpp:1285:   examined terminator
(0.039978) KernelPartitioningPass.cpp:1296:   instantiating internal edge
(0.039987) KernelPartitioningPass.cpp:1302:   adding internal edge: entry -> $BB_4_0002 type: fallthrough
(0.039996) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.040004) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.040014) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.040023) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.040032) KernelPartitioningPass.cpp:1374:   $BB_4_0002
(0.040040) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.040057) KernelPartitioningPass.cpp:1111: Subkernel::create(testShr)
(0.040066) KernelPartitioningPass.cpp:1134: Subkernel::_create(testShr id: 5)
(0.040082) KernelPartitioningPass.cpp:1162: 
(0.040090) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.040109) KernelPartitioningPass.cpp:1173:  adding block $BB_4_0002_bar
(0.040121) KernelPartitioningPass.cpp:1192:   this block exits
(0.040132) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_4_0002_bar -> exit
(0.040144) KernelPartitioningPass.cpp:1259:   adding EXTERNAL IN-Edge $BB_4_0002 -> $BB_4_0002_bar with entry ID 327681
(0.040154) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.040162) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.040170) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.040179) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.040188) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.040196) KernelPartitioningPass.cpp:1374:   $BB_4_0002_bar
(0.040204) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.040218) KernelPartitioningPass.cpp:573:  Linking external edges
(0.040226) KernelPartitioningPass.cpp:575:    but first!
(0.040233) KernelPartitioningPass.cpp:581:    subkernel _subkernel_testShr_4 out edges: 
(0.040241) KernelPartitioningPass.cpp:588:      $BB_4_0002 -> $BB_4_0002_bar
(0.040249) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.040257) KernelPartitioningPass.cpp:581:    subkernel _subkernel_testShr_5 out edges: 
(0.040265) KernelPartitioningPass.cpp:588:      $BB_4_0002_bar -> exit
(0.040272) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.040280) KernelPartitioningPass.cpp:599:      $BB_4_0002 -> $BB_4_0002_bar
(0.040287) KernelPartitioningPass.cpp:604:    now linking
(0.040295) KernelPartitioningPass.cpp:621:     same subkernel
(0.040303) KernelPartitioningPass.cpp:635:    linking $BB_4_0002_exit_handler_to_4_0002_bar to $BB_4_0002_bar_entry_handler_from_4_0002 (entry 327681)
(0.040311) KernelPartitioningPass.cpp:621:     same subkernel
(0.040318) KernelPartitioningPass.cpp:647:   failed to link external edge: $BB_4_0002_bar -> exit
(0.040368) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.040384) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.040394) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.040402) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_4_0002 -> $BB_4_0002_exit_handler_to_4_0002_bar (3 live values
(0.040416) KernelPartitioningPass.cpp:1731:       alive: 1 [type: s64, offset: 0]
(0.040432) KernelPartitioningPass.cpp:1731:       alive: 5 [type: s32, offset: 8]
(0.040445) KernelPartitioningPass.cpp:1731:       alive: 8 [type: s64, offset: 16]
(0.040457) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.040467) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_4_0002_exit_handler_to_4_0002_bar
(0.040484) KernelPartitioningPass.cpp:1664:   adding $BB_4_0002 to frontierExitBlocks
(0.040496) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.040505) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.040513) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_4_0002
(0.040537) KernelPartitioningPass.cpp:1782:  block $BB_4_0002 (1 external edges) terminator: bar.sync 0
(0.040561) KernelPartitioningPass.cpp:1800:    barrier
(0.040570) KernelPartitioningPass.cpp:1801:     block: $BB_4_0002
(0.040580) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
(0.040648) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.040668) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.040678) KernelPartitioningPass.cpp:1585:     IN-edge: $BB_4_0002_bar_entry_handler_from_4_0002 -> $BB_4_0002_bar (3 live values
(0.040690) KernelPartitioningPass.cpp:1731:       alive: 1 [type: s64, offset: 0]
(0.040705) KernelPartitioningPass.cpp:1731:       alive: 5 [type: s32, offset: 8]
(0.040718) KernelPartitioningPass.cpp:1731:       alive: 8 [type: s64, offset: 16]
(0.040733) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.040742) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_4_0002_bar -> $BB_4_0002_bar_thread_exit (0 live values
(0.040752) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.040761) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_4_0002_bar_thread_exit
(0.040776) KernelPartitioningPass.cpp:1664:   adding $BB_4_0002_bar to frontierExitBlocks
(0.040786) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.040795) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.040803) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_4_0002_bar
(0.040812) KernelPartitioningPass.cpp:1782:  block $BB_4_0002_bar (1 external edges) terminator: exit
(0.040821) KernelPartitioningPass.cpp:1810:    exit
(0.040828) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
Pass/Fail : Pass

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestKernels 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLexer
INFO     Test completed in 0.0839309692383 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestLexer

Description: Tests for the PTX lexer. Test Point 1: Scan a PTX file and 
             write out a temp stream, scan the stream again and make sure that the 
             two sets of tokens match


Test Seed : 1336535632
Test time : 2.7895e-05

Status : 


INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCalVectorScale 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestIndirectFunctionCall
INFO     Test completed in 0.0722289085388 seconds
INFO      It produced the following output:
(0.004433) KernelPartitioningPass.cpp:76:   KernelPartitioningPass::runOnFunction(kernelEntry)
(0.004470) KernelPartitioningPass.cpp:113:  partitioning blocks at barriers
(0.004480) KernelPartitioningPass.cpp:148:    encountered 0 barriers
(0.004692) KernelPartitioningPass.cpp:195:   KernelGraph( partitioning with heuristic minimum)
(0.004709) KernelPartitioningPass.cpp:290:  KernelGraph::_partitionMinimumSize()
(0.004783) KernelPartitioningPass.cpp:727:  LiveRegisters [count: 4]
(0.004795) KernelPartitioningPass.cpp:729:    saved 88 bytes per thread
(0.004829) KernelPartitioningPass.cpp:568:    Spill region size is 32
(0.004851) KernelPartitioningPass.cpp:1111: Subkernel::create(kernelEntry)
(0.004861) KernelPartitioningPass.cpp:1134: Subkernel::_create(kernelEntry id: 1)
(0.004884) KernelPartitioningPass.cpp:1162: 
(0.004894) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.004912) KernelPartitioningPass.cpp:1173:  adding block $BB_5_0002
(0.004938) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_5_0002 -> $BB_5_0003
(0.004952) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_5_0002 -> $BB_5_0008
(0.004961) KernelPartitioningPass.cpp:1262:  ENTRY EDGE: entry -> $BB_5_0002
(0.004977) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.004986) KernelPartitioningPass.cpp:1281:  looking in block mapping: entry -> $BB_5_0002
(0.004994) KernelPartitioningPass.cpp:1285:   examined terminator
(0.005002) KernelPartitioningPass.cpp:1296:   instantiating internal edge
(0.005011) KernelPartitioningPass.cpp:1302:   adding internal edge: entry -> $BB_5_0002 type: fallthrough
(0.005022) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.005030) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.005045) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.005056) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.005066) KernelPartitioningPass.cpp:1374:   $BB_5_0002
(0.005075) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.005097) KernelPartitioningPass.cpp:1111: Subkernel::create(kernelEntry)
(0.005106) KernelPartitioningPass.cpp:1134: Subkernel::_create(kernelEntry id: 2)
(0.005123) KernelPartitioningPass.cpp:1162: 
(0.005131) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.005141) KernelPartitioningPass.cpp:1173:  adding block $BB_5_0003
(0.005152) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_5_0003 -> $BB_5_0004
(0.005163) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_5_0003 -> $BB_5_0007
(0.005174) KernelPartitioningPass.cpp:1259:   adding EXTERNAL IN-Edge $BB_5_0002 -> $BB_5_0003 with entry ID 131073
(0.005183) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.005191) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.005200) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.005210) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.005219) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.005228) KernelPartitioningPass.cpp:1374:   $BB_5_0003
(0.005236) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.005252) KernelPartitioningPass.cpp:1111: Subkernel::create(kernelEntry)
(0.005260) KernelPartitioningPass.cpp:1134: Subkernel::_create(kernelEntry id: 3)
(0.005276) KernelPartitioningPass.cpp:1162: 
(0.005284) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.005294) KernelPartitioningPass.cpp:1173:  adding block $BB_5_0004
(0.005305) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_5_0004 -> $BB_5_0005
(0.005316) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_5_0004 -> $BB_5_0006
(0.005327) KernelPartitioningPass.cpp:1259:   adding EXTERNAL IN-Edge $BB_5_0003 -> $BB_5_0004 with entry ID 196609
(0.005336) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.005344) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.005352) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.005410) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.005421) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.005430) KernelPartitioningPass.cpp:1374:   $BB_5_0004
(0.005438) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.005454) KernelPartitioningPass.cpp:1111: Subkernel::create(kernelEntry)
(0.005462) KernelPartitioningPass.cpp:1134: Subkernel::_create(kernelEntry id: 4)
(0.005478) KernelPartitioningPass.cpp:1162: 
(0.005486) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.005497) KernelPartitioningPass.cpp:1173:  adding block $BB_5_0005
(0.005508) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_5_0005 -> $BB_5_0009
(0.005519) KernelPartitioningPass.cpp:1259:   adding EXTERNAL IN-Edge $BB_5_0004 -> $BB_5_0005 with entry ID 262145
(0.005528) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.005536) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.005544) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.005553) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.005561) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.005570) KernelPartitioningPass.cpp:1374:   $BB_5_0005
(0.005579) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.005594) KernelPartitioningPass.cpp:1111: Subkernel::create(kernelEntry)
(0.005602) KernelPartitioningPass.cpp:1134: Subkernel::_create(kernelEntry id: 5)
(0.005618) KernelPartitioningPass.cpp:1162: 
(0.005626) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.005636) KernelPartitioningPass.cpp:1173:  adding block $BB_5_0006
(0.005647) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_5_0006 -> $BB_5_0009
(0.005658) KernelPartitioningPass.cpp:1259:   adding EXTERNAL IN-Edge $BB_5_0004 -> $BB_5_0006 with entry ID 327681
(0.005667) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.005675) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.005684) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.005694) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.005703) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.005711) KernelPartitioningPass.cpp:1374:   $BB_5_0006
(0.005720) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.005734) KernelPartitioningPass.cpp:1111: Subkernel::create(kernelEntry)
(0.005743) KernelPartitioningPass.cpp:1134: Subkernel::_create(kernelEntry id: 6)
(0.005758) KernelPartitioningPass.cpp:1162: 
(0.005766) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.005775) KernelPartitioningPass.cpp:1173:  adding block $BB_5_0007
(0.005786) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_5_0007 -> $BB_5_0009
(0.005797) KernelPartitioningPass.cpp:1259:   adding EXTERNAL IN-Edge $BB_5_0003 -> $BB_5_0007 with entry ID 393217
(0.005806) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.005814) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.005823) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.005832) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.005841) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.005850) KernelPartitioningPass.cpp:1374:   $BB_5_0007
(0.005858) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.005873) KernelPartitioningPass.cpp:1111: Subkernel::create(kernelEntry)
(0.005881) KernelPartitioningPass.cpp:1134: Subkernel::_create(kernelEntry id: 7)
(0.005896) KernelPartitioningPass.cpp:1162: 
(0.005904) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.005913) KernelPartitioningPass.cpp:1173:  adding block $BB_5_0008
(0.005925) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_5_0008 -> $BB_5_0009
(0.005936) KernelPartitioningPass.cpp:1259:   adding EXTERNAL IN-Edge $BB_5_0002 -> $BB_5_0008 with entry ID 458753
(0.005958) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.005967) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.005975) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.005985) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.005994) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.006002) KernelPartitioningPass.cpp:1374:   $BB_5_0008
(0.006011) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.006025) KernelPartitioningPass.cpp:1111: Subkernel::create(kernelEntry)
(0.006034) KernelPartitioningPass.cpp:1134: Subkernel::_create(kernelEntry id: 8)
(0.006049) KernelPartitioningPass.cpp:1162: 
(0.006057) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.006072) KernelPartitioningPass.cpp:1173:  adding block $BB_5_0009
(0.006083) KernelPartitioningPass.cpp:1192:   this block exits
(0.006093) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_5_0009 -> exit
(0.006104) KernelPartitioningPass.cpp:1259:   adding EXTERNAL IN-Edge $BB_5_0008 -> $BB_5_0009 with entry ID 524289
(0.006115) KernelPartitioningPass.cpp:1259:   adding EXTERNAL IN-Edge $BB_5_0005 -> $BB_5_0009 with entry ID 524290
(0.006126) KernelPartitioningPass.cpp:1259:   adding EXTERNAL IN-Edge $BB_5_0006 -> $BB_5_0009 with entry ID 524291
(0.006136) KernelPartitioningPass.cpp:1259:   adding EXTERNAL IN-Edge $BB_5_0007 -> $BB_5_0009 with entry ID 524292
(0.006145) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.006153) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.006164) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.006173) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.006181) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.006190) KernelPartitioningPass.cpp:1374:   $BB_5_0009
(0.006197) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.006214) KernelPartitioningPass.cpp:573:  Linking external edges
(0.006222) KernelPartitioningPass.cpp:575:    but first!
(0.006230) KernelPartitioningPass.cpp:581:    subkernel _subkernel_kernelEntry_1 out edges: 
(0.006238) KernelPartitioningPass.cpp:588:      $BB_5_0002 -> $BB_5_0003
(0.006249) KernelPartitioningPass.cpp:588:      $BB_5_0002 -> $BB_5_0008
(0.006257) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.006265) KernelPartitioningPass.cpp:581:    subkernel _subkernel_kernelEntry_2 out edges: 
(0.006273) KernelPartitioningPass.cpp:588:      $BB_5_0003 -> $BB_5_0004
(0.006280) KernelPartitioningPass.cpp:588:      $BB_5_0003 -> $BB_5_0007
(0.006288) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.006295) KernelPartitioningPass.cpp:599:      $BB_5_0002 -> $BB_5_0003
(0.006303) KernelPartitioningPass.cpp:581:    subkernel _subkernel_kernelEntry_3 out edges: 
(0.006310) KernelPartitioningPass.cpp:588:      $BB_5_0004 -> $BB_5_0005
(0.006318) KernelPartitioningPass.cpp:588:      $BB_5_0004 -> $BB_5_0006
(0.006326) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.006333) KernelPartitioningPass.cpp:599:      $BB_5_0003 -> $BB_5_0004
(0.006341) KernelPartitioningPass.cpp:581:    subkernel _subkernel_kernelEntry_4 out edges: 
(0.006348) KernelPartitioningPass.cpp:588:      $BB_5_0005 -> $BB_5_0009
(0.006356) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.006363) KernelPartitioningPass.cpp:599:      $BB_5_0004 -> $BB_5_0005
(0.006371) KernelPartitioningPass.cpp:581:    subkernel _subkernel_kernelEntry_5 out edges: 
(0.006379) KernelPartitioningPass.cpp:588:      $BB_5_0006 -> $BB_5_0009
(0.006386) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.006393) KernelPartitioningPass.cpp:599:      $BB_5_0004 -> $BB_5_0006
(0.006401) KernelPartitioningPass.cpp:581:    subkernel _subkernel_kernelEntry_6 out edges: 
(0.006408) KernelPartitioningPass.cpp:588:      $BB_5_0007 -> $BB_5_0009
(0.006427) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.006435) KernelPartitioningPass.cpp:599:      $BB_5_0003 -> $BB_5_0007
(0.006443) KernelPartitioningPass.cpp:581:    subkernel _subkernel_kernelEntry_7 out edges: 
(0.006451) KernelPartitioningPass.cpp:588:      $BB_5_0008 -> $BB_5_0009
(0.006459) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.006466) KernelPartitioningPass.cpp:599:      $BB_5_0002 -> $BB_5_0008
(0.006474) KernelPartitioningPass.cpp:581:    subkernel _subkernel_kernelEntry_8 out edges: 
(0.006481) KernelPartitioningPass.cpp:588:      $BB_5_0009 -> exit
(0.006489) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.006496) KernelPartitioningPass.cpp:599:      $BB_5_0008 -> $BB_5_0009
(0.006504) KernelPartitioningPass.cpp:599:      $BB_5_0005 -> $BB_5_0009
(0.006511) KernelPartitioningPass.cpp:599:      $BB_5_0006 -> $BB_5_0009
(0.006519) KernelPartitioningPass.cpp:599:      $BB_5_0007 -> $BB_5_0009
(0.006527) KernelPartitioningPass.cpp:604:    now linking
(0.006535) KernelPartitioningPass.cpp:621:     same subkernel
(0.006542) KernelPartitioningPass.cpp:635:    linking $BB_5_0002_exit_handler_to_5_0003 to $BB_5_0003_entry_handler_from_5_0002 (entry 131073)
(0.006551) KernelPartitioningPass.cpp:621:     same subkernel
(0.006558) KernelPartitioningPass.cpp:635:    linking $BB_5_0002_exit_handler_to_5_0008 to $BB_5_0008_entry_handler_from_5_0002 (entry 458753)
(0.006566) KernelPartitioningPass.cpp:621:     same subkernel
(0.006574) KernelPartitioningPass.cpp:635:    linking $BB_5_0003_exit_handler_to_5_0004 to $BB_5_0004_entry_handler_from_5_0003 (entry 196609)
(0.006582) KernelPartitioningPass.cpp:621:     same subkernel
(0.006589) KernelPartitioningPass.cpp:635:    linking $BB_5_0003_exit_handler_to_5_0007 to $BB_5_0007_entry_handler_from_5_0003 (entry 393217)
(0.006597) KernelPartitioningPass.cpp:621:     same subkernel
(0.006605) KernelPartitioningPass.cpp:635:    linking $BB_5_0004_exit_handler_to_5_0005 to $BB_5_0005_entry_handler_from_5_0004 (entry 262145)
(0.006613) KernelPartitioningPass.cpp:621:     same subkernel
(0.006620) KernelPartitioningPass.cpp:635:    linking $BB_5_0004_exit_handler_to_5_0006 to $BB_5_0006_entry_handler_from_5_0004 (entry 327681)
(0.006628) KernelPartitioningPass.cpp:621:     same subkernel
(0.006636) KernelPartitioningPass.cpp:635:    linking $BB_5_0005_exit_handler_to_5_0009 to $BB_5_0009_entry_handler_from_5_0005 (entry 524290)
(0.006644) KernelPartitioningPass.cpp:621:     same subkernel
(0.006651) KernelPartitioningPass.cpp:635:    linking $BB_5_0006_exit_handler_to_5_0009 to $BB_5_0009_entry_handler_from_5_0006 (entry 524291)
(0.006660) KernelPartitioningPass.cpp:621:     same subkernel
(0.006667) KernelPartitioningPass.cpp:635:    linking $BB_5_0007_exit_handler_to_5_0009 to $BB_5_0009_entry_handler_from_5_0007 (entry 524292)
(0.006675) KernelPartitioningPass.cpp:621:     same subkernel
(0.006683) KernelPartitioningPass.cpp:635:    linking $BB_5_0008_exit_handler_to_5_0009 to $BB_5_0009_entry_handler_from_5_0008 (entry 524289)
(0.006691) KernelPartitioningPass.cpp:621:     same subkernel
(0.006698) KernelPartitioningPass.cpp:647:   failed to link external edge: $BB_5_0009 -> exit
(0.006765) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.006789) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.006801) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.006810) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_5_0002 -> $BB_5_0002_exit_handler_to_5_0003 (3 live values
(0.006837) KernelPartitioningPass.cpp:1731:       alive: 2 [type: s64, offset: 0]
(0.006859) KernelPartitioningPass.cpp:1731:       alive: 6 [type: s32, offset: 8]
(0.006872) KernelPartitioningPass.cpp:1731:       alive: 8 [type: s32, offset: 16]
(0.006886) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.006897) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_5_0002_exit_handler_to_5_0003
(0.006924) KernelPartitioningPass.cpp:1664:   adding $BB_5_0002 to frontierExitBlocks
(0.006951) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_5_0002 -> $BB_5_0002_exit_handler_to_5_0008 (3 live values
(0.006963) KernelPartitioningPass.cpp:1731:       alive: 2 [type: s64, offset: 0]
(0.006978) KernelPartitioningPass.cpp:1731:       alive: 6 [type: s32, offset: 8]
(0.006990) KernelPartitioningPass.cpp:1731:       alive: 8 [type: s32, offset: 16]
(0.007003) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 1
(0.007011) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_5_0002_exit_handler_to_5_0008
(0.007031) KernelPartitioningPass.cpp:1664:   adding $BB_5_0002 to frontierExitBlocks
(0.007042) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.007052) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.007060) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_5_0002
(0.007096) KernelPartitioningPass.cpp:1782:  block $BB_5_0002 (2 external edges) terminator: @%p9 bra $BB_5_0008
(0.007105) KernelPartitioningPass.cpp:1785:    branch
(0.007113) KernelPartitioningPass.cpp:1791:  1 external edge, modifying branch target to point to handler
(0.007123) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
(0.007182) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.007197) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.007207) KernelPartitioningPass.cpp:1585:     IN-edge: $BB_5_0003_entry_handler_from_5_0002 -> $BB_5_0003 (3 live values
(0.007221) KernelPartitioningPass.cpp:1725:       skipping alive: 2 [type: s64]
(0.007230) KernelPartitioningPass.cpp:1725:       skipping alive: 6 [type: s32]
(0.007239) KernelPartitioningPass.cpp:1731:       alive: 8 [type: s32, offset: 16]
(0.007255) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.007265) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_5_0003 -> $BB_5_0003_exit_handler_to_5_0004 (3 live values
(0.007276) KernelPartitioningPass.cpp:1725:       skipping alive: 2 [type: s64]
(0.007285) KernelPartitioningPass.cpp:1725:       skipping alive: 6 [type: s32]
(0.007294) KernelPartitioningPass.cpp:1731:       alive: 8 [type: s32, offset: 16]
(0.007308) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.007316) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_5_0003_exit_handler_to_5_0004
(0.007337) KernelPartitioningPass.cpp:1664:   adding $BB_5_0003 to frontierExitBlocks
(0.007348) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_5_0003 -> $BB_5_0003_exit_handler_to_5_0007 (3 live values
(0.007359) KernelPartitioningPass.cpp:1725:       skipping alive: 2 [type: s64]
(0.007368) KernelPartitioningPass.cpp:1725:       skipping alive: 6 [type: s32]
(0.007377) KernelPartitioningPass.cpp:1731:       alive: 8 [type: s32, offset: 16]
(0.007391) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 1
(0.007399) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_5_0003_exit_handler_to_5_0007
(0.007419) KernelPartitioningPass.cpp:1664:   adding $BB_5_0003 to frontierExitBlocks
(0.007429) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.007438) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.007447) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_5_0003
(0.007459) KernelPartitioningPass.cpp:1782:  block $BB_5_0003 (2 external edges) terminator: @%p10 bra $BB_5_0007
(0.007468) KernelPartitioningPass.cpp:1785:    branch
(0.007476) KernelPartitioningPass.cpp:1791:  1 external edge, modifying branch target to point to handler
(0.007484) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
(0.007532) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.007546) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.007555) KernelPartitioningPass.cpp:1585:     IN-edge: $BB_5_0004_entry_handler_from_5_0003 -> $BB_5_0004 (3 live values
(0.007568) KernelPartitioningPass.cpp:1725:       skipping alive: 2 [type: s64]
(0.007590) KernelPartitioningPass.cpp:1725:       skipping alive: 6 [type: s32]
(0.007600) KernelPartitioningPass.cpp:1731:       alive: 8 [type: s32, offset: 16]
(0.007616) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.007626) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_5_0004 -> $BB_5_0004_exit_handler_to_5_0005 (2 live values
(0.007636) KernelPartitioningPass.cpp:1725:       skipping alive: 2 [type: s64]
(0.007645) KernelPartitioningPass.cpp:1725:       skipping alive: 6 [type: s32]
(0.007654) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.007662) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_5_0004_exit_handler_to_5_0005
(0.007682) KernelPartitioningPass.cpp:1664:   adding $BB_5_0004 to frontierExitBlocks
(0.007693) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_5_0004 -> $BB_5_0004_exit_handler_to_5_0006 (2 live values
(0.007704) KernelPartitioningPass.cpp:1725:       skipping alive: 2 [type: s64]
(0.007713) KernelPartitioningPass.cpp:1725:       skipping alive: 6 [type: s32]
(0.007721) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 1
(0.007729) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_5_0004_exit_handler_to_5_0006
(0.007749) KernelPartitioningPass.cpp:1664:   adding $BB_5_0004 to frontierExitBlocks
(0.007759) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.007769) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.007777) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_5_0004
(0.007789) KernelPartitioningPass.cpp:1782:  block $BB_5_0004 (2 external edges) terminator: @%p11 bra $BB_5_0006
(0.007798) KernelPartitioningPass.cpp:1785:    branch
(0.007806) KernelPartitioningPass.cpp:1791:  1 external edge, modifying branch target to point to handler
(0.007813) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
(0.007855) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.007869) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.007877) KernelPartitioningPass.cpp:1585:     IN-edge: $BB_5_0005_entry_handler_from_5_0004 -> $BB_5_0005 (2 live values
(0.007889) KernelPartitioningPass.cpp:1725:       skipping alive: 2 [type: s64]
(0.007898) KernelPartitioningPass.cpp:1725:       skipping alive: 6 [type: s32]
(0.007910) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.007920) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_5_0005 -> $BB_5_0005_exit_handler_to_5_0009 (3 live values
(0.007931) KernelPartitioningPass.cpp:1731:       alive: 12 [type: s64, offset: 24]
(0.007945) KernelPartitioningPass.cpp:1725:       skipping alive: 2 [type: s64]
(0.007954) KernelPartitioningPass.cpp:1725:       skipping alive: 6 [type: s32]
(0.007963) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.007971) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_5_0005_exit_handler_to_5_0009
(0.007987) KernelPartitioningPass.cpp:1664:   adding $BB_5_0005 to frontierExitBlocks
(0.007996) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.008005) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.008013) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_5_0005
(0.008023) KernelPartitioningPass.cpp:1782:  block $BB_5_0005 (1 external edges) terminator: bra.uni $BB_5_0009
(0.008031) KernelPartitioningPass.cpp:1785:    branch
(0.008039) KernelPartitioningPass.cpp:1791:  1 external edge, modifying branch target to point to handler
(0.008047) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
(0.008085) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.008099) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.008108) KernelPartitioningPass.cpp:1585:     IN-edge: $BB_5_0006_entry_handler_from_5_0004 -> $BB_5_0006 (2 live values
(0.008120) KernelPartitioningPass.cpp:1725:       skipping alive: 2 [type: s64]
(0.008129) KernelPartitioningPass.cpp:1725:       skipping alive: 6 [type: s32]
(0.008151) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.008160) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_5_0006 -> $BB_5_0006_exit_handler_to_5_0009 (3 live values
(0.008171) KernelPartitioningPass.cpp:1731:       alive: 12 [type: s64, offset: 24]
(0.008189) KernelPartitioningPass.cpp:1725:       skipping alive: 2 [type: s64]
(0.008199) KernelPartitioningPass.cpp:1725:       skipping alive: 6 [type: s32]
(0.008208) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.008216) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_5_0006_exit_handler_to_5_0009
(0.008232) KernelPartitioningPass.cpp:1664:   adding $BB_5_0006 to frontierExitBlocks
(0.008242) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.008251) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.008259) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_5_0006
(0.008268) KernelPartitioningPass.cpp:1782:  block $BB_5_0006 (1 external edges) terminator: bra.uni $BB_5_0009
(0.008277) KernelPartitioningPass.cpp:1785:    branch
(0.008284) KernelPartitioningPass.cpp:1791:  1 external edge, modifying branch target to point to handler
(0.008292) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
(0.008331) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.008344) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.008353) KernelPartitioningPass.cpp:1585:     IN-edge: $BB_5_0007_entry_handler_from_5_0003 -> $BB_5_0007 (3 live values
(0.008364) KernelPartitioningPass.cpp:1725:       skipping alive: 2 [type: s64]
(0.008373) KernelPartitioningPass.cpp:1725:       skipping alive: 6 [type: s32]
(0.008382) KernelPartitioningPass.cpp:1725:       skipping alive: 8 [type: s32]
(0.008393) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.008403) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_5_0007 -> $BB_5_0007_exit_handler_to_5_0009 (3 live values
(0.008413) KernelPartitioningPass.cpp:1731:       alive: 12 [type: s64, offset: 24]
(0.008431) KernelPartitioningPass.cpp:1725:       skipping alive: 2 [type: s64]
(0.008441) KernelPartitioningPass.cpp:1725:       skipping alive: 6 [type: s32]
(0.008450) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.008458) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_5_0007_exit_handler_to_5_0009
(0.008474) KernelPartitioningPass.cpp:1664:   adding $BB_5_0007 to frontierExitBlocks
(0.008483) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.008492) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.008500) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_5_0007
(0.008510) KernelPartitioningPass.cpp:1782:  block $BB_5_0007 (1 external edges) terminator: bra.uni $BB_5_0009
(0.008518) KernelPartitioningPass.cpp:1785:    branch
(0.008525) KernelPartitioningPass.cpp:1791:  1 external edge, modifying branch target to point to handler
(0.008533) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
(0.008572) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.008585) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.008594) KernelPartitioningPass.cpp:1585:     IN-edge: $BB_5_0008_entry_handler_from_5_0002 -> $BB_5_0008 (3 live values
(0.008605) KernelPartitioningPass.cpp:1725:       skipping alive: 2 [type: s64]
(0.008614) KernelPartitioningPass.cpp:1725:       skipping alive: 6 [type: s32]
(0.008623) KernelPartitioningPass.cpp:1725:       skipping alive: 8 [type: s32]
(0.008635) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.008644) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_5_0008 -> $BB_5_0008_exit_handler_to_5_0009 (3 live values
(0.008655) KernelPartitioningPass.cpp:1731:       alive: 12 [type: s64, offset: 24]
(0.008672) KernelPartitioningPass.cpp:1725:       skipping alive: 2 [type: s64]
(0.008681) KernelPartiTestIndirectFunctionCall: ocelot/executive/implementation/DynamicTranslationCache.cpp:1028: void setupCallTargets(ir::PTXKernel&, const executive::DynamicTranslationCache&): Assertion `0 && "arbitrary function calls not yet supported"' failed.
tioningPass.cpp:1725:       skipping alive: 6 [type: s32]
(0.008700) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.008709) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_5_0008_exit_handler_to_5_0009
(0.008725) KernelPartitioningPass.cpp:1664:   adding $BB_5_0008 to frontierExitBlocks
(0.008735) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.008744) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.008752) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_5_0008
(0.008769) KernelPartitioningPass.cpp:1782:  block $BB_5_0008 (1 external edges) terminator: mov.u64 %r12, funcDouble
(0.008781) KernelPartitioningPass.cpp:1821:  fall-through non-control-flow instruction to external edge: mov.u64 %r12, funcDouble
(0.008790) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
(0.008860) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.008878) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.008887) KernelPartitioningPass.cpp:1585:     IN-edge: $BB_5_0009_entry_handler_from_5_0008 -> $BB_5_0009 (3 live values
(0.008899) KernelPartitioningPass.cpp:1731:       alive: 12 [type: s64, offset: 24]
(0.008917) KernelPartitioningPass.cpp:1731:       alive: 2 [type: s64, offset: 0]
(0.008930) KernelPartitioningPass.cpp:1731:       alive: 6 [type: s32, offset: 8]
(0.008945) KernelPartitioningPass.cpp:1585:     IN-edge: $BB_5_0009_entry_handler_from_5_0005 -> $BB_5_0009 (3 live values
(0.008957) KernelPartitioningPass.cpp:1731:       alive: 12 [type: s64, offset: 24]
(0.008970) KernelPartitioningPass.cpp:1731:       alive: 2 [type: s64, offset: 0]
(0.008985) KernelPartitioningPass.cpp:1731:       alive: 6 [type: s32, offset: 8]
(0.009000) KernelPartitioningPass.cpp:1585:     IN-edge: $BB_5_0009_entry_handler_from_5_0006 -> $BB_5_0009 (3 live values
(0.009011) KernelPartitioningPass.cpp:1731:       alive: 12 [type: s64, offset: 24]
(0.009025) KernelPartitioningPass.cpp:1731:       alive: 2 [type: s64, offset: 0]
(0.009037) KernelPartitioningPass.cpp:1731:       alive: 6 [type: s32, offset: 8]
(0.009054) KernelPartitioningPass.cpp:1585:     IN-edge: $BB_5_0009_entry_handler_from_5_0007 -> $BB_5_0009 (3 live values
(0.009066) KernelPartitioningPass.cpp:1731:       alive: 12 [type: s64, offset: 24]
(0.009079) KernelPartitioningPass.cpp:1731:       alive: 2 [type: s64, offset: 0]
(0.009092) KernelPartitioningPass.cpp:1731:       alive: 6 [type: s32, offset: 8]
(0.009108) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.009118) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_5_0009 -> $BB_5_0009_thread_exit (0 live values
(0.009128) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.009136) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_5_0009_thread_exit
(0.009150) KernelPartitioningPass.cpp:1664:   adding $BB_5_0009 to frontierExitBlocks
(0.009159) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.009169) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.009177) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_5_0009
(0.009187) KernelPartitioningPass.cpp:1782:  block $BB_5_0009 (1 external edges) terminator: exit
(0.009196) KernelPartitioningPass.cpp:1810:    exit
(0.009204) KernelPartitioningPass.cpp:1825: end frontier exit blocks:

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMKernels 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestKernels
INFO     Test completed in 0.0825819969177 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestKernels

Description: 


Test Seed : 1336535632
Test time : 0.0197611

Status : Test output:
looping kernel succeeded
matrix vector kernel succeeded



INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestParser -i ../tests/ptx 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTextureArray
INFO     Test completed in 0.113923788071 seconds
INFO      It produced the following output:
(0.004404) KernelPartitioningPass.cpp:76:   KernelPartitioningPass::runOnFunction(_Z6kernelPfii)
(0.004443) KernelPartitioningPass.cpp:113:  partitioning blocks at barriers
(0.004457) KernelPartitioningPass.cpp:148:    encountered 0 barriers
(0.004646) KernelPartitioningPass.cpp:195:   KernelGraph( partitioning with heuristic minimum)
(0.004670) KernelPartitioningPass.cpp:290:  KernelGraph::_partitionMinimumSize()
(0.004727) KernelPartitioningPass.cpp:727:  LiveRegisters [count: 0]
(0.004741) KernelPartitioningPass.cpp:729:    saved 160 bytes per thread
(0.004772) KernelPartitioningPass.cpp:568:    Spill region size is 0
(0.004800) KernelPartitioningPass.cpp:1111: Subkernel::create(_Z6kernelPfii)
(0.004814) KernelPartitioningPass.cpp:1134: Subkernel::_create(_Z6kernelPfii id: 1)
(0.004844) KernelPartitioningPass.cpp:1162: 
(0.004857) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.004887) KernelPartitioningPass.cpp:1173:  adding block $BB_1_0002
(0.004912) KernelPartitioningPass.cpp:1192:   this block exits
(0.004934) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.004950) KernelPartitioningPass.cpp:1262:  ENTRY EDGE: entry -> $BB_1_0002
(0.004970) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.004982) KernelPartitioningPass.cpp:1281:  looking in block mapping: entry -> $BB_1_0002
(0.004993) KernelPartitioningPass.cpp:1285:   examined terminator
(0.005005) KernelPartitioningPass.cpp:1296:   instantiating internal edge
(0.005018) KernelPartitioningPass.cpp:1302:   adding internal edge: entry -> $BB_1_0002 type: fallthrough
(0.005031) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.005043) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.005062) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.005076) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.005089) KernelPartitioningPass.cpp:1374:   $BB_1_0002
(0.005101) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.005130) KernelPartitioningPass.cpp:573:  Linking external edges
(0.005142) KernelPartitioningPass.cpp:575:    but first!
(0.005154) KernelPartitioningPass.cpp:581:    subkernel _subkernel__Z6kernelPfii_1 out edges: 
(0.005166) KernelPartitioningPass.cpp:588:      $BB_1_0002 -> exit
(0.005180) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.005192) KernelPartitioningPass.cpp:604:    now linking
(0.005204) KernelPartitioningPass.cpp:621:     same subkernel
(0.005216) KernelPartitioningPass.cpp:647:   failed to link external edge: $BB_1_0002 -> exit
(0.005317) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.005353) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.005369) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.005382) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_1_0002 -> $BB_1_0002_thread_exit (0 live values
(0.005411) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.005425) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_1_0002_thread_exit
(0.005453) KernelPartitioningPass.cpp:1664:   adding $BB_1_0002 to frontierExitBlocks
(0.005479) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.005493) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.005506) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_1_0002
(0.005529) KernelPartitioningPass.cpp:1782:  block $BB_1_0002 (1 external edges) terminator: exit
(0.005543) KernelPartitioningPass.cpp:1810:    exit
(0.009256) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
Pass/Fail : Pass

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestExternalFunctions 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCalVectorScale
INFO     Test completed in 0.08793592453 seconds
INFO      It produced the following output:
No CAL devices found
Pass/Fail : Pass

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaGlobals 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestExternalFunctions
INFO     Test completed in 0.0566539764404 seconds
INFO      It produced the following output:
TestExternalFunctions: ocelot/executive/implementation/DynamicTranslationCache.cpp:1028: void setupCallTargets(ir::PTXKernel&, const executive::DynamicTranslationCache&): Assertion `0 && "arbitrary function calls not yet supported"' failed.
(0.002847) KernelPartitioningPass.cpp:76:   KernelPartitioningPass::runOnFunction(kernel)
(0.002879) KernelPartitioningPass.cpp:113:  partitioning blocks at barriers
(0.002889) KernelPartitioningPass.cpp:148:    encountered 0 barriers
(0.003076) KernelPartitioningPass.cpp:195:   KernelGraph( partitioning with heuristic minimum)
(0.003094) KernelPartitioningPass.cpp:290:  KernelGraph::_partitionMinimumSize()
(0.003132) KernelPartitioningPass.cpp:727:  LiveRegisters [count: 0]
(0.003143) KernelPartitioningPass.cpp:729:    saved 24 bytes per thread
(0.003167) KernelPartitioningPass.cpp:568:    Spill region size is 0
(0.003187) KernelPartitioningPass.cpp:1111: Subkernel::create(kernel)
(0.003198) KernelPartitioningPass.cpp:1134: Subkernel::_create(kernel id: 1)
(0.003219) KernelPartitioningPass.cpp:1162: 
(0.003228) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.003249) KernelPartitioningPass.cpp:1173:  adding block $BB_1_0002
(0.003266) KernelPartitioningPass.cpp:1192:   this block exits
(0.003282) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.003294) KernelPartitioningPass.cpp:1262:  ENTRY EDGE: entry -> $BB_1_0002
(0.003308) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.003317) KernelPartitioningPass.cpp:1281:  looking in block mapping: entry -> $BB_1_0002
(0.003325) KernelPartitioningPass.cpp:1285:   examined terminator
(0.003333) KernelPartitioningPass.cpp:1296:   instantiating internal edge
(0.003343) KernelPartitioningPass.cpp:1302:   adding internal edge: entry -> $BB_1_0002 type: fallthrough
(0.003353) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.003361) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.003375) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.003385) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.003394) KernelPartitioningPass.cpp:1374:   $BB_1_0002
(0.003403) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.003424) KernelPartitioningPass.cpp:573:  Linking external edges
(0.003432) KernelPartitioningPass.cpp:575:    but first!
(0.003440) KernelPartitioningPass.cpp:581:    subkernel _subkernel_kernel_1 out edges: 
(0.003448) KernelPartitioningPass.cpp:588:      $BB_1_0002 -> exit
(0.003456) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.003464) KernelPartitioningPass.cpp:604:    now linking
(0.003473) KernelPartitioningPass.cpp:621:     same subkernel
(0.003480) KernelPartitioningPass.cpp:647:   failed to link external edge: $BB_1_0002 -> exit
(0.003530) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.003550) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.003562) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.003571) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_1_0002 -> $BB_1_0002_thread_exit (0 live values
(0.003594) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.003604) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_1_0002_thread_exit
(0.003624) KernelPartitioningPass.cpp:1664:   adding $BB_1_0002 to frontierExitBlocks
(0.003641) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.003651) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.003660) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_1_0002
(0.003680) KernelPartitioningPass.cpp:1782:  block $BB_1_0002 (1 external edges) terminator: exit
(0.003690) KernelPartitioningPass.cpp:1810:    exit
(0.003699) KernelPartitioningPass.cpp:1825: end frontier exit blocks:

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestEmulator 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestParser
INFO     Test completed in 0.0791051387787 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestParser

Description: A test for the PTXParser class. Test Points: 1) Load a PTX file 
             and run it through the parser generating a module. Write the 
             module to an intermediate stream. Parse the stream again 
             generating a new module, compare both to make sure that they match.


Test Seed : 1336535632
Test time : 2.40803e-05

Status : 


INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXAssembly 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaGlobals
INFO     Test completed in 0.108389854431 seconds
INFO      It produced the following output:
cudaSetDevice() - 0 - Ocelot Dynamic Multicore CPU 
(0.004287) KernelPartitioningPass.cpp:76:   KernelPartitioningPass::runOnFunction(copyFromGlobal)
(0.004319) KernelPartitioningPass.cpp:113:  partitioning blocks at barriers
(0.004328) KernelPartitioningPass.cpp:148:    encountered 0 barriers
(0.004491) KernelPartitioningPass.cpp:195:   KernelGraph( partitioning with heuristic minimum)
(0.004508) KernelPartitioningPass.cpp:290:  KernelGraph::_partitionMinimumSize()
(0.004558) KernelPartitioningPass.cpp:727:  LiveRegisters [count: 0]
(0.004570) KernelPartitioningPass.cpp:729:    saved 120 bytes per thread
(0.004595) KernelPartitioningPass.cpp:568:    Spill region size is 0
(0.004620) KernelPartitioningPass.cpp:1111: Subkernel::create(copyFromGlobal)
(0.004631) KernelPartitioningPass.cpp:1134: Subkernel::_create(copyFromGlobal id: 1)
(0.004654) KernelPartitioningPass.cpp:1162: 
(0.004663) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.004687) KernelPartitioningPass.cpp:1173:  adding block $BB_1_0002
(0.004704) KernelPartitioningPass.cpp:1192:   this block exits
(0.004722) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.004734) KernelPartitioningPass.cpp:1262:  ENTRY EDGE: entry -> $BB_1_0002
(0.004750) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.004758) KernelPartitioningPass.cpp:1281:  looking in block mapping: entry -> $BB_1_0002
(0.004766) KernelPartitioningPass.cpp:1285:   examined terminator
(0.004775) KernelPartitioningPass.cpp:1296:   instantiating internal edge
(0.004784) KernelPartitioningPass.cpp:1302:   adding internal edge: entry -> $BB_1_0002 type: fallthrough
(0.004795) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.004803) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.004818) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.004827) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.004837) KernelPartitioningPass.cpp:1374:   $BB_1_0002
(0.004846) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.004873) KernelPartitioningPass.cpp:573:  Linking external edges
(0.004881) KernelPartitioningPass.cpp:575:    but first!
(0.004889) KernelPartitioningPass.cpp:581:    subkernel _subkernel_copyFromGlobal_1 out edges: 
(0.004898) KernelPartitioningPass.cpp:588:      $BB_1_0002 -> exit
(0.004908) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.004917) KernelPartitioningPass.cpp:604:    now linking
(0.004926) KernelPartitioningPass.cpp:621:     same subkernel
(0.004934) KernelPartitioningPass.cpp:647:   failed to link external edge: $BB_1_0002 -> exit
(0.005010) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.005038) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.005049) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.005059) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_1_0002 -> $BB_1_0002_thread_exit (0 live values
(0.005084) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.005095) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_1_0002_thread_exit
(0.005118) KernelPartitioningPass.cpp:1664:   adding $BB_1_0002 to frontierExitBlocks
(0.005138) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.005148) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.005157) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_1_0002
(0.005177) KernelPartitioningPass.cpp:1782:  block $BB_1_0002 (1 external edges) terminator: exit
(0.005187) KernelPartitioningPass.cpp:1810:    exit
(0.005197) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
Pass/Fail : Pass

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaMalloc 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMKernels
INFO     Test completed in 0.172191858292 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestLLVMKernels

Description: A unit test for the LLVM executive runtime. Test Points: 1) 
             Execute a kernel with a loop. 2) Execute a matrix multiply kernel.


Test Seed : 1336535632
Test time : 0.103504

Status : A = [
 1 0 0 0 0 0 0 0 ;
 0.5 1 0 0 0 0 0 0 ;
 0.333333 0.5 1 0 0 0 0 0 ;
 0.25 0.333333 0.5 1 0 0 0 0 ;
 0.2 0.25 0.333333 0.5 1 0 0 0 ;
 0.166667 0.2 0.25 0.333333 0.5 1 0 0 ;
 0.142857 0.166667 0.2 0.25 0.333333 0.5 1 0 ;
 0.125 0.142857 0.166667 0.2 0.25 0.333333 0.5 1 ;
];
V = [
 1 ;
 2 ;
 3 ;
 4 ;
 5 ;
 6 ;
 7 ;
 8 ;
];
R = [
 1 ;
 2.5 ;
 4.33333 ;
 6.41667 ;
 8.7 ;
 11.15 ;
 13.7429 ;
 16.4607 ;
];



INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDataflowGraph -i ../tests/ptx 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestEmulator
INFO     Test completed in 0.0796530246735 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestEmulator

Description: 


Test Seed : 1336535632
Test time : 0.0039525

Status : Test output:
10 registers
Register test passed
Load test passed
Store test passed
no errors
Full kernel test passed



INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXAssembly
INFO     Test completed in 0.0922281742096 seconds
INFO      It produced the following output:
(0.007565) KernelPartitioningPass.cpp:76:   KernelPartitioningPass::runOnFunction(test)
(0.007610) KernelPartitioningPass.cpp:113:  partitioning blocks at barriers
(0.007620) KernelPartitioningPass.cpp:148:    encountered 0 barriers
(0.007765) KernelPartitioningPass.cpp:195:   KernelGraph( partitioning with heuristic minimum)
(0.007782) KernelPartitioningPass.cpp:290:  KernelGraph::_partitionMinimumSize()
(0.007825) KernelPartitioningPass.cpp:727:  LiveRegisters [count: 0]
(0.007836) KernelPartitioningPass.cpp:729:    saved 72 bytes per thread
(0.007862) KernelPartitioningPass.cpp:568:    Spill region size is 0
(0.007884) KernelPartitioningPass.cpp:1111: Subkernel::create(test)
(0.007895) KernelPartitioningPass.cpp:1134: Subkernel::_create(test id: 1)
(0.007917) KernelPartitioningPass.cpp:1162: 
(0.007926) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.007946) KernelPartitioningPass.cpp:1173:  adding block $BB_1_0002
(0.007963) KernelPartitioningPass.cpp:1192:   this block exits
(0.007980) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.007992) KernelPartitioningPass.cpp:1262:  ENTRY EDGE: entry -> $BB_1_0002
(0.008008) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.008017) KernelPartitioningPass.cpp:1281:  looking in block mapping: entry -> $BB_1_0002
(0.008025) KernelPartitioningPass.cpp:1285:   examined terminator
(0.008033) KernelPartitioningPass.cpp:1296:   instantiating internal edge
(0.008043) KernelPartitioningPass.cpp:1302:   adding internal edge: entry -> $BB_1_0002 type: fallthrough
(0.008053) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.008061) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.008075) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.008086) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.008095) KernelPartitioningPass.cpp:1374:   $BB_1_0002
(0.008103) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.008127) KernelPartitioningPass.cpp:573:  Linking external edges
(0.008135) KernelPartitioningPass.cpp:575:    but first!
(0.008143) KernelPartitioningPass.cpp:581:    subkernel _subkernel_test_1 out edges: 
(0.008151) KernelPartitioningPass.cpp:588:      $BB_1_0002 -> exit
(0.008159) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.008168) KernelPartitioningPass.cpp:604:    now linking
(0.008176) KernelPartitioningPass.cpp:621:     same subkernel
(0.008183) KernelPartitioningPass.cpp:647:   failed to link external edge: $BB_1_0002 -> exit
(0.008240) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.008262) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.008273) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.008282) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_1_0002 -> $BB_1_0002_thread_exit (0 live values
(0.008307) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.008318) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_1_0002_thread_exit
(0.008339) KernelPartitioningPass.cpp:1664:   adding $BB_1_0002 to frontierExitBlocks
(0.008358) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.008368) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.008377) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_1_0002
(0.008388) KernelPartitioningPass.cpp:1782:  block $BB_1_0002 (1 external edges) terminator: exit
(0.008398) KernelPartitioningPass.cpp:1810:    exit
(0.008408) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
(0.020516) KernelPartitioningPass.cpp:76:   KernelPartitioningPass::runOnFunction(test)
(0.020537) KernelPartitioningPass.cpp:113:  partitioning blocks at barriers
(0.020545) KernelPartitioningPass.cpp:148:    encountered 0 barriers
(0.020614) KernelPartitioningPass.cpp:195:   KernelGraph( partitioning with heuristic minimum)
(0.020625) KernelPartitioningPass.cpp:290:  KernelGraph::_partitionMinimumSize()
(0.020690) KernelPartitioningPass.cpp:727:  LiveRegisters [count: 0]
(0.020701) KernelPartitioningPass.cpp:729:    saved 72 bytes per thread
(0.020718) KernelPartitioningPass.cpp:568:    Spill region size is 0
(0.020729) KernelPartitioningPass.cpp:1111: Subkernel::create(test)
(0.020738) KernelPartitioningPass.cpp:1134: Subkernel::_create(test id: 1)
(0.020755) KernelPartitioningPass.cpp:1162: 
(0.020764) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.020778) KernelPartitioningPass.cpp:1173:  adding block $BB_1_0002
(0.020791) KernelPartitioningPass.cpp:1192:   this block exits
(0.020803) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.020813) KernelPartitioningPass.cpp:1262:  ENTRY EDGE: entry -> $BB_1_0002
(0.020823) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.020832) KernelPartitioningPass.cpp:1281:  looking in block mapping: entry -> $BB_1_0002
(0.020840) KernelPartitioningPass.cpp:1285:   examined terminator
(0.020848) KernelPartitioningPass.cpp:1296:   instantiating internal edge
(0.020856) KernelPartitioningPass.cpp:1302:   adding internal edge: entry -> $BB_1_0002 type: fallthrough
(0.020866) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.020874) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.020884) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.020893) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.020902) KernelPartitioningPass.cpp:1374:   $BB_1_0002
(0.020910) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.020927) KernelPartitioningPass.cpp:573:  Linking external edges
(0.020935) KernelPartitioningPass.cpp:575:    but first!
(0.020943) KernelPartitioningPass.cpp:581:    subkernel _subkernel_test_1 out edges: 
(0.020951) KernelPartitioningPass.cpp:588:      $BB_1_0002 -> exit
(0.020959) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.020968) KernelPartitioningPass.cpp:604:    now linking
(0.020976) KernelPartitioningPass.cpp:621:     same subkernel
(0.020983) KernelPartitioningPass.cpp:647:   failed to link external edge: $BB_1_0002 -> exit
(0.021031) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.021048) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.021057) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.021065) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_1_0002 -> $BB_1_0002_thread_exit (0 live values
(0.021078) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.021087) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_1_0002_thread_exit
(0.021105) KernelPartitioningPass.cpp:1664:   adding $BB_1_0002 to frontierExitBlocks
(0.021116) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.021125) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.021134) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_1_0002
(0.021143) KernelPartitioningPass.cpp:1782:  block $BB_1_0002 (1 external edges) terminator: exit
(0.021152) KernelPartitioningPass.cpp:1810:    exit
(0.021160) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
(0.022329) KernelPartitioningPass.cpp:76:   KernelPartitioningPass::runOnFunction(test)
(0.022341) KernelPartitioningPass.cpp:113:  partitioning blocks at barriers
(0.022350) KernelPartitioningPass.cpp:148:    encountered 0 barriers
(0.022397) KernelPartitioningPass.cpp:195:   KernelGraph( partitioning with heuristic minimum)
(0.022406) KernelPartitioningPass.cpp:290:  KernelGraph::_partitionMinimumSize()
(0.022424) KernelPartitioningPass.cpp:727:  LiveRegisters [count: 0]
(0.022432) KernelPartitioningPass.cpp:729:    saved 72 bytes per thread
(0.022447) KernelPartitioningPass.cpp:568:    Spill region size is 0
(0.022458) KernelPartitioningPass.cpp:1111: Subkernel::create(test)
(0.022467) KernelPartitioningPass.cpp:1134: Subkernel::_create(test id: 1)
(0.022483) KernelPartitioningPass.cpp:1162: 
(0.022492) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.022529) KernelPartitioningPass.cpp:1173:  adding block $BB_1_0002
(0.022541) KernelPartitioningPass.cpp:1192:   this block exits
(0.022553) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.022562) KernelPartitioningPass.cpp:1262:  ENTRY EDGE: entry -> $BB_1_0002
(0.022572) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.022580) KernelPartitioningPass.cpp:1281:  looking in block mapping: entry -> $BB_1_0002
(0.022588) KernelPartitioningPass.cpp:1285:   examined terminator
(0.022596) KernelPartitioningPass.cpp:1296:   instantiating internal edge
(0.022604) KernelPartitioningPass.cpp:1302:   adding internal edge: entry -> $BB_1_0002 type: fallthrough
(0.022614) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.022622) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.022631) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.022640) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.022649) KernelPartitioningPass.cpp:1374:   $BB_1_0002
(0.022657) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.022671) KernelPartitioningPass.cpp:573:  Linking external edges
(0.022680) KernelPartitioningPass.cpp:575:    but first!
(0.022687) KernelPartitioningPass.cpp:581:    subkernel _subkernel_test_1 out edges: 
(0.022695) KernelPartitioningPass.cpp:588:      $BB_1_0002 -> exit
(0.022703) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.022711) KernelPartitioningPass.cpp:604:    now linking
(0.022719) KernelPartitioningPass.cpp:621:     same subkernel
(0.022727) KernelPartitioningPass.cpp:647:   failed to link external edge: $BB_1_0002 -> exit
(0.022774) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.022789) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.022797) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.022805) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_1_0002 -> $BB_1_0002_thread_exit (0 live values
(0.022817) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.022825) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_1_0002_thread_exit
(0.022841) KernelPartitioningPass.cpp:1664:   adding $BB_1_0002 to frontierExitBlocks
(0.022851) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.022860) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.022868) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_1_0002
(0.022877) KernelPartitioningPass.cpp:1782:  block $BB_1_0002 (1 external edges) terminator: exit
(0.022886) KernelPartitioningPass.cpp:1810:    exit
(0.022894) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
(0.024213) KernelPartitioningPass.cpp:76:   KernelPartitioningPass::runOnFunction(test)
(0.024225) KernelPartitioningPass.cpp:113:  partitioning blocks at barriers
(0.024233) KernelPartitioningPass.cpp:148:    encountered 0 barriers
(0.024280) KernelPartitioningPass.cpp:195:   KernelGraph( partitioning with heuristic minimum)
(0.024290) KernelPartitioningPass.cpp:290:  KernelGraph::_partitionMinimumSize()
(0.024307) KernelPartitioningPass.cpp:727:  LiveRegisters [count: 0]
(0.024316) KernelPartitioningPass.cpp:729:    saved 72 bytes per thread
(0.024330) KernelPartitioningPass.cpp:568:    Spill region size is 0
(0.024341) KernelPartitioningPass.cpp:1111: Subkernel::create(test)
(0.024349) KernelPartitioningPass.cpp:1134: Subkernel::_create(test id: 1)
(0.024365) KernelPartitioningPass.cpp:1162: 
(0.024374) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.024387) KernelPartitioningPass.cpp:1173:  adding block $BB_1_0002
(0.024399) KernelPartitioningPass.cpp:1192:   this block exits
(0.024411) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.024420) KernelPartitioningPass.cpp:1262:  ENTRY EDGE: entry -> $BB_1_0002
(0.024430) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.024455) KernelPartitioningPass.cpp:1281:  looking in block mapping: entry -> $BB_1_0002
(0.024464) KernelPartitioningPass.cpp:1285:   examined terminator
(0.024472) KernelPartitioningPass.cpp:1296:   instantiating internal edge
(0.024480) KernelPartitioningPass.cpp:1302:   adding internal edge: entry -> $BB_1_0002 type: fallthrough
(0.024489) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.024498) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.024507) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.024516) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.024525) KernelPartitioningPass.cpp:1374:   $BB_1_0002
(0.024534) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.024547) KernelPartitioningPass.cpp:573:  Linking external edges
(0.024555) KernelPartitioningPass.cpp:575:    but first!
(0.024563) KernelPartitioningPass.cpp:581:    subkernel _subkernel_test_1 out edges: 
(0.024571) KernelPartitioningPass.cpp:588:      $BB_1_0002 -> exit
(0.024579) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.024586) KernelPartitioningPass.cpp:604:    now linking
(0.024594) KernelPartitioningPass.cpp:621:     same subkernel
(0.024602) KernelPartitioningPass.cpp:647:   failed to link external edge: $BB_1_0002 -> exit
(0.024647) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.024783) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.024793) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.024801) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_1_0002 -> $BB_1_0002_thread_exit (0 live values
(0.024814) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.024822) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_1_0002_thread_exit
(0.024838) KernelPartitioningPass.cpp:1664:   adding $BB_1_0002 to frontierExitBlocks
(0.024848) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.024857) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.024866) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_1_0002
(0.024874) KernelPartitioningPass.cpp:1782:  block $BB_1_0002 (1 external edges) terminator: exit
(0.024883) KernelPartitioningPass.cpp:1810:    exit
(0.024891) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
(0.025887) KernelPartitioningPass.cpp:76:   KernelPartitioningPass::runOnFunction(test)
(0.025897) KernelPartitioningPass.cpp:113:  partitioning blocks at barriers
(0.025905) KernelPartitioningPass.cpp:148:    encountered 0 barriers
(0.025951) KernelPartitioningPass.cpp:195:   KernelGraph( partitioning with heuristic minimum)
(0.025961) KernelPartitioningPass.cpp:290:  KernelGraph::_partitionMinimumSize()
(0.025977) KernelPartitioningPass.cpp:727:  LiveRegisters [count: 0]
(0.025985) KernelPartitioningPass.cpp:729:    saved 72 bytes per thread
(0.026000) KernelPartitioningPass.cpp:568:    Spill region size is 0
(0.026010) KernelPartitioningPass.cpp:1111: Subkernel::create(test)
(0.026019) KernelPartitioningPass.cpp:1134: Subkernel::_create(test id: 1)
(0.026034) KernelPartitioningPass.cpp:1162: 
(0.026042) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.026056) KernelPartitioningPass.cpp:1173:  adding block $BB_1_0002
(0.026067) KernelPartitioningPass.cpp:1192:   this block exits
(0.026078) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.026087) KernelPartitioningPass.cpp:1262:  ENTRY EDGE: entry -> $BB_1_0002
(0.026097) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.026105) KernelPartitioningPass.cpp:1281:  looking in block mapping: entry -> $BB_1_0002
(0.026113) KernelPartitioningPass.cpp:1285:   examined terminator
(0.026121) KernelPartitioningPass.cpp:1296:   instantiating internal edge
(0.026129) KernelPartitioningPass.cpp:1302:   adding internal edge: entry -> $BB_1_0002 type: fallthrough
(0.026138) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.026159) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.026169) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.026179) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.026187) KernelPartitioningPass.cpp:1374:   $BB_1_0002
(0.026196) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.026208) KernelPartitioningPass.cpp:573:  Linking external edges
(0.026217) KernelPartitioningPass.cpp:575:    but first!
(0.026224) KernelPartitioningPass.cpp:581:    subkernel _subkernel_test_1 out edges: 
(0.026232) KernelPartitioningPass.cpp:588:      $BB_1_0002 -> exit
(0.026239) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.026247) KernelPartitioningPass.cpp:604:    now linking
(0.026255) KernelPartitioningPass.cpp:621:     same subkernel
(0.026262) KernelPartitioningPass.cpp:647:   failed to link external edge: $BB_1_0002 -> exit
(0.026307) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.026321) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.026330) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.026338) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_1_0002 -> $BB_1_0002_thread_exit (0 live values
(0.026349) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.026357) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_1_0002_thread_exit
(0.026371) KernelPartitioningPass.cpp:1664:   adding $BB_1_0002 to frontierExitBlocks
(0.026381) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.026390) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.026398) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_1_0002
(0.026406) KernelPartitioningPass.cpp:1782:  block $BB_1_0002 (1 external edges) terminator: exit
(0.026415) KernelPartitioningPass.cpp:1810:    exit
(0.026423) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
(0.027572) KernelPartitioningPass.cpp:76:   KernelPartitioningPass::runOnFunction(test)
(0.027583) KernelPartitioningPass.cpp:113:  partitioning blocks at barriers
(0.027591) KernelPartitioningPass.cpp:148:    encountered 0 barriers
(0.027637) KernelPartitioningPass.cpp:195:   KernelGraph( partitioning with heuristic minimum)
(0.027646) KernelPartitioningPass.cpp:290:  KernelGraph::_partitionMinimumSize()
(0.027662) KernelPartitioningPass.cpp:727:  LiveRegisters [count: 0]
(0.027671) KernelPartitioningPass.cpp:729:    saved 72 bytes per thread
(0.027684) KernelPartitioningPass.cpp:568:    Spill region size is 0
(0.027695) KernelPartitioningPass.cpp:1111: Subkernel::create(test)
(0.027703) KernelPartitioningPass.cpp:1134: Subkernel::_create(test id: 1)
(0.027718) KernelPartitioningPass.cpp:1162: 
(0.027727) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.027740) KernelPartitioningPass.cpp:1173:  adding block $BB_1_0002
(0.027752) KernelPartitioningPass.cpp:1192:   this block exits
(0.027763) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.027771) KernelPartitioningPass.cpp:1262:  ENTRY EDGE: entry -> $BB_1_0002
(0.027781) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.027789) KernelPartitioningPass.cpp:1281:  looking in block mapping: entry -> $BB_1_0002
(0.027797) KernelPartitioningPass.cpp:1285:   examined terminator
(0.027804) KernelPartitioningPass.cpp:1296:   instantiating internal edge
(0.027812) KernelPartitioningPass.cpp:1302:   adding internal edge: entry -> $BB_1_0002 type: fallthrough
(0.027822) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.027830) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.027839) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.027848) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.027856) KernelPartitioningPass.cpp:1374:   $BB_1_0002
(0.027864) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.027889) KernelPartitioningPass.cpp:573:  Linking external edges
(0.027898) KernelPartitioningPass.cpp:575:    but first!
(0.027906) KernelPartitioningPass.cpp:581:    subkernel _subkernel_test_1 out edges: 
(0.027914) KernelPartitioningPass.cpp:588:      $BB_1_0002 -> exit
(0.027922) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.027930) KernelPartitioningPass.cpp:604:    now linking
(0.027937) KernelPartitioningPass.cpp:621:     same subkernel
(0.027945) KernelPartitioningPass.cpp:647:   failed to link external edge: $BB_1_0002 -> exit
(0.027991) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.028005) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.028013) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.028022) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_1_0002 -> $BB_1_0002_thread_exit (0 live values
(0.028033) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.028041) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_1_0002_thread_exit
(0.028056) KernelPartitioningPass.cpp:1664:   adding $BB_1_0002 to frontierExitBlocks
(0.028065) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.028074) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.028082) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_1_0002
(0.028091) KernelPartitioningPass.cpp:1782:  block $BB_1_0002 (1 external edges) terminator: exit
(0.028099) KernelPartitioningPass.cpp:1810:    exit
(0.028107) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
(0.029242) KernelPartitioningPass.cpp:76:   KernelPartitioningPass::runOnFunction(test)
(0.029252) KernelPartitioningPass.cpp:113:  partitioning blocks at barriers
(0.029260) KernelPartitioningPass.cpp:148:    encountered 0 barriers
(0.029299) KernelPartitioningPass.cpp:195:   KernelGraph( partitioning with heuristic minimum)
(0.029308) KernelPartitioningPass.cpp:290:  KernelGraph::_partitionMinimumSize()
(0.029322) KernelPartitioningPass.cpp:727:  LiveRegisters [count: 0]
(0.029330) KernelPartitioningPass.cpp:729:    saved 32 bytes per thread
(0.029344) KernelPartitioningPass.cpp:568:    Spill region size is 0
(0.029354) KernelPartitioningPass.cpp:1111: Subkernel::create(test)
(0.029363) KernelPartitioningPass.cpp:1134: Subkernel::_create(test id: 1)
(0.029378) KernelPartitioningPass.cpp:1162: 
(0.029387) KernelPartitioningPass.cpp:1163:  _analyzeExternalEdges()
(0.029398) KernelPartitioningPass.cpp:1173:  adding block $BB_1_0002
(0.029409) KernelPartitioningPass.cpp:1192:   this block exits
(0.029419) KernelPartitioningPass.cpp:1222:   adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.029428) KernelPartitioningPass.cpp:1262:  ENTRY EDGE: entry -> $BB_1_0002
(0.029437) KernelPartitioningPass.cpp:1276: Creating internal edges
(0.029445) KernelPartitioningPass.cpp:1281:  looking in block mapping: entry -> $BB_1_0002
(0.029453) KernelPartitioningPass.cpp:1285:   examined terminator
(0.029460) KernelPartitioningPass.cpp:1296:   instantiating internal edge
(0.029468) KernelPartitioningPass.cpp:1302:   adding internal edge: entry -> $BB_1_0002 type: fallthrough
(0.029477) KernelPartitioningPass.cpp:1308:  identifying targets of external IN edges
(0.029485) KernelPartitioningPass.cpp:1320:  identifying sources of external OUT edges
(0.029494) KernelPartitioningPass.cpp:1341:  _analyzeDivergentControlFlow()
(0.029502) KernelPartitioningPass.cpp:1371: as a reminder, this partition contains 1 blocks:
(0.029511) KernelPartitioningPass.cpp:1374:   $BB_1_0002
(0.029519) KernelPartitioningPass.cpp:1379:   0 divergent blocks
(0.029531) KernelPartitioningPass.cpp:573:  Linking external edges
(0.029539) KernelPartitioningPass.cpp:575:    but first!
(0.029547) KernelPartitioningPass.cpp:581:    subkernel _subkernel_test_1 out edges: 
(0.029554) KernelPartitioningPass.cpp:588:      $BB_1_0002 -> exit
(0.029562) KernelPartitioningPass.cpp:592:    and here are all the in_edges:
(0.029570) KernelPartitioningPass.cpp:604:    now linking
(0.029590) KernelPartitioningPass.cpp:621:     same subkernel
(0.029598) KernelPartitioningPass.cpp:647:   failed to link external edge: $BB_1_0002 -> exit
(0.029637) KernelPartitioningPass.cpp:1560: Subkernel::_createExternalHandlers()
(0.029650) KernelPartitioningPass.cpp:1568:   visiting external IN-edges
(0.029659) KernelPartitioningPass.cpp:1600:   visiting external OUT-edges
(0.029667) KernelPartitioningPass.cpp:1615:     OUT-edge: $BB_1_0002 -> $BB_1_0002_thread_exit (0 live values
(0.029678) KernelPartitioningPass.cpp:1630: is this a divergent handler? edgeIndex 0
(0.029686) KernelPartitioningPass.cpp:1679:   creating exit in block $BB_1_0002_thread_exit
(0.029700) KernelPartitioningPass.cpp:1664:   adding $BB_1_0002 to frontierExitBlocks
(0.029710) KernelPartitioningPass.cpp:1765: Frontier exit blocks:
(0.029719) KernelPartitioningPass.cpp:1770:   obtained CFG-to-DFG mapping. Now visiting 1 frontier exit blocks
(0.029727) KernelPartitioningPass.cpp:1775:    frontier exit block: $BB_1_0002
(0.029735) KernelPartitioningPass.cpp:1782:  block $BB_1_0002 (1 external edges) terminator: exit
(0.029743) KernelPartitioningPass.cpp:1810:    exit
(0.029751) KernelPartitioningPass.cpp:1825: end frontier exit blocks:
Pass/Fail : Fail


Name : TestPTXAssembly

Description: A unit test framework for PTX. Runs random inputs through unit 
             tests on all available devices until a timer expires.


Test Seed : 1336535632
Test time : 0.0309663

Status : Ran 'TestVectorElements-u32' for 6 iterations.
 Output parameter 0 (I16) computed value - 0 does not match reference value - 16788
  On device - 0 - 'Ocelot Dynamic Multicore CPU'
Test 'TestAdd-u16' seed '1336535632' failed.



INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDataflowGraph
INFO     Test completed in 0.0648257732391 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestDataflowGraph

Description: A test for the DataflowGraph class. Test Points: 1) 
             Generic: load PTX files, convert them into dataflow graphs, verify that 
             all live ranges spanning blocks are consistent. 2) SSA: convert to 
             ssa form, verify that no register is declared more than once. 3) 
             reverse SSA: convert to ssa then out of ssa, verify that all live 
             ranges spanning blocks are consistent.


Test Seed : 1336535632
Test time : 1.81198e-05

Status : Testing Generic Dataflow
 Test Passed
Testing SSA Dataflow
 Test Passed
Testing SSA then back Dataflow
 Test Passed



INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaMalloc
INFO     Test completed in 0.0929999351501 seconds
INFO      It produced the following output:
test_malloc(256, 128)
PASSED
test_mallocArray(256, 128)
checking results from last cudaMemcpyFromArray
PASSED
[1] mallocing pitch
[2] memcpying2d
[3] memcpying
[4] checking for errors
[5] mallocing
[6] memcpying
[7] memcpying
[8] final free
Pass/Fail : Pass

INFO     
Passing tests:
 (0.130s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaSequence : Passed
 (0.116s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTexture2D : Passed
 (0.065s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDataflowGraph : Passed
 (0.172s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMKernels : Passed
 (0.108s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaGlobals : Passed
 (0.114s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTextureArray : Passed
 (0.084s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLexer : Passed
 (0.059s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXToLLVMTranslator : Passed
 (0.093s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaMalloc : Passed
 (0.080s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestEmulator : Passed
 (0.079s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestParser : Passed
 (0.124s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDeviceSwitching : Passed
 (0.098s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestInstructions : Passed
 (0.068s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMInstructions : Passed
 (0.088s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCalVectorScale : Passed
 (0.083s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestKernels : Passed

Failing tests:
 (0.072s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestIndirectFunctionCall : Did not complete.
 (0.092s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXAssembly : Failed
 (0.065s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestFunctionCall : Did not complete.
 (0.057s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestExternalFunctions : Did not complete.

