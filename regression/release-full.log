INFO     Reading in test file /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/regression/full.level
INFO      Found the following tests:
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLexer
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestParser
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestEmulator
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestInstructions
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestKernels
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDataflowGraph
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMInstructions
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXToLLVMTranslator
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMKernels
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaMalloc
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTexture2D
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTextureArray
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaGlobals
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDeviceSwitching
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaSequence
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCalVectorScale
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXAssembly
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestFunctionCall
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestIndirectFunctionCall
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestExternalFunctions
INFO     ==== INDIVIDUAL TEST RESULTS ====

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDeviceSwitching 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMInstructions 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestFunctionCall 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTexture2D 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDeviceSwitching
INFO     Test completed in 0.0502002239227 seconds
INFO      It produced the following output:
(0.000681) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
Pass/Fail : Pass


Name : TestDeviceSwitching

Description: A unit test for the ability of the CUDA runtime to switch 
             between devices and use multiple threads Test Points: 1) In a single 
             threaded application, iterate across all devices launching the same 
             simple kernel each time 2) Test context migration support in 
             ocelot. Iterate across all devices, launching a simple kernel that 
             updates shared variable. Use the context switch mechanism to 
             migrate the shared data. 3) Test multi-threading support. Launch one 
             host thread to allocate memory, pass pointers to worker 
             threads, each of which should launch independent kernels in 
             parallel.


Test Seed : 1326492380
Test time : 0.000546217

Status : Test Point 1 Passed
Test Point 2 Passed
Test Point 3 Passed



INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestInstructions 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMInstructions
INFO     Test completed in 0.05122590065 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestLLVMInstructions

Description: A test for the assembly code generation and automatic 
             verfication of individual LLVM instructions. Test Points: 1) For each 
             instruction, generate several assembly strings using the 
             instruction's toString method, make sure that these pass the valid() 
             check, compare to references from the LLVM manual.


Test Seed : 1326492380
Test time : 0.000880957

Status :  Checked instruction "<result> = add i32 4, %var"
Add Instruction Passed
 Checked instruction "%ptr = alloca i32"
 Checked instruction "%ptr = alloca i32, i32 4"
 Checked instruction "%ptr = alloca i32, i32 4, align 1024"
 Checked instruction "%ptr = alloca i32, align 1024"
Alloca Instruction Passed
 Checked instruction "<result> = and i32 4, %var"
 Checked instruction "<result> = and i32 15, 40"
 Checked instruction "<result> = and i32 4, 8"
And Instruction Passed
 Checked instruction "<result> = ashr i32 4, 1"
 Checked instruction "<result> = ashr i8 -2, 1"
 Checked instruction "<result> = ashr < 2 x i32 > < i32 -2, i32 4 >, < i32 1, i32 3 >"
Ashr Instruction Passed
 Checked instruction "%X = bitcast i8 -1 to i8"
 Checked instruction "%Z = bitcast < 2 x i32 > %V to i64"
Bitcast Instruction Passed
 Checked instruction "br i1 %cond, label %IfEqual, label %IfUnequal"
Br Instruction Passed
 Checked instruction "%retval = call i32 @test(i32 %argc)"
 Checked instruction "call i32 (i8*, ...)* @printf(i8* %msg, i32 12, i8 42)"
 Checked instruction "%X = tail call i32 @foo()"
 Checked instruction "%Y = tail call fastcc i32 @foo()"
 Checked instruction "call void @foo(i8 97 signext)"
 Checked instruction "%r = call %struct.A @foo()"
 Checked instruction "call void @foo() noreturn"
 Checked instruction "%ZZ = call zeroext i32 @bar()"
Call Instruction Passed
 Checked instruction "%result = extractelement < 4 x i32 > %vec, i32 0"
Extractelement Instruction Passed
 Checked instruction "%result = extractvalue { i32, float } %agg, 0"
Extractvalue Instruction Passed
 Checked instruction "<result> = fadd float 0x4010000000000000, %var"
Fadd Instruction Passed
 Checked instruction "<result> = fcmp oeq float 0x4010000000000000, 0x4014000000000000"
 Checked instruction "<result> = fcmp one float 0x4010000000000000, 0x4014000000000000"
 Checked instruction "<result> = fcmp olt float 0x4010000000000000, 0x4014000000000000"
 Checked instruction "<result> = fcmp ueq float 0x3ff0000000000000, 0x4000000000000000"
Fcmp Instruction Passed
 Checked instruction "<result> = fdiv float 0x4010000000000000, %var"
Fdiv Instruction Passed
 Checked instruction "<result> = fmul float 0x4010000000000000, %var"
Fmul Instruction Passed
 Checked instruction "%X = fpext float 0x400921cac0000000 to double"
 Checked instruction "%Y = fpext float 0x3ff0000000000000 to float"
Fpext Instruction Passed
 Checked instruction "%X = fptosi double 0xc05ec00000000000 to i32"
Fptosi Instruction Passed
 Checked instruction "%X = fptoui double 0x405ec00000000000 to i32"
Fptoui Instruction Passed
 Checked instruction "%X = fptrunc double 0x405ec00000000000 to float"
Fptrunc Instruction Passed
 Checked instruction "free [ 4 x i8 ]* %array"
Free Instruction Passed
 Checked instruction "<result> = frem float 0x4010000000000000, %var"
Frem Instruction Passed
 Checked instruction "<result> = fsub float 0x0, %val"
Fsub Instruction Passed
 Checked instruction "%vptr = getelementptr { i32, < 2 x i8 > }* %svptr, i32 0, i32 1, i32 1"
 Checked instruction "%eptr = getelementptr [ 12 x i8 ]* %aptr, i32 0, i32 1"
Getelementptr Instruction Passed
 Checked instruction "<result> = icmp ne float* %X, %X"
Icmp Instruction Passed
 Checked instruction "%result = insertelement < 4 x i32 > %vec, i32 1, i32 0"
Insertelement Instruction Passed
 Checked instruction "%result = insertvalue { i32, float } %agg, i32 1, 0"
Insertvalue Instruction Passed
 Checked instruction "%Y = inttoptr i64 0 to i32*"
Inttoptr Instruction Passed
 Checked instruction "%retval = invoke i32 @Test(i32 15) to label %Continue unwind label %TestCleanup"
Invoke Instruction Passed
 Checked instruction "%val = load i32* %ptr"
Load Instruction Passed
 Checked instruction "<result> = lshr i8 -2, 1"
Lshr Instruction Passed
 Checked instruction "%array2 = malloc [ 12 x i8 ], i32 %size"
Malloc Instruction Passed
 Checked instruction "<result> = mul i32 4, %var"
Mul Instruction Passed
 Checked instruction "<result> = or i32 15, 40"
Or Instruction Passed
 Checked instruction "%indvar = phi i32 [ 0, %LoopHeader ], [ %nextindvar, %Loop ]"
Phi Instruction Passed
 Checked instruction "%Y = ptrtoint i32* %x to i64"
Prtoint Instruction Passed
 Checked instruction "ret void"
Ret Instruction Passed
 Checked instruction "<result> = sdiv i32 4, %var"
Sdiv Instruction Passed
 Checked instruction "%X = select i1 1, i8 17, i8 42"
Select Instruction Passed
 Checked instruction "%X = sext i8 -1 to i16"
Sext Instruction Passed
 Checked instruction "<result> = shl i32 1, 32"
Shl Instruction Passed
 Checked instruction "%result = shufflevector < 4 x i32 > %v1, < 4 x i32 > %v2, < 8 x i32 > < i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7 >"
ShuffleVector Instruction Passed
 Checked instruction "%X = sitofp i32 257 to float"
Sitofp Instruction Passed
 Checked instruction "<result> = srem i32 4, %var"
Srem Instruction Passed
 Checked instruction "store i32 3, i32* %ptr"
Store Instruction Passed
 Checked instruction "<result> = sub i32 4, %var"
Sub Instruction Passed
 Checked instruction "switch i32 %val, label %otherwise [ i32 0, label %onzero i32 1, label %onone i32 2, label %ontwo ]"
Switch Instruction Passed
 Checked instruction "%Y = trunc i32 123 to i1"
Trunc Instruction Passed
 Checked instruction "<result> = udiv i32 4, %var"
Udiv Instruction Passed
 Checked instruction "%Y = uitofp i8 -1 to double"
Uitofp Instruction Passed
 Checked instruction "unreachable"
Unreachable Instruction Passed
 Checked instruction "unwind"
Unwind Instruction Passed
 Checked instruction "<result> = urem i32 4, %var"
Urem Instruction Passed
 Checked instruction "%tmp = va_arg i8** %ap, i32"
VarArg Instruction Passed
 Checked instruction "<result> = xor i32 -1, %V"
Xor Instruction Passed
 Checked instruction "%X = zext i32 257 to i64"
Zext Instruction Passed



INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaSequence 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestFunctionCall
INFO     Test completed in 0.0554580688477 seconds
INFO      It produced the following output:
(0.000526) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
(0.005166) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(kernel)
(0.005322) KernelPartitioningPass.cpp:66:   Partitioning kernel kernel
/*
* Ocelot Version : 2.1.1654
*/
.entry kernel(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{

	.param  .b32 param0;
	.param  .b32 retval0;
	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .pred %p7;
	.reg .s64 %r8;
	.reg .s64 %r9;
	.reg .f32 %r10;
	.reg .f32 %r11;
	$BB_2_0002:		/**/ 
		ld.param.u64 %r0, [kernel_param_0]; 
		ld.param.u32 %r1, [kernel_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %ntid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		setp.lt.s32 %p7, %r6, %r1; 
		@%p7 bra $BB_2_0004; 
	$BB_2_0003:		/**/ 
		ret; 
	$BB_2_0004:		/*BB1_2*/ 
		mul.wide.s32 %r8, %r6, 4; 
		add.s64 %r9, %r2, %r8; 
		ld.global.f32 %r10, [%r9]; 
		st.param.f32 [param0], %r10; 
		call.uni (retval0), square, (param0); 
		ld.param.f32 %r11, [retval0]; 
		st.global.f32 [%r9], %r11; 
		ret; 
}
(0.005530) KernelPartitioningPass.cpp:209:    Spill region size is 88
(0.005543) KernelPartitioningPass.cpp:103:  KernelGraph::_partitionMinimumSize()
(0.005554) KernelPartitioningPass.cpp:267:  Subkernel::create(kernel)
(0.005563) KernelPartitioningPass.cpp:295:  Subkernel::_create(kernel)
(0.005589) KernelPartitioningPass.cpp:322:   adding block $BB_2_0002
(0.005605) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_2_0002 -> $BB_2_0003
(0.005616) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_2_0002 -> $BB_2_0004
(0.005623) KernelPartitioningPass.cpp:370:   ENTRY EDGE
(0.005634) KernelPartitioningPass.cpp:380:   creating internal edges
(0.005641) KernelPartitioningPass.cpp:388:    adding internal edge: entry -> $BB_2_0002
(0.005648) KernelPartitioningPass.cpp:393:   NO external in edges. Create a dummy edge from the entry node to the correct block
(0.005655) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.005660) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.005672) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.005678) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_kernel_0(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[88];

	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .pred %p7;
	$BB_2_0002:		/**/ 
		ld.param.u64 %r0, [kernel_param_0]; 
		ld.param.u32 %r1, [kernel_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %ntid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		setp.lt.s32 %p7, %r6, %r1; 
		@%p7 bra $BB_2_0004; 
	$BB_2_0002_external_out_handler_to_2_0003:
	$BB_2_0002_external_out_handler_to_2_0004:
}
(0.005794) KernelPartitioningPass.cpp:267:  Subkernel::create(kernel)
(0.005801) KernelPartitioningPass.cpp:295:  Subkernel::_create(kernel)
(0.005815) KernelPartitioningPass.cpp:322:   adding block $BB_2_0003
(0.005825) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_2_0003 -> exit
(0.005833) KernelPartitioningPass.cpp:367:    adding EXTERNAL IN-Edge $BB_2_0002 -> $BB_2_0003
(0.005841) KernelPartitioningPass.cpp:380:   creating internal edges
(0.005847) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.005854) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.005861) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.005868) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_kernel_1(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[88];

	$BB_2_0003_external_in_handler__from_2_0002:
	$BB_2_0003:		/**/ 
		exit; 
	$BB_2_0003_external_out_handler_to_:
}
(0.005950) KernelPartitioningPass.cpp:267:  Subkernel::create(kernel)
(0.005958) KernelPartitioningPass.cpp:295:  Subkernel::_create(kernel)
(0.005975) KernelPartitioningPass.cpp:322:   adding block $BB_2_0004
(0.005985) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_2_0004 -> exit
(0.005994) KernelPartitioningPass.cpp:367:    adding EXTERNAL IN-Edge $BB_2_0002 -> $BB_2_0004
(0.006002) KernelPartitioningPass.cpp:380:   creating internal edges
(0.006008) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.006015) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.006022) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.006029) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_kernel_2(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[88];

	.reg .s64 %r8;
	.reg .s32 %r6;
	.reg .s64 %r9;
	.reg .s64 %r2;
	.reg .f32 %r10;
	.reg .f32 %r11;
	$BB_2_0004_external_in_handler__from_2_0002:
	$BB_2_0004:		/*BB1_2*/ 
		mul.wide.s32 %r8, %r6, 4; 
		add.s64 %r9, %r2, %r8; 
		ld.global.f32 %r10, [%r9]; 
		st.param.f32 [param0], %r10; 
		call.uni (retval0), square, (param0); 
		ld.param.f32 %r11, [retval0]; 
		st.global.f32 [%r9], %r11; 
		exit; 
	$BB_2_0004_external_out_handler_to_:
}
(0.006123) KernelPartitioningPass.cpp:125:  Linking external edges
(0.006130) KernelPartitioningPass.cpp:152:    linking $BB_2_0002_external_out_handler_to_2_0003 to $BB_2_0003_external_in_handler__from_2_0002 (entry 65536)
(0.006138) KernelPartitioningPass.cpp:152:    linking $BB_2_0002_external_out_handler_to_2_0004 to $BB_2_0004_external_in_handler__from_2_0002 (entry 131072)
(0.006145) KernelPartitioningPass.cpp:159:   failed to link external edge: $BB_2_0003 -> exit
(0.006151) KernelPartitioningPass.cpp:159:   failed to link external edge: $BB_2_0004 -> exit
(0.006197) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.006215) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.006224) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.006234) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_2_0002 -> $BB_2_0002_external_out_handler_to_2_0003 (2 live values
(0.006248) KernelPartitioningPass.cpp:712:        alive-out: 2 [type: s64]
(0.006264) KernelPartitioningPass.cpp:712:        alive-out: 6 [type: s32]
(0.006275) KernelPartitioningPass.cpp:837:    creating exit in block $BB_2_0002_external_out_handler_to_2_0003
(0.006291) KernelPartitioningPass.cpp:734:  Adding $BB_2_0002 to frontierExitBlocks
(0.006304) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_2_0002 -> $BB_2_0002_external_out_handler_to_2_0004 (2 live values
(0.006313) KernelPartitioningPass.cpp:712:        alive-out: 2 [type: s64]
(0.006324) KernelPartitioningPass.cpp:712:        alive-out: 6 [type: s32]
(0.006334) KernelPartitioningPass.cpp:837:    creating exit in block $BB_2_0002_external_out_handler_to_2_0004
(0.006349) KernelPartitioningPass.cpp:734:  Adding $BB_2_0002 to frontierExitBlocks
(0.006357) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.006368) KernelPartitioningPass.cpp:757:   block $BB_2_0002 (2 external edges) terminator: @%p7 bra $BB_2_0004
(0.006376) KernelPartitioningPass.cpp:765:   1 external edge, modifying branch target to point to handler
(0.006383) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.006395) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.006402) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_kernel_0(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[88];

	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .pred %p7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	.reg .u32 %r12;
	.reg .u32 %r13;
	$BB_2_0002:		/**/ 
		ld.param.u64 %r0, [kernel_param_0]; 
		ld.param.u32 %r1, [kernel_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %ntid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		setp.lt.s32 %p7, %r6, %r1; 
		@%p7 bra $BB_2_0002_external_out_handler_to_2_0004; 
	$BB_2_0002_external_out_handler_to_2_0003:		// 2 live-out values 
		mov.s32 %r8, _Zocelot_spill_area; 
		st.local.s64 [%r8 + 16], %r2; 
		st.local.s32 [%r8 + 48], %r6; 
		mov.s32 %r9, _Zocelot_resume_status; 
		st.local.u32 [%r9], 8; 
		mov.s32 %r10, _Zocelot_resume_point; 
		st.local.u32 [%r10], 65536; 
		exit; 
	$BB_2_0002_external_out_handler_to_2_0004:		// 2 live-out values 
		mov.s32 %r11, _Zocelot_spill_area; 
		st.local.s64 [%r11 + 16], %r2; 
		st.local.s32 [%r11 + 48], %r6; 
		mov.s32 %r12, _Zocelot_resume_status; 
		st.local.u32 [%r12], 8; 
		mov.s32 %r13, _Zocelot_resume_point; 
		st.local.u32 [%r13], 131072; 
		exit; 
}
(0.006610) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.006620) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.006627) KernelPartitioningPass.cpp:641:      IN-edge: $BB_2_0003_external_in_handler__from_2_0002 -> $BB_2_0003 (2 live values
(0.006639) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.006645) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_2_0003 -> $BB_2_0003_external_out_handler_to_ (0 live values
(0.006654) KernelPartitioningPass.cpp:837:    creating exit in block $BB_2_0003_external_out_handler_to_
(0.006669) KernelPartitioningPass.cpp:734:  Adding $BB_2_0003 to frontierExitBlocks
(0.006676) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.006684) KernelPartitioningPass.cpp:757:   block $BB_2_0003 (1 external edges) terminator: exit
(0.006691) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.006699) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.006705) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_kernel_1(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[88];

	.reg .u32 %r1;
	.reg .u32 %r2;
	$BB_2_0003_external_in_handler__from_2_0002:		// 2 live-in values 
		bra $BB_2_0003; 
	$BB_2_0003:		/**/ 
		bra $BB_2_0003_external_out_handler_to_; 
	$BB_2_0003_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r1, _Zocelot_resume_status; 
		st.local.u32 [%r1], 6; 
		mov.s32 %r2, _Zocelot_resume_point; 
		st.local.u32 [%r2], 0; 
		exit; 
}
(0.006798) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.006809) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.006816) KernelPartitioningPass.cpp:641:      IN-edge: $BB_2_0004_external_in_handler__from_2_0002 -> $BB_2_0004 (2 live values
(0.006824) KernelPartitioningPass.cpp:655:        alive-in: 2 [type: s64]
(0.006836) KernelPartitioningPass.cpp:655:        alive-in: 6 [type: s32]
(0.006848) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.006855) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_2_0004 -> $BB_2_0004_external_out_handler_to_ (0 live values
(0.006863) KernelPartitioningPass.cpp:837:    creating exit in block $BB_2_0004_external_out_handler_to_
(0.006880) KernelPartitioningPass.cpp:734:  Adding $BB_2_0004 to frontierExitBlocks
(0.006888) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.006896) KernelPartitioningPass.cpp:757:   block $BB_2_0004 (1 external edges) terminator: exit
(0.006903) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.006912) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.006918) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot VersiTestFunctionCall: ocelot/executive/implementation/DynamicTranslationCache.cpp:885: void setupCallTargets(ir::PTXKernel&, const executive::DynamicTranslationCache&): Assertion `0 && "arbitrary function calls not yet supported"' failed.
on : 2.1.1654
*/
.entry _subkernel_kernel_2(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[88];

	.reg .s64 %r8;
	.reg .s32 %r6;
	.reg .s64 %r9;
	.reg .s64 %r2;
	.reg .f32 %r10;
	.reg .f32 %r11;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r12;
	$BB_2_0004_external_in_handler__from_2_0002:		// 2 live-in values 
		mov.s32 %r12, _Zocelot_spill_area; 
		ld.local.s64 %r2, [%r12 + 16]; 
		ld.local.s32 %r6, [%r12 + 48]; 
		bra $BB_2_0004; 
	$BB_2_0004:		/*BB1_2*/ 
		mul.wide.s32 %r8, %r6, 4; 
		add.s64 %r9, %r2, %r8; 
		ld.global.f32 %r10, [%r9]; 
		st.param.f32 [param0], %r10; 
		call.uni (retval0), square, (param0); 
		ld.param.f32 %r11, [retval0]; 
		st.global.f32 [%r9], %r11; 
		bra $BB_2_0004_external_out_handler_to_; 
	$BB_2_0004_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r13, _Zocelot_resume_status; 
		st.local.u32 [%r13], 6; 
		mov.s32 %r14, _Zocelot_resume_point; 
		st.local.u32 [%r14], 0; 
		exit; 
}
(0.007086) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(ocelot/cuda/test/functions/simpleFunc.cu)
(0.007110) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(kernel)
(0.007125) DynamicTranslationCache.cpp:1115: __translateKernel()
(0.007134) DynamicTranslationCache.cpp:1136:   translating subkernel _subkernel_kernel_0
(0.007167) DynamicTranslationCache.cpp:1149:   Converting from PTX IR to LLVM IR.
(0.008498) DynamicTranslationCache.cpp:1166: translated PTX to LLVM
(0.009188) DynamicTranslationCache.cpp:1136:   translating subkernel _subkernel_kernel_1
(0.009210) DynamicTranslationCache.cpp:1149:   Converting from PTX IR to LLVM IR.
(0.009510) DynamicTranslationCache.cpp:1166: translated PTX to LLVM
(0.009657) DynamicTranslationCache.cpp:1136:   translating subkernel _subkernel_kernel_2

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXToLLVMTranslator -i ../tests/ptx 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTexture2D
INFO     Test completed in 0.0623679161072 seconds
INFO      It produced the following output:
(0.000507) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
failed to bind texture: cudaErrorInvalidValue

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLexer -i ../tests/ptx 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestInstructions
INFO     Test completed in 0.049507856369 seconds
INFO      It produced the following output:
(0.003044) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
Pass/Fail : Pass


Name : TestInstructions

Description: 


Test Seed : 1326492380
Test time : 0.000618696

Status : Test output:
Accessors test passed.
pass: load and store instructions
Abs test passed.
pass: arithmetic instructions
pass: exotic arithmetic instructions
pass: floating-point instructions
pass: logical instructions
pass: comparison instructions
pass: predicated Add and Ld isntructions



INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestIndirectFunctionCall 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXToLLVMTranslator
INFO     Test completed in 0.0520370006561 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestPTXToLLVMTranslator

Description: This is a basic test that just tries to get through a 
             translation successfully of as many PTX programs as possible Test 
             Points: 1) Scan for all PTX files in a directory, try to 
             translate them.


Test Seed : 1326492380
Test time : 1.62125e-05

Status : 


INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTextureArray 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLexer
INFO     Test completed in 0.0573139190674 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestLexer

Description: Tests for the PTX lexer. Test Point 1: Scan a PTX file and 
             write out a temp stream, scan the stream again and make sure that the 
             two sets of tokens match


Test Seed : 1326492380
Test time : 1.45435e-05

Status : 


INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestKernels 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaSequence
INFO     Test completed in 0.097825050354 seconds
INFO      It produced the following output:
(0.000592) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
sequence() - A_gpu = 0x0110bf00
(0.004284) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(sequence)
(0.004400) KernelPartitioningPass.cpp:66:   Partitioning kernel sequence
/*
* Ocelot Version : 2.1.1654
*/
.entry sequence(.param  .u64 sequence_param_0,
		.param  .u32 sequence_param_1)
{

	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .pred %p7;
	.reg .s32 %r8;
	.reg .s64 %r9;
	.reg .s64 %r10;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [sequence_param_0]; 
		ld.param.u32 %r1, [sequence_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ntid.x; 
		mov.u32 %r4, %ctaid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		setp.lt.s32 %p7, %r6, %r1; 
		@%p7 bra $BB_1_0004; 
	$BB_1_0003:		/**/ 
		ret; 
	$BB_1_0004:		/*BB0_2*/ 
		shl.b32 %r8, %r6, 1; 
		mul.wide.s32 %r9, %r6, 4; 
		add.s64 %r10, %r2, %r9; 
		st.global.u32 [%r10], %r8; 
		ret; 
}
(0.004571) KernelPartitioningPass.cpp:209:    Spill region size is 80
(0.004583) KernelPartitioningPass.cpp:103:  KernelGraph::_partitionMinimumSize()
(0.004594) KernelPartitioningPass.cpp:267:  Subkernel::create(sequence)
(0.004603) KernelPartitioningPass.cpp:295:  Subkernel::_create(sequence)
(0.004624) KernelPartitioningPass.cpp:322:   adding block $BB_1_0002
(0.004639) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_1_0002 -> $BB_1_0003
(0.004650) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_1_0002 -> $BB_1_0004
(0.004658) KernelPartitioningPass.cpp:370:   ENTRY EDGE
(0.004668) KernelPartitioningPass.cpp:380:   creating internal edges
(0.004675) KernelPartitioningPass.cpp:388:    adding internal edge: entry -> $BB_1_0002
(0.004683) KernelPartitioningPass.cpp:393:   NO external in edges. Create a dummy edge from the entry node to the correct block
(0.004689) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.004695) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.004706) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.004713) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_sequence_0(.param  .u64 sequence_param_0,
		.param  .u32 sequence_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[80];

	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .pred %p7;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [sequence_param_0]; 
		ld.param.u32 %r1, [sequence_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ntid.x; 
		mov.u32 %r4, %ctaid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		setp.lt.s32 %p7, %r6, %r1; 
		@%p7 bra $BB_1_0004; 
	$BB_1_0002_external_out_handler_to_1_0003:
	$BB_1_0002_external_out_handler_to_1_0004:
}
(0.004827) KernelPartitioningPass.cpp:267:  Subkernel::create(sequence)
(0.004835) KernelPartitioningPass.cpp:295:  Subkernel::_create(sequence)
(0.004848) KernelPartitioningPass.cpp:322:   adding block $BB_1_0003
(0.004857) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_1_0003 -> exit
(0.004866) KernelPartitioningPass.cpp:367:    adding EXTERNAL IN-Edge $BB_1_0002 -> $BB_1_0003
(0.004874) KernelPartitioningPass.cpp:380:   creating internal edges
(0.004880) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.004887) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.004894) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.004900) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_sequence_1(.param  .u64 sequence_param_0,
		.param  .u32 sequence_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[80];

	$BB_1_0003_external_in_handler__from_1_0002:
	$BB_1_0003:		/**/ 
		exit; 
	$BB_1_0003_external_out_handler_to_:
}
(0.004981) KernelPartitioningPass.cpp:267:  Subkernel::create(sequence)
(0.004989) KernelPartitioningPass.cpp:295:  Subkernel::_create(sequence)
(0.005003) KernelPartitioningPass.cpp:322:   adding block $BB_1_0004
(0.005012) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_1_0004 -> exit
(0.005021) KernelPartitioningPass.cpp:367:    adding EXTERNAL IN-Edge $BB_1_0002 -> $BB_1_0004
(0.005029) KernelPartitioningPass.cpp:380:   creating internal edges
(0.005035) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.005042) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.005050) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.005056) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_sequence_2(.param  .u64 sequence_param_0,
		.param  .u32 sequence_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[80];

	.reg .s32 %r8;
	.reg .s32 %r6;
	.reg .s64 %r9;
	.reg .s64 %r10;
	.reg .s64 %r2;
	$BB_1_0004_external_in_handler__from_1_0002:
	$BB_1_0004:		/*BB0_2*/ 
		shl.b32 %r8, %r6, 1; 
		mul.wide.s32 %r9, %r6, 4; 
		add.s64 %r10, %r2, %r9; 
		st.global.u32 [%r10], %r8; 
		exit; 
	$BB_1_0004_external_out_handler_to_:
}
(0.005133) KernelPartitioningPass.cpp:125:  Linking external edges
(0.005140) KernelPartitioningPass.cpp:152:    linking $BB_1_0002_external_out_handler_to_1_0003 to $BB_1_0003_external_in_handler__from_1_0002 (entry 65536)
(0.005147) KernelPartitioningPass.cpp:152:    linking $BB_1_0002_external_out_handler_to_1_0004 to $BB_1_0004_external_in_handler__from_1_0002 (entry 131072)
(0.005154) KernelPartitioningPass.cpp:159:   failed to link external edge: $BB_1_0003 -> exit
(0.005161) KernelPartitioningPass.cpp:159:   failed to link external edge: $BB_1_0004 -> exit
(0.005204) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.005221) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.005230) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.005242) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_1_0003 (2 live values
(0.005255) KernelPartitioningPass.cpp:712:        alive-out: 2 [type: s64]
(0.005271) KernelPartitioningPass.cpp:712:        alive-out: 6 [type: s32]
(0.005282) KernelPartitioningPass.cpp:837:    creating exit in block $BB_1_0002_external_out_handler_to_1_0003
(0.005297) KernelPartitioningPass.cpp:734:  Adding $BB_1_0002 to frontierExitBlocks
(0.005310) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_1_0004 (2 live values
(0.005318) KernelPartitioningPass.cpp:712:        alive-out: 2 [type: s64]
(0.005330) KernelPartitioningPass.cpp:712:        alive-out: 6 [type: s32]
(0.005340) KernelPartitioningPass.cpp:837:    creating exit in block $BB_1_0002_external_out_handler_to_1_0004
(0.005353) KernelPartitioningPass.cpp:734:  Adding $BB_1_0002 to frontierExitBlocks
(0.005363) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.005378) KernelPartitioningPass.cpp:757:   block $BB_1_0002 (2 external edges) terminator: @%p7 bra $BB_1_0004
(0.005386) KernelPartitioningPass.cpp:765:   1 external edge, modifying branch target to point to handler
(0.005393) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.005404) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.005411) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_sequence_0(.param  .u64 sequence_param_0,
		.param  .u32 sequence_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[80];

	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .pred %p7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	.reg .u32 %r12;
	.reg .u32 %r13;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [sequence_param_0]; 
		ld.param.u32 %r1, [sequence_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ntid.x; 
		mov.u32 %r4, %ctaid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		setp.lt.s32 %p7, %r6, %r1; 
		@%p7 bra $BB_1_0002_external_out_handler_to_1_0004; 
	$BB_1_0002_external_out_handler_to_1_0003:		// 2 live-out values 
		mov.s32 %r8, _Zocelot_spill_area; 
		st.local.s64 [%r8 + 16], %r2; 
		st.local.s32 [%r8 + 48], %r6; 
		mov.s32 %r9, _Zocelot_resume_status; 
		st.local.u32 [%r9], 8; 
		mov.s32 %r10, _Zocelot_resume_point; 
		st.local.u32 [%r10], 65536; 
		exit; 
	$BB_1_0002_external_out_handler_to_1_0004:		// 2 live-out values 
		mov.s32 %r11, _Zocelot_spill_area; 
		st.local.s64 [%r11 + 16], %r2; 
		st.local.s32 [%r11 + 48], %r6; 
		mov.s32 %r12, _Zocelot_resume_status; 
		st.local.u32 [%r12], 8; 
		mov.s32 %r13, _Zocelot_resume_point; 
		st.local.u32 [%r13], 131072; 
		exit; 
}
(0.005623) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.005634) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.005641) KernelPartitioningPass.cpp:641:      IN-edge: $BB_1_0003_external_in_handler__from_1_0002 -> $BB_1_0003 (2 live values
(0.005654) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.005661) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_1_0003 -> $BB_1_0003_external_out_handler_to_ (0 live values
(0.005670) KernelPartitioningPass.cpp:837:    creating exit in block $BB_1_0003_external_out_handler_to_
(0.005684) KernelPartitioningPass.cpp:734:  Adding $BB_1_0003 to frontierExitBlocks
(0.005692) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.005700) KernelPartitioningPass.cpp:757:   block $BB_1_0003 (1 external edges) terminator: exit
(0.005707) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.005715) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.005722) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_sequence_1(.param  .u64 sequence_param_0,
		.param  .u32 sequence_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[80];

	.reg .u32 %r1;
	.reg .u32 %r2;
	$BB_1_0003_external_in_handler__from_1_0002:		// 2 live-in values 
		bra $BB_1_0003; 
	$BB_1_0003:		/**/ 
		bra $BB_1_0003_external_out_handler_to_; 
	$BB_1_0003_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r1, _Zocelot_resume_status; 
		st.local.u32 [%r1], 6; 
		mov.s32 %r2, _Zocelot_resume_point; 
		st.local.u32 [%r2], 0; 
		exit; 
}
(0.005819) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.005831) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.005839) KernelPartitioningPass.cpp:641:      IN-edge: $BB_1_0004_external_in_handler__from_1_0002 -> $BB_1_0004 (2 live values
(0.005848) KernelPartitioningPass.cpp:655:        alive-in: 2 [type: s64]
(0.005860) KernelPartitioningPass.cpp:655:        alive-in: 6 [type: s32]
(0.005872) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.005879) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_1_0004 -> $BB_1_0004_external_out_handler_to_ (0 live values
(0.005888) KernelPartitioningPass.cpp:837:    creating exit in block $BB_1_0004_external_out_handler_to_
(0.005902) KernelPartitioningPass.cpp:734:  Adding $BB_1_0004 to frontierExitBlocks
(0.005910) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.005918) KernelPartitioningPass.cpp:757:   block $BB_1_0004 (1 external edges) terminator: exit
(0.005925) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.005933) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.005939) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_sequence_2(.param  .u64 sequence_param_0,
		.param  .u32 sequence_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[80];

	.reg .s32 %r8;
	.reg .s32 %r6;
	.reg .s64 %r9;
	.reg .s64 %r10;
	.reg .s64 %r2;
	.reg .u32 %r12;
	.reg .u32 %r13;
	.reg .u32 %r11;
	$BB_1_0004_external_in_handler__from_1_0002:		// 2 live-in values 
		mov.s32 %r11, _Zocelot_spill_area; 
		ld.local.s64 %r2, [%r11 + 16]; 
		ld.local.s32 %r6, [%r11 + 48]; 
		bra $BB_1_0004; 
	$BB_1_0004:		/*BB0_2*/ 
		shl.b32 %r8, %r6, 1; 
		mul.wide.s32 %r9, %r6, 4; 
		add.s64 %r10, %r2, %r9; 
		st.global.u32 [%r10], %r8; 
		bra $BB_1_0004_external_out_handler_to_; 
	$BB_1_0004_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r12, _Zocelot_resume_status; 
		st.local.u32 [%r12], 6; 
		mov.s32 %r13, _Zocelot_resume_point; 
		st.local.u32 [%r13], 0; 
		exit; 
}
(0.006088) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(ocelot/cuda/test/kernels/sequence.cu)
(0.006110) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(sequence)
(0.006125) DynamicTranslationCache.cpp:1115: __translateKernel()
(0.006134) DynamicTranslationCache.cpp:1136:   translating subkernel _subkernel_sequence_0
(0.006165) DynamicTranslationCache.cpp:1149:   Converting from PTX IR to LLVM IR.
(0.007390) DynamicTranslationCache.cpp:1166: translated PTX to LLVM
(0.008023) DynamicTranslationCache.cpp:1136:   translating subkernel _subkernel_sequence_1
(0.008043) DynamicTranslationCache.cpp:1149:   Converting from PTX IR to LLVM IR.
(0.008339) DynamicTranslationCache.cpp:1166: translated PTX to LLVM
(0.008478) DynamicTranslationCache.cpp:1136:   translating subkernel _subkernel_sequence_2
(0.008498) DynamicTranslationCache.cpp:1149:   Converting from PTX IR to LLVM IR.
(0.009040) DynamicTranslationCache.cpp:1166: translated PTX to LLVM
(0.009244) DynamicTranslationCache.cpp:1215:  _translateKernel('sequence') complete for 3 subkernels
(0.009253) DynamicTranslationCache.cpp:148:    registered new kernel
(0.009268) DynamicTranslationCache.cpp:1226: _specializeTranslation()
(0.009276) DynamicTranslationCache.cpp:1236:   cloning and optimizing
(0.010715) DynamicTranslationCache.cpp:999:  Overriding optimization level
(0.012267) DynamicTranslationCache.cpp:1081: performed transformations
(0.012321) DynamicTranslationCache.cpp:1245:   JIT compiling
(0.014185) DynamicTranslationCache.cpp:1256:   verifying
(0.014364) DynamicTranslationCache.cpp:1271:   updating translation cache data structures
(0.014378) DynamicTranslationCache.cpp:1283:   _specializeTranslation() complete
(0.014389) DynamicTranslationCache.cpp:1226: _specializeTranslation()
(0.014396) DynamicTranslationCache.cpp:1236:   cloning and optimizing
(0.014478) DynamicTranslationCache.cpp:999:  Overriding optimization level
(0.015274) DynamicTranslationCache.cpp:1081: performed transformations
(0.015316) DynamicTranslationCache.cpp:1245:   JIT compiling
(0.016001) DynamicTranslationCache.cpp:1256:   verifying
(0.016135) DynamicTranslationCache.cpp:1271:   updating translation cache data structures
(0.016144) DynamicTranslationCache.cpp:1283:   _specializeTranslation() complete
(0.016199) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(testShr)
(0.016279) KernelPartitioningPass.cpp:66:   Partitioning kernel testShr
/*
* Ocelot Version : 2.1.1654
*/
.entry testShr(.param  .u64 testShr_param_0)
{
	.shared .align 4 .b8 __cuda_local_var_16224_30_non_const_storage[1024];

	.reg .s64 %r0;
	.reg .s64 %r1;
	.reg .s32 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .s64 %r7;
	.reg .s64 %r8;
	.reg .s64 %r9;
	.reg .s32 %r10;
	.reg .pred %p11;
	.reg .s32 %r12;
	.reg .s32 %r13;
	.reg .s64 %r14;
	.reg .s64 %r15;
	.reg .s32 %r16;
	.reg .s32 %r17;
	.reg .s32 %r18;
	.reg .s64 %r19;
	.reg .s64 %r20;
	$BB_4_0002:		/**/ 
		ld.param.u64 %r0, [testShr_param_0]; 
		cvta.to.global.u64 %r1, %r0; 
		mov.u32 %r2, %ntid.x; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %tid.x; 
		mad.lo.s32 %r5, %r2, %r3, %r4; 
		shl.b32 %r6, %r5, 1; 
		mul.wide.u32 %r7, %r4, 4; 
		mov.u64 %r8, __cuda_local_var_16224_30_non_const_storage; 
		add.s64 %r9, %r8, %r7; 
		st.shared.u32 [%r9], %r6; 
		bar.sync 0; 
		and.b32 %r10, %r5, 1; 
		setp.eq.s32 %p11, %r10, 0; 
		mov.u32 %r12, %tid.x; 
		xor.b32 %r13, %r12, 1; 
		mul.wide.u32 %r14, %r13, 4; 
		add.s64 %r15, %r8, %r14; 
		selp.b32 %r16, 13, 19, %p11; 
		ld.shared.u32 %r17, [%r15]; 
		mul.lo.s32 %r18, %r16, %r17; 
		mul.wide.s32 %r19, %r5, 4; 
		add.s64 %r20, %r1, %r19; 
		st.global.u32 [%r20], %r18; 
		ret; 
}
(0.016526) KernelPartitioningPass.cpp:209:    Spill region size is 160
(0.016535) KernelPartitioningPass.cpp:103:  KernelGraph::_partitionMinimumSize()
(0.016543) KernelPartitioningPass.cpp:267:  Subkernel::create(testShr)
(0.016550) KernelPartitioningPass.cpp:295:  Subkernel::_create(testShr)
(0.016574) KernelPartitioningPass.cpp:322:   adding block $BB_4_0002
(0.016586) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_4_0002 -> exit
(0.016593) KernelPartitioningPass.cpp:370:   ENTRY EDGE
(0.016602) KernelPartitioningPass.cpp:380:   creating internal edges
(0.016608) KernelPartitioningPass.cpp:388:    adding internal edge: entry -> $BB_4_0002
(0.016615) KernelPartitioningPass.cpp:393:   NO external in edges. Create a dummy edge from the entry node to the correct block
(0.016622) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.016628) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.016635) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.016641) KernelPartitioningPass.cpp:445:    barrier in block $BB_4_0002(instruction 11)
(0.016659) KernelPartitioningPass.cpp:487:    - partitioned into additional block: $BB_4_0002_bar
(0.016666) KernelPartitioningPass.cpp:500:    encountered 1 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_testShr_0(.param  .u64 testShr_param_0)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[160];
	.shared .align 4 .b8 __cuda_local_var_16224_30_non_const_storage[1024];

	.reg .s64 %r0;
	.reg .s64 %r1;
	.reg .s32 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .s64 %r7;
	.reg .s64 %r8;
	.reg .s64 %r9;
	.reg .s32 %r10;
	.reg .pred %p11;
	.reg .s32 %r12;
	.reg .s32 %r13;
	.reg .s64 %r14;
	.reg .s64 %r15;
	.reg .s32 %r16;
	.reg .s32 %r17;
	.reg .s32 %r18;
	.reg .s64 %r19;
	.reg .s64 %r20;
	$BB_4_0002:		/**/ 
		ld.param.u64 %r0, [testShr_param_0]; 
		cvta.to.global.u64 %r1, %r0; 
		mov.u32 %r2, %ntid.x; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %tid.x; 
		mad.lo.s32 %r5, %r2, %r3, %r4; 
		shl.b32 %r6, %r5, 1; 
		mul.wide.u32 %r7, %r4, 4; 
		mov.u64 %r8, __cuda_local_var_16224_30_non_const_storage; 
		add.s64 %r9, %r8, %r7; 
		st.shared.u32 [%r9], %r6; 
		bar.sync 0; 
	$BB_4_0002_bar_barrier_entry:
	$BB_4_0002_bar:
		and.b32 %r10, %r5, 1; 
		setp.eq.s32 %p11, %r10, 0; 
		mov.u32 %r12, %tid.x; 
		xor.b32 %r13, %r12, 1; 
		mul.wide.u32 %r14, %r13, 4; 
		add.s64 %r15, %r8, %r14; 
		selp.b32 %r16, 13, 19, %p11; 
		ld.shared.u32 %r17, [%r15]; 
		mul.lo.s32 %r18, %r16, %r17; 
		mul.wide.s32 %r19, %r5, 4; 
		add.s64 %r20, %r1, %r19; 
		st.global.u32 [%r20], %r18; 
		exit; 
	$BB_4_0002_external_out_handler_to_:
}
(0.016880) KernelPartitioningPass.cpp:125:  Linking external edges
(0.016887) KernelPartitioningPass.cpp:159:   failed to link external edge: $BB_4_0002 -> exit
(0.016954) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.016972) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.016979) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.016986) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_4_0002 -> $BB_4_0002_external_out_handler_to_ (0 live values
(0.016996) KernelPartitioningPass.cpp:837:    creating exit in block $BB_4_0002_external_out_handler_to_
(0.017011) KernelPartitioningPass.cpp:734:  Adding $BB_4_0002 to frontierExitBlocks
(0.017019) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.017030) KernelPartitioningPass.cpp:757:   block $BB_4_0002 (1 external edges) terminator: bar.sync 0
(0.017038) KernelPartitioningPass.cpp:774:   I forget what I wanted here. there are this terminate called after throwing an instance of 'hydrazine::Exception'
  what():  LLVM Parser failed: _subkernel_testShr_0: <string>:63:1: error: expected instruction opcode
$BB_4_0002_bar_barrier_entry:
^

many edges: 1
(0.017053) KernelPartitioningPass.cpp:775:      block: $BB_4_0002
(0.017060) KernelPartitioningPass.cpp:837:    creating exit in block $BB_4_0002
(0.017075) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.017086) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.017092) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_testShr_0(.param  .u64 testShr_param_0)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[160];
	.shared .align 4 .b8 __cuda_local_var_16224_30_non_const_storage[1024];

	.reg .u32 %r24;
	.reg .u32 %r23;
	.reg .s64 %r0;
	.reg .s64 %r1;
	.reg .s32 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .s64 %r7;
	.reg .s64 %r8;
	.reg .s64 %r9;
	.reg .u32 %r21;
	.reg .u32 %r22;
	.reg .s32 %r10;
	.reg .pred %p11;
	.reg .s32 %r12;
	.reg .s32 %r13;
	.reg .s64 %r14;
	.reg .s64 %r15;
	.reg .s32 %r16;
	.reg .s32 %r17;
	.reg .s32 %r18;
	.reg .s64 %r19;
	.reg .s64 %r20;
	$BB_4_0002:		/**/ 
		exit; 
		st.local.u32 [%r24], 0; 
		mov.s32 %r24, _Zocelot_resume_point; 
		st.local.u32 [%r23], 6; 
		mov.s32 %r23, _Zocelot_resume_status; 
		ld.param.u64 %r0, [testShr_param_0]; 
		cvta.to.global.u64 %r1, %r0; 
		mov.u32 %r2, %ntid.x; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %tid.x; 
		mad.lo.s32 %r5, %r2, %r3, %r4; 
		shl.b32 %r6, %r5, 1; 
		mul.wide.u32 %r7, %r4, 4; 
		mov.u64 %r8, __cuda_local_var_16224_30_non_const_storage; 
		add.s64 %r9, %r8, %r7; 
		st.shared.u32 [%r9], %r6; 
	$BB_4_0002_bar_barrier_entry:
	$BB_4_0002_bar:
		and.b32 %r10, %r5, 1; 
		setp.eq.s32 %p11, %r10, 0; 
		mov.u32 %r12, %tid.x; 
		xor.b32 %r13, %r12, 1; 
		mul.wide.u32 %r14, %r13, 4; 
		add.s64 %r15, %r8, %r14; 
		selp.b32 %r16, 13, 19, %p11; 
		ld.shared.u32 %r17, [%r15]; 
		mul.lo.s32 %r18, %r16, %r17; 
		mul.wide.s32 %r19, %r5, 4; 
		add.s64 %r20, %r1, %r19; 
		st.global.u32 [%r20], %r18; 
		exit; 
	$BB_4_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r21, _Zocelot_resume_status; 
		st.local.u32 [%r21], 6; 
		mov.s32 %r22, _Zocelot_resume_point; 
		st.local.u32 [%r22], 0; 
		exit; 
}
(0.017375) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(ocelot/cuda/test/kernels/sequence.cu)
(0.017384) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(testShr)
(0.017394) DynamicTranslationCache.cpp:1115: __translateKernel()
(0.017401) DynamicTranslationCache.cpp:1136:   translating subkernel _subkernel_testShr_0
(0.017427) DynamicTranslationCache.cpp:1149:   Converting from PTX IR to LLVM IR.
(0.018577) DynamicTranslationCache.cpp:1166: translated PTX to LLVM

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCalVectorScale 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestIndirectFunctionCall
INFO     Test completed in 0.0577070713043 seconds
INFO      It produced the following output:
(0.000514) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
(0.003159) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(kernelEntry)
(0.003316) KernelPartitioningPass.cpp:66:   Partitioning kernel kernelEntry
/*
* Ocelot Version : 2.1.1654
*/
.entry kernelEntry(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{

	.param  .b32 param0;
	.param  .b32 retval0;
	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .s32 %r7;
	.reg .s32 %r8;
	.reg .pred %p9;
	.reg .pred %p10;
	.reg .pred %p11;
	.reg .s64 %r12;
	.reg .s32 %r13;
	.reg .s64 %r14;
	.reg .s64 %r15;
	
	prototype_0: .callprototype (.param .b32 _) prototype_0 (.param .b32 _);
	
	$BB_5_0002:		/**/ 
		ld.param.u64 %r0, [kernelEntry_param_0]; 
		ld.param.u32 %r1, [kernelEntry_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %ntid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		add.s32 %r7, %r6, %r1; 
		and.b32 %r8, %r7, 3; 
		setp.eq.s32 %p9, %r8, 0; 
		@%p9 bra $BB_5_0008; 
	$BB_5_0003:		/**/ 
		setp.eq.s32 %p10, %r8, 1; 
		@%p10 bra $BB_5_0007; 
	$BB_5_0004:		/**/ 
		setp.eq.s32 %p11, %r8, 2; 
		@%p11 bra $BB_5_0006; 
	$BB_5_0005:		/**/ 
		mov.u64 %r12, funcPentuple; 
		bra.uni $BB_5_0009; 
	$BB_5_0008:		/*BB4_6*/ 
		mov.u64 %r12, funcDouble; 
	$BB_5_0009:		/*BB4_7*/ 
		st.param.b32 [param0], %r6; 
		call (retval0), %r12, (param0), prototype_0; 
		ld.param.b32 %r13, [retval0]; 
		mul.wide.s32 %r14, %r6, 4; 
		add.s64 %r15, %r2, %r14; 
		st.global.u32 [%r15], %r13; 
		ret; 
	$BB_5_0006:		/*BB4_4*/ 
		mov.u64 %r12, funcQuadruple; 
		bra.uni $BB_5_0009; 
	$BB_5_0007:		/*BB4_5*/ 
		mov.u64 %r12, funcTriple; 
		bra.uni $BB_5_0009; 
}
(0.003561) KernelPartitioningPass.cpp:209:    Spill region size is 120
(0.003572) KernelPartitioningPass.cpp:103:  KernelGraph::_partitionMinimumSize()
(0.003583) KernelPartitioningPass.cpp:267:  Subkernel::create(kernelEntry)
(0.003592) KernelPartitioningPass.cpp:295:  Subkernel::_create(kernelEntry)
(0.003611) KernelPartitioningPass.cpp:322:   adding block $BB_5_0002
(0.003625) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_5_0002 -> $BB_5_0003
(0.003636) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_5_0002 -> $BB_5_0008
(0.003643) KernelPartitioningPass.cpp:370:   ENTRY EDGE
(0.003653) KernelPartitioningPass.cpp:380:   creating internal edges
(0.003659) KernelPartitioningPass.cpp:388:    adding internal edge: entry -> $BB_5_0002
(0.003667) KernelPartitioningPass.cpp:393:   NO external in edges. Create a dummy edge from the entry node to the correct block
(0.003673) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.003679) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.003689) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.003695) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_kernelEntry_0(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .s32 %r7;
	.reg .s32 %r8;
	.reg .pred %p9;
	$BB_5_0002:		/**/ 
		ld.param.u64 %r0, [kernelEntry_param_0]; 
		ld.param.u32 %r1, [kernelEntry_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %ntid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		add.s32 %r7, %r6, %r1; 
		and.b32 %r8, %r7, 3; 
		setp.eq.s32 %p9, %r8, 0; 
		@%p9 bra $BB_5_0008; 
	$BB_5_0002_external_out_handler_to_5_0003:
	$BB_5_0002_external_out_handler_to_5_0008:
}
(0.003823) KernelPartitioningPass.cpp:267:  Subkernel::create(kernelEntry)
(0.003830) KernelPartitioningPass.cpp:295:  Subkernel::_create(kernelEntry)
(0.003844) KernelPartitioningPass.cpp:322:   adding block $BB_5_0003
(0.003854) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_5_0003 -> $BB_5_0004
(0.003877) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_5_0003 -> $BB_5_0007
(0.003887) KernelPartitioningPass.cpp:367:    adding EXTERNAL IN-Edge $BB_5_0002 -> $BB_5_0003
(0.003895) KernelPartitioningPass.cpp:380:   creating internal edges
(0.003901) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.003908) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.003916) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.003922) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_kernelEntry_1(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .pred %p10;
	.reg .s32 %r8;
	$BB_5_0003_external_in_handler__from_5_0002:
	$BB_5_0003:		/**/ 
		setp.eq.s32 %p10, %r8, 1; 
		@%p10 bra $BB_5_0007; 
	$BB_5_0003_external_out_handler_to_5_0004:
	$BB_5_0003_external_out_handler_to_5_0007:
}
(0.003980) KernelPartitioningPass.cpp:267:  Subkernel::create(kernelEntry)
(0.003988) KernelPartitioningPass.cpp:295:  Subkernel::_create(kernelEntry)
(0.004001) KernelPartitioningPass.cpp:322:   adding block $BB_5_0004
(0.004011) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_5_0004 -> $BB_5_0005
(0.004019) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_5_0004 -> $BB_5_0006
(0.004028) KernelPartitioningPass.cpp:367:    adding EXTERNAL IN-Edge $BB_5_0003 -> $BB_5_0004
(0.004035) KernelPartitioningPass.cpp:380:   creating internal edges
(0.004042) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.004049) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.004058) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.004064) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_kernelEntry_2(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .pred %p11;
	.reg .s32 %r8;
	$BB_5_0004_external_in_handler__from_5_0003:
	$BB_5_0004:		/**/ 
		setp.eq.s32 %p11, %r8, 2; 
		@%p11 bra $BB_5_0006; 
	$BB_5_0004_external_out_handler_to_5_0005:
	$BB_5_0004_external_out_handler_to_5_0006:
}
(0.004122) KernelPartitioningPass.cpp:267:  Subkernel::create(kernelEntry)
(0.004130) KernelPartitioningPass.cpp:295:  Subkernel::_create(kernelEntry)
(0.004143) KernelPartitioningPass.cpp:322:   adding block $BB_5_0005
(0.004152) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_5_0005 -> $BB_5_0009
(0.004160) KernelPartitioningPass.cpp:367:    adding EXTERNAL IN-Edge $BB_5_0004 -> $BB_5_0005
(0.004168) KernelPartitioningPass.cpp:380:   creating internal edges
(0.004174) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.004180) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.004188) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.004194) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_kernelEntry_3(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	$BB_5_0005_external_in_handler__from_5_0004:
	$BB_5_0005:		/**/ 
		mov.u64 %r12, funcPentuple; 
		bra.uni $BB_5_0009; 
	$BB_5_0005_external_out_handler_to_5_0009:
}
(0.004243) KernelPartitioningPass.cpp:267:  Subkernel::create(kernelEntry)
(0.004250) KernelPartitioningPass.cpp:295:  Subkernel::_create(kernelEntry)
(0.004264) KernelPartitioningPass.cpp:322:   adding block $BB_5_0006
(0.004273) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_5_0006 -> $BB_5_0009
(0.004291) KernelPartitioningPass.cpp:367:    adding EXTERNAL IN-Edge $BB_5_0004 -> $BB_5_0006
(0.004299) KernelPartitioningPass.cpp:380:   creating internal edges
(0.004305) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.004312) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.004320) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.004326) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_kernelEntry_4(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	$BB_5_0006_external_in_handler__from_5_0004:
	$BB_5_0006:		/*BB4_4*/ 
		mov.u64 %r12, funcQuadruple; 
		bra.uni $BB_5_0009; 
	$BB_5_0006_external_out_handler_to_5_0009:
}
(0.004377) KernelPartitioningPass.cpp:267:  Subkernel::create(kernelEntry)
(0.004384) KernelPartitioningPass.cpp:295:  Subkernel::_create(kernelEntry)
(0.004398) KernelPartitioningPass.cpp:322:   adding block $BB_5_0007
(0.004407) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_5_0007 -> $BB_5_0009
(0.004416) KernelPartitioningPass.cpp:367:    adding EXTERNAL IN-Edge $BB_5_0003 -> $BB_5_0007
(0.004423) KernelPartitioningPass.cpp:380:   creating internal edges
(0.004429) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.004436) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.004444) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.004451) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_kernelEntry_5(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	$BB_5_0007_external_in_handler__from_5_0003:
	$BB_5_0007:		/*BB4_5*/ 
		mov.u64 %r12, funcTriple; 
		bra.uni $BB_5_0009; 
	$BB_5_0007_external_out_handler_to_5_0009:
}
(0.004500) KernelPartitioningPass.cpp:267:  Subkernel::create(kernelEntry)
(0.004508) KernelPartitioningPass.cpp:295:  Subkernel::_create(kernelEntry)
(0.004521) KernelPartitioningPass.cpp:322:   adding block $BB_5_0008
(0.004530) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_5_0008 -> $BB_5_0009
(0.004539) KernelPartitioningPass.cpp:367:    adding EXTERNAL IN-Edge $BB_5_0002 -> $BB_5_0008
(0.004546) KernelPartitioningPass.cpp:380:   creating internal edges
(0.004552) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.004559) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.004567) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.004573) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_kernelEntry_6(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	$BB_5_0008_external_in_handler__from_5_0002:
	$BB_5_0008:		/*BB4_6*/ 
		mov.u64 %r12, funcDouble; 
	$BB_5_0008_external_out_handler_to_5_0009:
}
(0.004621) KernelPartitioningPass.cpp:267:  Subkernel::create(kernelEntry)
(0.004628) KernelPartitioningPass.cpp:295:  Subkernel::_create(kernelEntry)
(0.004644) KernelPartitioningPass.cpp:322:   adding block $BB_5_0009
(0.004654) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_5_0009 -> exit
(0.004663) KernelPartitioningPass.cpp:367:    adding EXTERNAL IN-Edge $BB_5_0008 -> $BB_5_0009
(0.004672) KernelPartitioningPass.cpp:367:    adding EXTERNAL IN-Edge $BB_5_0005 -> $BB_5_0009
(0.004680) KernelPartitioningPass.cpp:367:    adding EXTERNAL IN-Edge $BB_5_0006 -> $BB_5_0009
(0.004690) KernelPartitioningPass.cpp:367:    adding EXTERNAL IN-Edge $BB_5_0007 -> $BB_5_0009
(0.004698) KernelPartitioningPass.cpp:380:   creating internal edges
(0.004713) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.004723) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.004731) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.004737) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_kernelEntry_7(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s32 %r6;
	.reg .s64 %r12;
	.reg .s32 %r13;
	.reg .s64 %r14;
	.reg .s64 %r15;
	.reg .s64 %r2;
	
	prototype_0: .callprototype (.param .b32 _) prototype_0 (.param .b32 _);
	
	$BB_5_0009_external_in_handler__from_5_0007:
	$BB_5_0009:		/*BB4_7*/ 
		st.param.b32 [param0], %r6; 
		call (retval0), %r12, (param0), prototype_0; 
		ld.param.b32 %r13, [retval0]; 
		mul.wide.s32 %r14, %r6, 4; 
		add.s64 %r15, %r2, %r14; 
		st.global.u32 [%r15], %r13; 
		exit; 
	$BB_5_0009_external_out_handler_to_:
	$BB_5_0009_external_in_handler__from_5_0006:
	$BB_5_0009_external_in_handler__from_5_0005:
	$BB_5_0009_external_in_handler__from_5_0008:
}
(0.004837) KernelPartitioningPass.cpp:125:  Linking external edges
(0.004844) KernelPartitioningPass.cpp:152:    linking $BB_5_0002_external_out_handler_to_5_0003 to $BB_5_0003_external_in_handler__from_5_0002 (entry 65536)
(0.004851) KernelPartitioningPass.cpp:152:    linking $BB_5_0002_external_out_handler_to_5_0008 to $BB_5_0008_external_in_handler__from_5_0002 (entry 393216)
(0.004858) KernelPartitioningPass.cpp:152:    linking $BB_5_0003_external_out_handler_to_5_0004 to $BB_5_0004_external_in_handler__from_5_0003 (entry 131072)
(0.004865) KernelPartitioningPass.cpp:152:    linking $BB_5_0003_external_out_handler_to_5_0007 to $BB_5_0007_external_in_handler__from_5_0003 (entry 327680)
(0.004871) KernelPartitioningPass.cpp:152:    linking $BB_5_0004_external_out_handler_to_5_0005 to $BB_5_0005_external_in_handler__from_5_0004 (entry 196608)
(0.004878) KernelPartitioningPass.cpp:152:    linking $BB_5_0004_external_out_handler_to_5_0006 to $BB_5_0006_external_in_handler__from_5_0004 (entry 262144)
(0.004884) KernelPartitioningPass.cpp:152:    linking $BB_5_0005_external_out_handler_to_5_0009 to $BB_5_0009_external_in_handler__from_5_0005 (entry 458753)
(0.004891) KernelPartitioningPass.cpp:152:    linking $BB_5_0006_external_out_handler_to_5_0009 to $BB_5_0009_external_in_handler__from_5_0006 (entry 458754)
(0.004898) KernelPartitioningPass.cpp:152:    linking $BB_5_0007_external_out_handler_to_5_0009 to $BB_5_0009_external_in_handler__from_5_0007 (entry 458755)
(0.004905) KernelPartitioningPass.cpp:152:    linking $BB_5_0008_external_out_handler_to_5_0009 to $BB_5_0009_external_in_handler__from_5_0008 (entry 458752)
(0.004911) KernelPartitioningPass.cpp:159:   failed to link external edge: $BB_5_0009 -> exit
(0.004961) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.004978) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.004987) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.004998) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_5_0002 -> $BB_5_0002_external_out_handler_to_5_0003 (3 live values
(0.005011) KernelPartitioningPass.cpp:712:        alive-out: 2 [type: s64]
(0.005028) KernelPartitioningPass.cpp:712:        alive-out: 6 [type: s32]
(0.005038) KernelPartitioningPass.cpp:712:        alive-out: 8 [type: s32]
(0.005048) KernelPartitioningPass.cpp:837:    creating exit in block $BB_5_0002_external_out_handler_to_5_0003
(0.005064) KernelPartitioningPass.cpp:734:  Adding $BB_5_0002 to frontierExitBlocks
(0.005076) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_5_0002 -> $BB_5_0002_external_out_handler_to_5_0008 (3 live values
(0.005085) KernelPartitioningPass.cpp:712:        alive-out: 2 [type: s64]
(0.005096) KernelPartitioningPass.cpp:712:        alive-out: 6 [type: s32]
(0.005106) KernelPartitioningPass.cpp:712:        alive-out: 8 [type: s32]
(0.005125) KernelPartitioningPass.cpp:837:    creating exit in block $BB_5_0002_external_out_handler_to_5_0008
(0.005143) KernelPartitioningPass.cpp:734:  Adding $BB_5_0002 to frontierExitBlocks
(0.005152) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.005165) KernelPartitioningPass.cpp:757:   block $BB_5_0002 (2 external edges) terminator: @%p9 bra $BB_5_0008
(0.005172) KernelPartitioningPass.cpp:765:   1 external edge, modifying branch target to point to handler
(0.005179) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.005191) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.005199) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_kernelEntry_0(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .s32 %r7;
	.reg .s32 %r8;
	.reg .pred %p9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	.reg .u32 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r15;
	$BB_5_0002:		/**/ 
		ld.param.u64 %r0, [kernelEntry_param_0]; 
		ld.param.u32 %r1, [kernelEntry_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %ntid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		add.s32 %r7, %r6, %r1; 
		and.b32 %r8, %r7, 3; 
		setp.eq.s32 %p9, %r8, 0; 
		@%p9 bra $BB_5_0002_external_out_handler_to_5_0008; 
	$BB_5_0002_external_out_handler_to_5_0003:		// 3 live-out values 
		mov.s32 %r10, _Zocelot_spill_area; 
		st.local.s64 [%r10 + 16], %r2; 
		st.local.s32 [%r10 + 48], %r6; 
		st.local.s32 [%r10 + 64], %r8; 
		mov.s32 %r11, _Zocelot_resume_status; 
		st.local.u32 [%r11], 8; 
		mov.s32 %r12, _Zocelot_resume_point; 
		st.local.u32 [%r12], 65536; 
		exit; 
	$BB_5_0002_external_out_handler_to_5_0008:		// 3 live-out values 
		mov.s32 %r13, _Zocelot_spill_area; 
		st.local.s64 [%r13 + 16], %r2; 
		st.local.s32 [%r13 + 48], %r6; 
		st.local.s32 [%r13 + 64], %r8; 
		mov.s32 %r14, _Zocelot_resume_status; 
		st.local.u32 [%r14], 8; 
		mov.s32 %r15, _Zocelot_resume_point; 
		st.local.u32 [%r15], 393216; 
		exit; 
}
(0.005443) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.005456) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.005463) KernelPartitioningPass.cpp:641:      IN-edge: $BB_5_0003_external_in_handler__from_5_0002 -> $BB_5_0003 (3 live values
(0.005472) KernelPartitioningPass.cpp:655:        alive-in: 8 [type: s32]
(0.005485) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.005493) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_5_0003 -> $BB_5_0003_external_out_handler_to_5_0004 (3 live values
(0.005502) KernelPartitioningPass.cpp:712:        alive-out: 8 [type: s32]
(0.005511) KernelPartitioningPass.cpp:837:    creating exit in block $BB_5_0003_external_out_handler_to_5_0004
(0.005526) KernelPartitioningPass.cpp:734:  Adding $BB_5_0003 to frontierExitBlocks
(0.005534) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_5_0003 -> $BB_5_0003_external_out_handler_to_5_0007 (3 live values
(0.005543) KernelPartitioningPass.cpp:712:        alive-out: 8 [type: s32]
(0.005553) KernelPartitioningPass.cpp:837:    creating exit in block $BB_5_0003_external_out_handler_to_5_0007
(0.005570) KernelPartitioningPass.cpp:734:  Adding $BB_5_0003 to frontierExitBlocks
(0.005578) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.005589) KernelPartitioningPass.cpp:757:   block $BB_5_0003 (2 external edges) terminator: @%p10 bra $BB_5_0007
(0.005597) KernelPartitioningPass.cpp:765:   1 external edge, modifying branch target to point to handler
(0.005603) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.005613) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.005619) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_kernelEntry_1(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .pred %p10;
	.reg .s32 %r8;
	.reg .u32 %r11;
	.reg .u32 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	$BB_5_0003_external_in_handler__from_5_0002:		// 3 live-in values 
		ld.local.s32 %r8, [%r0 + 64]; 
		bra $BB_5_0003; 
	$BB_5_0003:		/**/ 
		setp.eq.s32 %p10, %r8, 1; 
		@%p10 bra $BB_5_0003_external_out_handler_to_5_0007; 
	$BB_5_0003_external_out_handler_to_5_0004:		// 3 live-out values 
		st.local.s32 [%r0 + 64], %r8; 
		mov.s32 %r11, _Zocelot_resume_status; 
		st.local.u32 [%r11], 8; 
		mov.s32 %r12, _Zocelot_resume_point; 
		st.local.u32 [%r12], 131072; 
		exit; 
	$BB_5_0003_external_out_handler_to_5_0007:		// 3 live-out values 
		st.local.s32 [%r0 + 64], %r8; 
		mov.s32 %r13, _Zocelot_resume_status; 
		st.local.u32 [%r13], 8; 
		mov.s32 %r14, _Zocelot_resume_point; 
		st.local.u32 [%r14], 327680; 
		exit; 
}
(0.005780) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.005792) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.005800) KernelPartitioningPass.cpp:641:      IN-edge: $BB_5_0004_external_in_handler__from_5_0003 -> $BB_5_0004 (3 live values
(0.005809) KernelPartitioningPass.cpp:655:        alive-in: 8 [type: s32]
(0.005821) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.005829) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_5_0004 -> $BB_5_0004_external_out_handler_to_5_0005 (2 live values
(0.005837) KernelPartitioningPass.cpp:837:    creating exit in block $BB_5_0004_external_out_handler_to_5_0005
(0.005854) KernelPartitioningPass.cpp:734:  Adding $BB_5_0004 to frontierExitBlocks
(0.005863) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_5_0004 -> $BB_5_0004_external_out_handler_to_5_0006 (2 live values
(0.005872) KernelPartitioningPass.cpp:837:    creating exit in block $BB_5_0004_external_out_handler_to_5_0006
(0.005885) KernelPartitioningPass.cpp:734:  Adding $BB_5_0004 to frontierExitBlocks
(0.005893) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.005908) KernelPartitioningPass.cpp:757:   block $BB_5_0004 (2 external edges) terminator: @%p11 bra $BB_5_0006
(0.005915) KernelPartitioningPass.cpp:765:   1 external edge, modifying branch target to point to handler
(0.005922) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.005931) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.005937) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_kernelEntry_2(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .pred %p11;
	.reg .s32 %r8;
	.reg .u32 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r15;
	$BB_5_0004_external_in_handler__from_5_0003:		// 3 live-in values 
		ld.local.s32 %r8, [%r0 + 64]; 
		bra $BB_5_0004; 
	$BB_5_0004:		/**/ 
		setp.eq.s32 %p11, %r8, 2; 
		@%p11 bra $BB_5_0004_external_out_handler_to_5_0006; 
	$BB_5_0004_external_out_handler_to_5_0005:		// 2 live-out values 
		mov.s32 %r12, _Zocelot_resume_status; 
		st.local.u32 [%r12], 8; 
		mov.s32 %r13, _Zocelot_resume_point; 
		st.local.u32 [%r13], 196608; 
		exit; 
	$BB_5_0004_external_out_handler_to_5_0006:		// 2 live-out values 
		mov.s32 %r14, _Zocelot_resume_status; 
		st.local.u32 [%r14], 8; 
		mov.s32 %r15, _Zocelot_resume_point; 
		st.local.u32 [%r15], 262144; 
		exit; 
}
(0.006074) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.006086) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.006094) KernelPartitioningPass.cpp:641:      IN-edge: $BB_5_0005_external_in_handler__from_5_0004 -> $BB_5_0005 (2 live values
(0.006105) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.006113) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_5_0005 -> $BB_5_0005_external_out_handler_to_5_0009 (3 live values
(0.006130) KernelPartitioningPass.cpp:712:        alive-out: 12 [type: s64]
(0.006142) KernelPartitioningPass.cpp:837:    creating exit in block $BB_5_0005_external_out_handler_to_5_0009
(0.006157) KernelPartitioningPass.cpp:734:  Adding $BB_5_0005 to frontierExitBlocks
(0.006166) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.006175) KernelPartitioningPass.cpp:757:   block $BB_5_0005 (1 external edges) terminator: bra.uni $BB_5_0009
(0.006182) KernelPartitioningPass.cpp:765:   1 external edge, modifying branch target to point to handler
(0.006189) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.006198) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.006205) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_kernelEntry_3(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r15;
	$BB_5_0005_external_in_handler__from_5_0004:		// 2 live-in values 
		bra $BB_5_0005; 
	$BB_5_0005:		/**/ 
		mov.u64 %r12, funcPentuple; 
		bra.uni $BB_5_0005_external_out_handler_to_5_0009; 
	$BB_5_0005_external_out_handler_to_5_0009:		// 3 live-out values 
		mov.s32 %r13, _Zocelot_spill_area; 
		st.local.s64 [%r13 + 96], %r12; 
		mov.s32 %r14, _Zocelot_resume_status; 
		st.local.u32 [%r14], 8; 
		mov.s32 %r15, _Zocelot_resume_point; 
		st.local.u32 [%r15], 458753; 
		exit; 
}
(0.006312) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.006323) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.006330) KernelPartitioningPass.cpp:641:      IN-edge: $BB_5_0006_external_in_handler__from_5_0004 -> $BB_5_0006 (2 live values
(0.006341) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.006349) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_5_0006 -> $BB_5_0006_external_out_handler_to_5_0009 (3 live values
(0.006358) KernelPartitioningPass.cpp:712:        alive-out: 12 [type: s64]
(0.006372) KernelPartitioningPass.cpp:837:    creating exit in block $BB_5_0006_external_out_handler_to_5_0009
(0.006387) KernelPartitioningPass.cpp:734:  Adding $BB_5_0006 to frontierExitBlocks
(0.006395) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.006404) KernelPartitioningPass.cpp:757:   block $BB_5_0006 (1 external edges) terminator: bra.uni $BB_5_0009
(0.006411) KernelPartitioningPass.cpp:765:   1 external edge, modifying branch target to point to handler
(0.006418) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.006427) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.006433) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_kernelEntry_4(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r15;
	$BB_5_0006_external_in_handler__from_5_0004:		// 2 live-in values 
		bra $BB_5_0006; 
	$BB_5_0006:		/*BB4_4*/ 
		mov.u64 %r12, funcQuadruple; 
		bra.uni $BB_5_0006_external_out_handler_to_5_0009; 
	$BB_5_0006_external_out_handler_to_5_0009:		// 3 live-out values 
		mov.s32 %r13, _Zocelot_spill_area; 
		st.local.s64 [%r13 + 96], %r12; 
		mov.s32 %r14, _Zocelot_resume_status; 
		st.local.u32 [%r14], 8; 
		mov.s32 %r15, _Zocelot_resume_point; 
		st.local.u32 [%r15], 458754; 
		exit; 
}
(0.006539) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.006551) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.006558) KernelPartitioningPass.cpp:641:      IN-edge: $BB_5_0007_external_in_handler__from_5_0003 -> $BB_5_0007 (3 live values
(0.006569) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.006577) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_5_0007 -> $BB_5_0007_external_out_handler_to_5_0009 (3 live values
(0.006593) KernelPartitioningPass.cpp:712:        alive-out: 12 [type: s64]
(0.006607) KernelPartitioningPass.cpp:837:    creating exit in block $BB_5_0007_external_out_handler_to_5_0009
(0.006623) KernelPartitioningPass.cpp:734:  Adding $BB_5_0007 to frontierExitBlocks
(0.006631) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.006639) KernelPartitioningPass.cpp:757:   block $BB_5_0007 (1 external edges) terminator: bra.uni $BB_5_0009
(0.006646) KernelPartitioningPass.cpp:765:   1 external edge, modifying branch target to point to handler
(0.006653) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.006662) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.006668) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_kernelEntry_5(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r15;
	$BB_5_0007_external_in_handler__from_5_0003:		// 3 live-in values 
		bra $BB_5_0007; 
	$BB_5_0007:		/*BB4_5*/ 
		mov.u64 %r12, funcTriple; 
		bra.uni $BB_5_0007_external_out_handler_to_5_0009; 
	$BB_5_0007_external_out_handler_to_5_0009:		// 3 live-out values 
		mov.s32 %r13, _Zocelot_spill_area; 
		st.local.s64 [%r13 + 96], %r12; 
		mov.s32 %r14, _Zocelot_resume_status; 
		st.local.u32 [%r14], 8; 
		mov.s32 %r15, _Zocelot_resume_point; 
		st.local.u32 [%r15], 458755; 
		exit; 
}
(0.006774) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.006786) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.006793) KernelPartitioningPass.cpp:641:      IN-edge: $BB_5_0008_external_in_handler__from_5_0002 -> $BB_5_0008 (3 live values
(0.006804) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.006812) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_5_0008 -> $BB_5_0008_external_out_handler_to_5_0009 (3 live values
(0.006820) KernelPartitioningPass.cpp:712:        alive-out: 12 [type: s64]
(0.006834) KernelPartitioningPass.cpp:837:    creating exit in block $BB_5_0008_external_out_handler_to_5_0009
(0.006849) KernelPartitioningPass.cpp:734:  Adding $BB_5_0008 to frontierExitBlocks
(0.006857) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.006868) KernelPartitioningPass.cpp:757:   block $BB_5_0008 (1 external edges) terminator: mov.u64 %r12, funcDouble
(0.006879) KernelPartitioningPass.cpp:792:   fall-through non-control-flow instruction to external edge: mov.u64 %r12, funcDouble
(0.006886) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.006894) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.006901) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_kernelEntry_6(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r15;
	$BB_5_0008_external_in_handler__from_5_0002:		// 3 live-in values 
		bra $BB_5_0008; 
	$BB_5_0008:		/*BB4_6*/ 
		mov.u64 %r12, funcDouble; 
	$BB_5_0008_external_out_handler_to_5_0009:		// 3 live-out values 
		mov.s32 %r13, _Zocelot_spill_area; 
		st.local.s64 [%r13 + 96], %r12; 
		mov.s32 %r14, _Zocelot_resume_status; 
		st.local.u32 [%r14], 8; 
		mov.s32 %r15, _Zocelot_resume_point; 
		st.local.u32 [%r15], 458752; 
		exit; 
}
(0.007030) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.007045) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.007052) KernelPartitioningPass.cpp:641:      IN-edge: $BB_5_0009_external_in_handler__from_5_0008 -> $BB_5_0009 (3 live values
(0.007061) KernelPartitioningPass.cpp:655:        alive-in: 12 [type: s64]
(0.007072) KernelPartitioningPass.cpp:655:        alive-in: 2 [type: s64]
(0.007094) KernelPartitioningPass.cpp:655:        alive-in: 6 [type: s32]
(0.007107) KernelPartitioningPass.cpp:641:      IN-edge: $BB_5_0009_external_in_handler__from_5_0005 -> $BB_5_0009 (3 live values
(0.007116) KernelPartitioningPass.cpp:655:        alive-in: 12 [type: s64]
(0.007127) KernelPartitioningPass.cpp:655:        alive-in: 2 [type: s64]
(0.007137) KernelPartitioningPass.cpp:655:        alive-in: 6 [type: s32]
(0.007151) KernelPartitioningPass.cpp:641:      IN-edge: $BB_5_0009_external_in_handler__from_5_0006 -> $BB_5_0009 (3 live values
(0.007161) KernelPartitioningPass.cpp:655:        alive-in: 12 [type: s64]
(0.007171) KernelPartitioningPass.cpp:655:        alive-in: 2 [type: s64]
(0.007181) KernelPartitioningPass.cpp:655:        alive-in: 6 [type: s32]
(0.007195) KernelPartitioningPass.cpp:641:      IN-edge: $BB_5_0009_external_in_handler__from_5_0007 -> $BB_5_0009 (3 live values
(0.007204) KernelPartitioningPass.cpp:655:        alive-in: 12 [type: s64]
(0.007215) KernelPartitioningPass.cpp:655:        alive-in: 2 [type: s64]
(0.007226) KernelPartitioningPass.cpp:655:        alive-in: 6 [type: s32]
(0.007237) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.007244) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_5_0009 -> $BB_5_0009_external_out_handler_to_ (0 live values
(0.007252) KernelPartitioningPass.cpp:837:    creating exit in block $BB_5_0009_external_out_handler_to_
(0.007271) KernelPartitioningPass.cpp:734:  Adding $BB_5_0009 to frontierExitBlocks
(0.007279) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.007287) KernelPartitioningPass.cpp:757:   block $BB_5_0009 (1 external edges) terminator: exit
(0.007294) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.007304) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.007310) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_kernelEntry_7(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s32 %r6;
	.reg .s64 %r12;
	.reg .s32 %r13;
	.reg .s64 %r14;
	.reg .s64 %r15;
	.reg .s64 %r2;
	.reg .u32 %r20;
	.reg .u32 %r21;
	.reg .u32 %r16;
	.reg .u32 %r17;
	.reg .u32 %r18;
	.reg .u32 %r19;
	
	prototype_0: .callprototype (.param .b32 _) prototype_0 (.param .b32 _);
	
	$BB_5_0009_external_in_handler__from_5_0007:		// 3 live-in values 
		mov.s32 %r19, _Zocelot_spill_area; 
		ld.local.s64 %r12, [%r19 + 96]; 
		ld.local.s64 %r2, [%r19 + 16]; 
		ld.local.s32 %r6, [%r19 + 48]; 
		bra $BB_5_0009; 
	$BB_5_0009:		/*BB4_7*/ 
		st.param.b32 [param0], %r6; 
		call (retval0), %r12, (param0), prototype_0; 
		ld.param.b32 %r13, [retval0]; 
		mul.wide.s32 %r14, %r6, 4; 
		add.s64 %r15, %r2, %r14; 
		st.global.u32 [%r15], %r13; 
		bra $BB_5_0009_external_out_handler_to_; 
	$BB_5_0009_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r20, _Zocelot_resume_status; 
		st.local.u32 [%r20], 6; 
		mov.s32 %r21, _Zocelot_resume_point; 
		st.local.u32 [%r21], 0; 
		exit; 
	$BB_5_0009_external_in_handler__from_5_0006:		// 3 live-in values 
		mov.s32 %r18, _Zocelot_spill_area; 
		ld.local.s64 %r12, [%r18 + 96]; 
		ld.local.s64 %r2, [%r18 + 16]; 
		ld.local.s32 %r6, [%r18 + 48]; 
		bra $BB_5_0009; 
	$BB_5_0009_external_in_handler__from_5_0005:		// 3 live-in values 
		mov.s32 %r17, _Zocelot_spill_area; 
		ld.local.s64 %r12, [%r17 + 96]; 
		ld.local.s64 %r2, [%r17 + 16]; 
		ld.local.s32 %r6, [%r17 + 48]; 
		bra $BB_5_0009; 
	$BB_5_0009_external_in_handler__from_5_0008:		// 3 live-in values 
		mov.s32 %r16, _Zocelot_spill_area; 
		ld.local.s64 %r12, [%r16 + 96]; 
		ld.local.s64 %r2, [%r16 + 16]; 
		ld.local.s32 %r6, [%r16 + 48]; 
		bra $BB_5_0009; 
}
(0.007596) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(ocelot/cuda/test/functions/indirectCall.cu)
(0.007696) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(kernelEntry)
(0.007713) DynamicTTestIndirectFunctionCall: ocelot/executive/implementation/DynamicTranslationCache.cpp:885: void setupCallTargets(ir::PTXKernel&, const executive::DynamicTranslationCache&): Assertion `0 && "arbitrary function calls not yet supported"' failed.
ranslationCache.cpp:1115: __translateKernel()
(0.007731) DynamicTranslationCache.cpp:1136:   translating subkernel _subkernel_kernelEntry_0
(0.007766) DynamicTranslationCache.cpp:1149:   Converting from PTX IR to LLVM IR.
(0.009215) DynamicTranslationCache.cpp:1166: translated PTX to LLVM
(0.009931) DynamicTranslationCache.cpp:1136:   translating subkernel _subkernel_kernelEntry_1
(0.009955) DynamicTranslationCache.cpp:1149:   Converting from PTX IR to LLVM IR.
(0.010705) DynamicTranslationCache.cpp:1166: translated PTX to LLVM
(0.011012) DynamicTranslationCache.cpp:1136:   translating subkernel _subkernel_kernelEntry_2
(0.011035) DynamicTranslationCache.cpp:1149:   Converting from PTX IR to LLVM IR.
(0.011595) DynamicTranslationCache.cpp:1166: translated PTX to LLVM
(0.011837) DynamicTranslationCache.cpp:1136:   translating subkernel _subkernel_kernelEntry_3

INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTextureArray
INFO     Test completed in 0.0514631271362 seconds
INFO      It produced the following output:
(0.000539) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
cudaBindTextureToArray() - failed to bind texture: cudaErrorInvalidValue

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMKernels 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestParser -i ../tests/ptx 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestKernels
INFO     Test completed in 0.0607149600983 seconds
INFO      It produced the following output:
(0.009611) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
Pass/Fail : Pass


Name : TestKernels

Description: 


Test Seed : 1326492380
Test time : 0.0139678

Status : Test output:
looping kernel succeeded
matrix vector kernel succeeded



INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestExternalFunctions 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCalVectorScale
INFO     Test completed in 0.0482649803162 seconds
INFO      It produced the following output:
(0.000601) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
No CAL devices found
Pass/Fail : Pass

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaGlobals 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestParser
INFO     Test completed in 0.0510129928589 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestParser

Description: A test for the PTXParser class. Test Points: 1) Load a PTX file 
             and run it through the parser generating a module. Write the 
             module to an intermediate stream. Parse the stream again 
             generating a new module, compare both to make sure that they match.


Test Seed : 1326492380
Test time : 1.40667e-05

Status : 


INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestEmulator 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestExternalFunctions
INFO     Test completed in 0.0491850376129 seconds
INFO      It produced the following output:
(0.000697) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
(0.002242) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(kernel)
(0.002333) KernelPartitioningPass.cpp:66:   Partitioning kernel kernel
/*
* Ocelot Version : 2.1.1654
*/
.entry kernel(.param  .u64 result)
{

	.param  .u64 freeValue;
	.param  .u64 returned;
	.param  .u64 value;
	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u64 %r2;
	.reg .u64 %r3;
	$BB_1_0002:		/**/ 
		mov.u64 %r0, 8; 
		st.param.u64 [value], %r0; 
		call.uni (returned), malloc, (value); 
		ld.param.u64 %r1, [returned]; 
		st.global.u64 [%r1], %r0; 
		ld.global.u64 %r2, [%r1]; 
		ld.param.u64 %r3, [result]; 
		st.global.u64 [%r3], %r2; 
		st.param.u64 [freeValue], %r1; 
		call.uni free, (freeValue); 
		exit; 
}
(0.002470) KernelPartitioningPass.cpp:209:    Spill region size is 24
(0.002482) KernelPartitioningPass.cpp:103:  KernelGraph::_partitionMinimumSize()
(0.002494) KernelPartitioningPass.cpp:267:  Subkernel::create(kernel)
(0.002504) KernelPartitioningPass.cpp:295:  Subkernel::_create(kernel)
(0.002525) KernelPartitioningPass.cpp:322:   adding block $BB_1_0002
(0.002540) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.002550) KernelPartitioningPass.cpp:370:   ENTRY EDGE
(0.002561) KernelPartitioningPass.cpp:380:   creating internal edges
(0.002568) KernelPartitioningPass.cpp:388:    adding internal edge: entry -> $BB_1_0002
(0.002575) KernelPartitioningPass.cpp:393:   NO external in edges. Create a dummy edge from the entry node to the correct block
(0.002582) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.002588) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.002598) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.002604) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_kernel_0(.param  .u64 result)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[24];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u64 %r2;
	.reg .u64 %r3;
	$BB_1_0002:		/**/ 
		mov.u64 %r0, 8; 
		st.param.u64 [value], %r0; 
		call.uni (returned), malloc, (value); 
		ld.param.u64 %r1, [returned]; 
		st.global.u64 [%r1], %r0; 
		ld.global.u64 %r2, [%r1]; 
		ld.param.u64 %r3, [result]; 
		st.global.u64 [%r3], %r2; 
		st.param.u64 [freeValue], %r1; 
		call.uni free, (freeValue); 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.002716) KernelPartitioningPass.cpp:125:  Linking external edges
(0.002724) KernelPartitioningPass.cpp:159:   failed to link external edge: $BB_1_0002 -> exit
(0.002763) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.002778) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.002787) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.002797) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.002810) KernelPartitioningPass.cpp:837:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.002827) KernelPartitioningPass.cpp:734:  Adding $BB_1_0002 to frontierExitBlocks
(0.002839) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.002847) KernelPartitioningPass.cpp:757:   block $BB_1_0002 (1 external edges) terminator: exit
(0.002855) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.002866) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.002873) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_kernel_0(.param  .u64 result)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[24];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u64 %r2;
	.reg .u64 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	$BB_1_0002:		/**/ 
		mov.u64 %r0, 8; 
		st.param.u64 [value], %r0; 
		call.uni (returned), malloc, (value); 
		ld.param.u64 %r1, [returned]; 
		st.global.u64 [%r1], %r0; 
		ld.global.u64 TestExternalFunctions: ocelot/executive/implementation/DynamicTranslationCache.cpp:885: void setupCallTargets(ir::PTXKernel&, const executive::DynamicTranslationCache&): Assertion `0 && "arbitrary function calls not yet supported"' failed.
%r2, [%r1]; 
		ld.param.u64 %r3, [result]; 
		st.global.u64 [%r3], %r2; 
		st.param.u64 [freeValue], %r1; 
		call.uni free, (freeValue); 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r4, _Zocelot_resume_status; 
		st.local.u32 [%r4], 6; 
		mov.s32 %r5, _Zocelot_resume_point; 
		st.local.u32 [%r5], 0; 
		exit; 
}
(0.003043) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(someModule)
(0.003064) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(kernel)
(0.003079) DynamicTranslationCache.cpp:1115: __translateKernel()
(0.003087) DynamicTranslationCache.cpp:1136:   translating subkernel _subkernel_kernel_0

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXAssembly 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaGlobals
INFO     Test completed in 0.0445339679718 seconds
INFO      It produced the following output:
(0.000533) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
Pass/Fail : Pass

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaMalloc 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestEmulator
INFO     Test completed in 0.0454180240631 seconds
INFO      It produced the following output:
(0.003175) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
Pass/Fail : Pass


Name : TestEmulator

Description: 


Test Seed : 1326492380
Test time : 0.00366592

Status : Test output:
10 registers
Register test passed
Load test passed
Store test passed
no errors
Full kernel test passed



INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDataflowGraph -i ../tests/ptx 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMKernels
INFO     Test completed in 0.102807998657 seconds
INFO      It produced the following output:
(0.008601) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
Pass/Fail : Pass


Name : TestLLVMKernels

Description: A unit test for the LLVM executive runtime. Test Points: 1) 
             Execute a kernel with a loop. 2) Execute a matrix multiply kernel.


Test Seed : 1326492380
Test time : 0.0523748

Status : A = [
 1 0 0 0 0 0 0 0 ;
 0.5 1 0 0 0 0 0 0 ;
 0.333333 0.5 1 0 0 0 0 0 ;
 0.25 0.333333 0.5 1 0 0 0 0 ;
 0.2 0.25 0.333333 0.5 1 0 0 0 ;
 0.166667 0.2 0.25 0.333333 0.5 1 0 0 ;
 0.142857 0.166667 0.2 0.25 0.333333 0.5 1 0 ;
 0.125 0.142857 0.166667 0.2 0.25 0.333333 0.5 1 ;
];
V = [
 1 ;
 2 ;
 3 ;
 4 ;
 5 ;
 6 ;
 7 ;
 8 ;
];
R = [
 1 ;
 2.5 ;
 4.33333 ;
 6.41667 ;
 8.7 ;
 11.15 ;
 13.7429 ;
 16.4607 ;
];



INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDataflowGraph
INFO     Test completed in 0.0426599979401 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestDataflowGraph

Description: A test for the DataflowGraph class. Test Points: 1) 
             Generic: load PTX files, convert them into dataflow graphs, verify that 
             all live ranges spanning blocks are consistent. 2) SSA: convert to 
             ssa form, verify that no register is declared more than once. 3) 
             reverse SSA: convert to ssa then out of ssa, verify that all live 
             ranges spanning blocks are consistent.


Test Seed : 1326492380
Test time : 1.66893e-05

Status : Testing Generic Dataflow
 Test Passed
Testing SSA Dataflow
 Test Passed
Testing SSA then back Dataflow
 Test Passed



INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaMalloc
INFO     Test completed in 0.0718848705292 seconds
INFO      It produced the following output:
(0.000583) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
test_malloc(256, 128)
PASSED
test_mallocArray(256, 128)
checking results from last cudaMemcpyFromArray
PASSED
[1] mallocing pitch
[2] memcpying2d
[3] memcpying
[4] checking for errors
[5] mallocing
[6] memcpying
[7] memcpying
[8] final free
Pass/Fail : Pass

INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXAssembly
INFO     Test completed in 0.0890920162201 seconds
INFO      It produced the following output:
(0.003357) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
(0.004734) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.004844) KernelPartitioningPass.cpp:66:   Partitioning kernel test
/*
* Ocelot Version : 2.1.1654
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
}
(0.004987) KernelPartitioningPass.cpp:209:    Spill region size is 72
(0.004999) KernelPartitioningPass.cpp:103:  KernelGraph::_partitionMinimumSize()
(0.005010) KernelPartitioningPass.cpp:267:  Subkernel::create(test)
(0.005020) KernelPartitioningPass.cpp:295:  Subkernel::_create(test)
(0.005047) KernelPartitioningPass.cpp:322:   adding block $BB_1_0002
(0.005062) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.005071) KernelPartitioningPass.cpp:370:   ENTRY EDGE
(0.005082) KernelPartitioningPass.cpp:380:   creating internal edges
(0.005089) KernelPartitioningPass.cpp:388:    adding internal edge: entry -> $BB_1_0002
(0.005097) KernelPartitioningPass.cpp:393:   NO external in edges. Create a dummy edge from the entry node to the correct block
(0.005104) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.005110) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.005120) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.005126) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.005255) KernelPartitioningPass.cpp:125:  Linking external edges
(0.005263) KernelPartitioningPass.cpp:159:   failed to link external edge: $BB_1_0002 -> exit
(0.005314) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.005330) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.005339) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.005349) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.005363) KernelPartitioningPass.cpp:837:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.005384) KernelPartitioningPass.cpp:734:  Adding $BB_1_0002 to frontierExitBlocks
(0.005396) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.005404) KernelPartitioningPass.cpp:757:   block $BB_1_0002 (1 external edges) terminator: exit
(0.005413) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.005424) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.005431) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r10, _Zocelot_resume_status; 
		st.local.u32 [%r10], 6; 
		mov.s32 %r11, _Zocelot_resume_point; 
		st.local.u32 [%r11], 0; 
		exit; 
}
(0.005610) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestVectorElements-u32)
(0.005632) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.005646) DynamicTranslationCache.cpp:1115: __translateKernel()
(0.005655) DynamicTranslationCache.cpp:1136:   translating subkernel _subkernel_test_0
(0.005682) DynamicTranslationCache.cpp:1149:   Converting from PTX IR to LLVM IR.
(0.006498) DynamicTranslationCache.cpp:1166: translated PTX to LLVM
(0.006991) DynamicTranslationCache.cpp:1215:  _translateKernel('test') complete for 1 subkernels
(0.006999) DynamicTranslationCache.cpp:148:    registered new kernel
(0.007014) DynamicTranslationCache.cpp:1226: _specializeTranslation()
(0.007022) DynamicTranslationCache.cpp:1236:   cloning and optimizing
(0.008354) DynamicTranslationCache.cpp:999:  Overriding optimization level
(0.009474) DynamicTranslationCache.cpp:1081: performed transformations
(0.009527) DynamicTranslationCache.cpp:1245:   JIT compiling
(0.011168) DynamicTranslationCache.cpp:1256:   verifying
(0.011288) DynamicTranslationCache.cpp:1271:   updating translation cache data structures
(0.011302) DynamicTranslationCache.cpp:1283:   _specializeTranslation() complete
(0.012173) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.012219) KernelPartitioningPass.cpp:66:   Partitioning kernel test
/*
* Ocelot Version : 2.1.1654
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
}
(0.012317) KernelPartitioningPass.cpp:209:    Spill region size is 72
(0.012326) KernelPartitioningPass.cpp:103:  KernelGraph::_partitionMinimumSize()
(0.012333) KernelPartitioningPass.cpp:267:  Subkernel::create(test)
(0.012340) KernelPartitioningPass.cpp:295:  Subkernel::_create(test)
(0.012359) KernelPartitioningPass.cpp:322:   adding block $BB_1_0002
(0.012369) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.012376) KernelPartitioningPass.cpp:370:   ENTRY EDGE
(0.012384) KernelPartitioningPass.cpp:380:   creating internal edges
(0.012390) KernelPartitioningPass.cpp:388:    adding internal edge: entry -> $BB_1_0002
(0.012397) KernelPartitioningPass.cpp:393:   NO external in edges. Create a dummy edge from the entry node to the correct block
(0.012403) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.012410) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.012417) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.012424) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.012549) KernelPartitioningPass.cpp:125:  Linking external edges
(0.012556) KernelPartitioningPass.cpp:159:   failed to link external edge: $BB_1_0002 -> exit
(0.012591) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.012602) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.012609) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.012616) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.012625) KernelPartitioningPass.cpp:837:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.012639) KernelPartitioningPass.cpp:734:  Adding $BB_1_0002 to frontierExitBlocks
(0.012647) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.012654) KernelPartitioningPass.cpp:757:   block $BB_1_0002 (1 external edges) terminator: exit
(0.012661) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.012670) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.012676) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r10, _Zocelot_resume_status; 
		st.local.u32 [%r10], 6; 
		mov.s32 %r11, _Zocelot_resume_point; 
		st.local.u32 [%r11], 0; 
		exit; 
}
(0.012808) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestVectorElements-u32)
(0.012815) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.012822) DynamicTranslationCache.cpp:152:    kernel already registered
(0.013549) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.013585) KernelPartitioningPass.cpp:66:   Partitioning kernel test
/*
* Ocelot Version : 2.1.1654
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
}
(0.013673) KernelPartitioningPass.cpp:209:    Spill region size is 72
(0.013681) KernelPartitioningPass.cpp:103:  KernelGraph::_partitionMinimumSize()
(0.013688) KernelPartitioningPass.cpp:267:  Subkernel::create(test)
(0.013694) KernelPartitioningPass.cpp:295:  Subkernel::_create(test)
(0.013714) KernelPartitioningPass.cpp:322:   adding block $BB_1_0002
(0.013724) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.013731) KernelPartitioningPass.cpp:370:   ENTRY EDGE
(0.013738) KernelPartitioningPass.cpp:380:   creating internal edges
(0.013744) KernelPartitioningPass.cpp:388:    adding internal edge: entry -> $BB_1_0002
(0.013751) KernelPartitioningPass.cpp:393:   NO external in edges. Create a dummy edge from the entry node to the correct block
(0.013757) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.013763) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.013770) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.013776) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.013886) KernelPartitioningPass.cpp:125:  Linking external edges
(0.013893) KernelPartitioningPass.cpp:159:   failed to link external edge: $BB_1_0002 -> exit
(0.013930) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.013942) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.013948) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.013955) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.013963) KernelPartitioningPass.cpp:837:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.013976) KernelPartitioningPass.cpp:734:  Adding $BB_1_0002 to frontierExitBlocks
(0.013984) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.013993) KernelPartitioningPass.cpp:757:   block $BB_1_0002 (1 external edges) terminator: exit
(0.014000) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.014009) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.014015) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r10, _Zocelot_resume_status; 
		st.local.u32 [%r10], 6; 
		mov.s32 %r11, _Zocelot_resume_point; 
		st.local.u32 [%r11], 0; 
		exit; 
}
(0.014143) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestVectorElements-u32)
(0.014150) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.014157) DynamicTranslationCache.cpp:152:    kernel already registered
(0.014881) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.014916) KernelPartitioningPass.cpp:66:   Partitioning kernel test
/*
* Ocelot Version : 2.1.1654
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
}
(0.015003) KernelPartitioningPass.cpp:209:    Spill region size is 72
(0.015011) KernelPartitioningPass.cpp:103:  KernelGraph::_partitionMinimumSize()
(0.015018) KernelPartitioningPass.cpp:267:  Subkernel::create(test)
(0.015024) KernelPartitioningPass.cpp:295:  Subkernel::_create(test)
(0.015044) KernelPartitioningPass.cpp:322:   adding block $BB_1_0002
(0.015057) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.015064) KernelPartitioningPass.cpp:370:   ENTRY EDGE
(0.015079) KernelPartitioningPass.cpp:380:   creating internal edges
(0.015086) KernelPartitioningPass.cpp:388:    adding internal edge: entry -> $BB_1_0002
(0.015093) KernelPartitioningPass.cpp:393:   NO external in edges. Create a dummy edge from the entry node to the correct block
(0.015099) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.015105) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.015112) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.015118) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.015217) KernelPartitioningPass.cpp:125:  Linking external edges
(0.015224) KernelPartitioningPass.cpp:159:   failed to link external edge: $BB_1_0002 -> exit
(0.015260) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.015271) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.015277) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.015283) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.015291) KernelPartitioningPass.cpp:837:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.015305) KernelPartitioningPass.cpp:734:  Adding $BB_1_0002 to frontierExitBlocks
(0.015318) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.015326) KernelPartitioningPass.cpp:757:   block $BB_1_0002 (1 external edges) terminator: exit
(0.015333) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.015342) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.015348) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r10, _Zocelot_resume_status; 
		st.local.u32 [%r10], 6; 
		mov.s32 %r11, _Zocelot_resume_point; 
		st.local.u32 [%r11], 0; 
		exit; 
}
(0.015484) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestVectorElements-u32)
(0.015491) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.015498) DynamicTranslationCache.cpp:152:    kernel already registered
(0.016217) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.016254) KernelPartitioningPass.cpp:66:   Partitioning kernel test
/*
* Ocelot Version : 2.1.1654
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
}
(0.016356) KernelPartitioningPass.cpp:209:    Spill region size is 72
(0.016365) KernelPartitioningPass.cpp:103:  KernelGraph::_partitionMinimumSize()
(0.016372) KernelPartitioningPass.cpp:267:  Subkernel::create(test)
(0.016378) KernelPartitioningPass.cpp:295:  Subkernel::_create(test)
(0.016400) KernelPartitioningPass.cpp:322:   adding block $BB_1_0002
(0.016410) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.016416) KernelPartitioningPass.cpp:370:   ENTRY EDGE
(0.016424) KernelPartitioningPass.cpp:380:   creating internal edges
(0.016430) KernelPartitioningPass.cpp:388:    adding internal edge: entry -> $BB_1_0002
(0.016438) KernelPartitioningPass.cpp:393:   NO external in edges. Create a dummy edge from the entry node to the correct block
(0.016444) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.016450) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.016458) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.016464) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.016570) KernelPartitioningPass.cpp:125:  Linking external edges
(0.016577) KernelPartitioningPass.cpp:159:   failed to link external edge: $BB_1_0002 -> exit
(0.016614) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.016626) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.016633) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.016639) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.016647) KernelPartitioningPass.cpp:837:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.016665) KernelPartitioningPass.cpp:734:  Adding $BB_1_0002 to frontierExitBlocks
(0.016672) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.016680) KernelPartitioningPass.cpp:757:   block $BB_1_0002 (1 external edges) terminator: exit
(0.016687) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.016696) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.016702) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r10, _Zocelot_resume_status; 
		st.local.u32 [%r10], 6; 
		mov.s32 %r11, _Zocelot_resume_point; 
		st.local.u32 [%r11], 0; 
		exit; 
}
(0.016838) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestVectorElements-u32)
(0.016845) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.016860) DynamicTranslationCache.cpp:152:    kernel already registered
(0.017593) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.017629) KernelPartitioningPass.cpp:66:   Partitioning kernel test
/*
* Ocelot Version : 2.1.1654
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
}
(0.017801) KernelPartitioningPass.cpp:209:    Spill region size is 72
(0.017809) KernelPartitioningPass.cpp:103:  KernelGraph::_partitionMinimumSize()
(0.017817) KernelPartitioningPass.cpp:267:  Subkernel::create(test)
(0.017823) KernelPartitioningPass.cpp:295:  Subkernel::_create(test)
(0.017846) KernelPartitioningPass.cpp:322:   adding block $BB_1_0002
(0.017857) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.017864) KernelPartitioningPass.cpp:370:   ENTRY EDGE
(0.017871) KernelPartitioningPass.cpp:380:   creating internal edges
(0.017878) KernelPartitioningPass.cpp:388:    adding internal edge: entry -> $BB_1_0002
(0.017885) KernelPartitioningPass.cpp:393:   NO external in edges. Create a dummy edge from the entry node to the correct block
(0.017891) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.017897) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.017905) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.017911) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.018017) KernelPartitioningPass.cpp:125:  Linking external edges
(0.018024) KernelPartitioningPass.cpp:159:   failed to link external edge: $BB_1_0002 -> exit
(0.018061) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.018073) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.018080) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.018086) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.018095) KernelPartitioningPass.cpp:837:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.018111) KernelPartitioningPass.cpp:734:  Adding $BB_1_0002 to frontierExitBlocks
(0.018119) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.018126) KernelPartitioningPass.cpp:757:   block $BB_1_0002 (1 external edges) terminator: exit
(0.018134) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.018143) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.018149) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r10, _Zocelot_resume_status; 
		st.local.u32 [%r10], 6; 
		mov.s32 %r11, _Zocelot_resume_point; 
		st.local.u32 [%r11], 0; 
		exit; 
}
(0.018434) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestVectorElements-u32)
(0.018442) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.018449) DynamicTranslationCache.cpp:152:    kernel already registered
(0.019175) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.019212) KernelPartitioningPass.cpp:66:   Partitioning kernel test
/*
* Ocelot Version : 2.1.1654
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
}
(0.019305) KernelPartitioningPass.cpp:209:    Spill region size is 72
(0.019313) KernelPartitioningPass.cpp:103:  KernelGraph::_partitionMinimumSize()
(0.019320) KernelPartitioningPass.cpp:267:  Subkernel::create(test)
(0.019327) KernelPartitioningPass.cpp:295:  Subkernel::_create(test)
(0.019351) KernelPartitioningPass.cpp:322:   adding block $BB_1_0002
(0.019361) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.019368) KernelPartitioningPass.cpp:370:   ENTRY EDGE
(0.019376) KernelPartitioningPass.cpp:380:   creating internal edges
(0.019382) KernelPartitioningPass.cpp:388:    adding internal edge: entry -> $BB_1_0002
(0.019389) KernelPartitioningPass.cpp:393:   NO external in edges. Create a dummy edge from the entry node to the correct block
(0.019395) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.019402) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.019409) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.019415) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.019519) KernelPartitioningPass.cpp:125:  Linking external edges
(0.019526) KernelPartitioningPass.cpp:159:   failed to link external edge: $BB_1_0002 -> exit
(0.019563) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.019575) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.019582) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.019589) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.019597) KernelPartitioningPass.cpp:837:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.019614) KernelPartitioningPass.cpp:734:  Adding $BB_1_0002 to frontierExitBlocks
(0.019621) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.019629) KernelPartitioningPass.cpp:757:   block $BB_1_0002 (1 external edges) terminator: exit
(0.019636) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.019645) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.019663) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r10, _Zocelot_resume_status; 
		st.local.u32 [%r10], 6; 
		mov.s32 %r11, _Zocelot_resume_point; 
		st.local.u32 [%r11], 0; 
		exit; 
}
(0.019802) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestVectorElements-u32)
(0.019810) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.019816) DynamicTranslationCache.cpp:152:    kernel already registered
(0.020538) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.020575) KernelPartitioningPass.cpp:66:   Partitioning kernel test
/*
* Ocelot Version : 2.1.1654
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
}
(0.020689) KernelPartitioningPass.cpp:209:    Spill region size is 72
(0.020698) KernelPartitioningPass.cpp:103:  KernelGraph::_partitionMinimumSize()
(0.020705) KernelPartitioningPass.cpp:267:  Subkernel::create(test)
(0.020712) KernelPartitioningPass.cpp:295:  Subkernel::_create(test)
(0.020736) KernelPartitioningPass.cpp:322:   adding block $BB_1_0002
(0.020746) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.020753) KernelPartitioningPass.cpp:370:   ENTRY EDGE
(0.020761) KernelPartitioningPass.cpp:380:   creating internal edges
(0.020767) KernelPartitioningPass.cpp:388:    adding internal edge: entry -> $BB_1_0002
(0.020774) KernelPartitioningPass.cpp:393:   NO external in edges. Create a dummy edge from the entry node to the correct block
(0.020781) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.020787) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.020794) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.020800) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.020905) KernelPartitioningPass.cpp:125:  Linking external edges
(0.020913) KernelPartitioningPass.cpp:159:   failed to link external edge: $BB_1_0002 -> exit
(0.020950) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.020962) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.020968) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.020986) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.020996) KernelPartitioningPass.cpp:837:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.021010) KernelPartitioningPass.cpp:734:  Adding $BB_1_0002 to frontierExitBlocks
(0.021017) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.021027) KernelPartitioningPass.cpp:757:   block $BB_1_0002 (1 external edges) terminator: exit
(0.021035) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.021044) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.021051) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r10, _Zocelot_resume_status; 
		st.local.u32 [%r10], 6; 
		mov.s32 %r11, _Zocelot_resume_point; 
		st.local.u32 [%r11], 0; 
		exit; 
}
(0.021187) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestVectorElements-u32)
(0.021195) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.021202) DynamicTranslationCache.cpp:152:    kernel already registered
(0.022215) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.022252) KernelPartitioningPass.cpp:66:   Partitioning kernel test
/*
* Ocelot Version : 2.1.1654
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
}
(0.022345) KernelPartitioningPass.cpp:209:    Spill region size is 72
(0.022353) KernelPartitioningPass.cpp:103:  KernelGraph::_partitionMinimumSize()
(0.022361) KernelPartitioningPass.cpp:267:  Subkernel::create(test)
(0.022367) KernelPartitioningPass.cpp:295:  Subkernel::_create(test)
(0.022390) KernelPartitioningPass.cpp:322:   adding block $BB_1_0002
(0.022400) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.022407) KernelPartitioningPass.cpp:370:   ENTRY EDGE
(0.022415) KernelPartitioningPass.cpp:380:   creating internal edges
(0.022421) KernelPartitioningPass.cpp:388:    adding internal edge: entry -> $BB_1_0002
(0.022428) KernelPartitioningPass.cpp:393:   NO external in edges. Create a dummy edge from the entry node to the correct block
(0.022434) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.022440) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.022447) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.022453) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.022561) KernelPartitioningPass.cpp:125:  Linking external edges
(0.022568) KernelPartitioningPass.cpp:159:   failed to link external edge: $BB_1_0002 -> exit
(0.022604) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.022618) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.022625) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.022631) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.022639) KernelPartitioningPass.cpp:837:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.022653) KernelPartitioningPass.cpp:734:  Adding $BB_1_0002 to frontierExitBlocks
(0.022660) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.022667) KernelPartitioningPass.cpp:757:   block $BB_1_0002 (1 external edges) terminator: exit
(0.022674) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.022683) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.022689) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r10, _Zocelot_resume_status; 
		st.local.u32 [%r10], 6; 
		mov.s32 %r11, _Zocelot_resume_point; 
		st.local.u32 [%r11], 0; 
		exit; 
}
(0.022819) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestVectorElements-u32)
(0.022826) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.022832) DynamicTranslationCache.cpp:152:    kernel already registered
(0.023545) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.023580) KernelPartitioningPass.cpp:66:   Partitioning kernel test
/*
* Ocelot Version : 2.1.1654
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
}
(0.023668) KernelPartitioningPass.cpp:209:    Spill region size is 72
(0.023676) KernelPartitioningPass.cpp:103:  KernelGraph::_partitionMinimumSize()
(0.023682) KernelPartitioningPass.cpp:267:  Subkernel::create(test)
(0.023689) KernelPartitioningPass.cpp:295:  Subkernel::_create(test)
(0.023710) KernelPartitioningPass.cpp:322:   adding block $BB_1_0002
(0.023719) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.023725) KernelPartitioningPass.cpp:370:   ENTRY EDGE
(0.023732) KernelPartitioningPass.cpp:380:   creating internal edges
(0.023739) KernelPartitioningPass.cpp:388:    adding internal edge: entry -> $BB_1_0002
(0.023746) KernelPartitioningPass.cpp:393:   NO external in edges. Create a dummy edge from the entry node to the correct block
(0.023751) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.023765) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.023773) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.023779) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.023881) KernelPartitioningPass.cpp:125:  Linking external edges
(0.023888) KernelPartitioningPass.cpp:159:   failed to link external edge: $BB_1_0002 -> exit
(0.023922) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.023932) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.023939) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.023945) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.023953) KernelPartitioningPass.cpp:837:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.023969) KernelPartitioningPass.cpp:734:  Adding $BB_1_0002 to frontierExitBlocks
(0.023977) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.023984) KernelPartitioningPass.cpp:757:   block $BB_1_0002 (1 external edges) terminator: exit
(0.023991) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.023999) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.024005) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r10, _Zocelot_resume_status; 
		st.local.u32 [%r10], 6; 
		mov.s32 %r11, _Zocelot_resume_point; 
		st.local.u32 [%r11], 0; 
		exit; 
}
(0.024135) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestVectorElements-u32)
(0.024142) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.024148) DynamicTranslationCache.cpp:152:    kernel already registered
(0.024858) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.024894) KernelPartitioningPass.cpp:66:   Partitioning kernel test
/*
* Ocelot Version : 2.1.1654
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
}
(0.024981) KernelPartitioningPass.cpp:209:    Spill region size is 72
(0.024989) KernelPartitioningPass.cpp:103:  KernelGraph::_partitionMinimumSize()
(0.024996) KernelPartitioningPass.cpp:267:  Subkernel::create(test)
(0.025002) KernelPartitioningPass.cpp:295:  Subkernel::_create(test)
(0.025031) KernelPartitioningPass.cpp:322:   adding block $BB_1_0002
(0.025041) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.025048) KernelPartitioningPass.cpp:370:   ENTRY EDGE
(0.025055) KernelPartitioningPass.cpp:380:   creating internal edges
(0.025061) KernelPartitioningPass.cpp:388:    adding internal edge: entry -> $BB_1_0002
(0.025068) KernelPartitioningPass.cpp:393:   NO external in edges. Create a dummy edge from the entry node to the correct block
(0.025074) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.025079) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.025087) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.025093) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.025195) KernelPartitioningPass.cpp:125:  Linking external edges
(0.025202) KernelPartitioningPass.cpp:159:   failed to link external edge: $BB_1_0002 -> exit
(0.025235) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.025246) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.025252) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.025259) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.025267) KernelPartitioningPass.cpp:837:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.025284) KernelPartitioningPass.cpp:734:  Adding $BB_1_0002 to frontierExitBlocks
(0.025291) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.025299) KernelPartitioningPass.cpp:757:   block $BB_1_0002 (1 external edges) terminator: exit
(0.025306) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.025314) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.025320) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r10, _Zocelot_resume_status; 
		st.local.u32 [%r10], 6; 
		mov.s32 %r11, _Zocelot_resume_point; 
		st.local.u32 [%r11], 0; 
		exit; 
}
(0.025447) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestVectorElements-u32)
(0.025454) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.025461) DynamicTranslationCache.cpp:152:    kernel already registered
(0.026184) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.026221) KernelPartitioningPass.cpp:66:   Partitioning kernel test
/*
* Ocelot Version : 2.1.1654
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
}
(0.026318) KernelPartitioningPass.cpp:209:    Spill region size is 72
(0.026326) KernelPartitioningPass.cpp:103:  KernelGraph::_partitionMinimumSize()
(0.026333) KernelPartitioningPass.cpp:267:  Subkernel::create(test)
(0.026340) KernelPartitioningPass.cpp:295:  Subkernel::_create(test)
(0.026360) KernelPartitioningPass.cpp:322:   adding block $BB_1_0002
(0.026370) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.026377) KernelPartitioningPass.cpp:370:   ENTRY EDGE
(0.026384) KernelPartitioningPass.cpp:380:   creating internal edges
(0.026390) KernelPartitioningPass.cpp:388:    adding internal edge: entry -> $BB_1_0002
(0.026397) KernelPartitioningPass.cpp:393:   NO external in edges. Create a dummy edge from the entry node to the correct block
(0.026403) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.026409) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.026416) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.026422) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.026525) KernelPartitioningPass.cpp:125:  Linking external edges
(0.026532) KernelPartitioningPass.cpp:159:   failed to link external edge: $BB_1_0002 -> exit
(0.026566) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.026577) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.026583) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.026589) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.026598) KernelPartitioningPass.cpp:837:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.026617) KernelPartitioningPass.cpp:734:  Adding $BB_1_0002 to frontierExitBlocks
(0.026625) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.026632) KernelPartitioningPass.cpp:757:   block $BB_1_0002 (1 external edges) terminator: exit
(0.026639) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.026647) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.026653) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r10, _Zocelot_resume_status; 
		st.local.u32 [%r10], 6; 
		mov.s32 %r11, _Zocelot_resume_point; 
		st.local.u32 [%r11], 0; 
		exit; 
}
(0.026793) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestVectorElements-u32)
(0.026801) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.026807) DynamicTranslationCache.cpp:152:    kernel already registered
(0.027527) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.027558) KernelPartitioningPass.cpp:66:   Partitioning kernel test
/*
* Ocelot Version : 2.1.1654
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u16 %r2;
	.reg .u16 %r3;
	.reg .u16 %r4;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.u16 %r2, [%r0]; 
		ld.global.u16 %r3, [%r0 + 2]; 
		add.u16 %r4, %r2, %r3; 
		st.global.u16 [%r1], %r4; 
		exit; 
}
(0.027628) KernelPartitioningPass.cpp:209:    Spill region size is 32
(0.027636) KernelPartitioningPass.cpp:103:  KernelGraph::_partitionMinimumSize()
(0.027643) KernelPartitioningPass.cpp:267:  Subkernel::create(test)
(0.027649) KernelPartitioningPass.cpp:295:  Subkernel::_create(test)
(0.027671) KernelPartitioningPass.cpp:322:   adding block $BB_1_0002
(0.027682) KernelPartitioningPass.cpp:341:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.027689) KernelPartitioningPass.cpp:370:   ENTRY EDGE
(0.027696) KernelPartitioningPass.cpp:380:   creating internal edges
(0.027703) KernelPartitioningPass.cpp:388:    adding internal edge: entry -> $BB_1_0002
(0.027710) KernelPartitioningPass.cpp:393:   NO external in edges. Create a dummy edge from the entry node to the correct block
(0.027716) KernelPartitioningPass.cpp:398:   identifying targets of external IN edges
(0.027722) KernelPartitioningPass.cpp:410:   identifying sources of external OUT edges
(0.027729) KernelPartitioningPass.cpp:426:  partitioning blocks at barriers
(0.027735) KernelPartitioningPass.cpp:500:    encountered 0 barriers
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[32];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u16 %r2;
	.reg .u16 %r3;
	.reg .u16 %r4;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.u16 %r2, [%r0]; 
		ld.global.u16 %r3, [%r0 + 2]; 
		add.u16 %r4, %r2, %r3; 
		st.global.u16 [%r1], %r4; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.027817) KernelPartitioningPass.cpp:125:  Linking external edges
(0.027824) KernelPartitioningPass.cpp:159:   failed to link external edge: $BB_1_0002 -> exit
(0.027854) KernelPartitioningPass.cpp:622:  Subkernel::_createExternalHandlers()
(0.027865) KernelPartitioningPass.cpp:630:    visiting external IN-edges
(0.027872) KernelPartitioningPass.cpp:685:    visiting external OUT-edges
(0.027878) KernelPartitioningPass.cpp:697:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.027887) KernelPartitioningPass.cpp:837:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.027903) KernelPartitioningPass.cpp:734:  Adding $BB_1_0002 to frontierExitBlocks
(0.027911) KernelPartitioningPass.cpp:745:  Frontier exit blocks:
(0.027919) KernelPartitioningPass.cpp:757:   block $BB_1_0002 (1 external edges) terminator: exit
(0.027926) KernelPartitioningPass.cpp:796:  end frontier exit blocks:
(0.027935) KernelPartitioningPass.cpp:814:  _createBarrierHandlers()
(0.027941) KernelPartitioningPass.cpp:824:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1654
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[32];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u16 %r2;
	.reg .u16 %r3;
	.reg .u16 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.u16 %r2, [%r0]; 
		ld.global.u16 %r3, [%r0 + 2]; 
		add.u16 %r4, %r2, %r3; 
		st.global.u16 [%r1], %r4; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r5, _Zocelot_resume_status; 
		st.local.u32 [%r5], 6; 
		mov.s32 %r6, _Zocelot_resume_point; 
		st.local.u32 [%r6], 0; 
		exit; 
}
(0.028063) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestAdd-u16)
(0.028074) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.028085) DynamicTranslationCache.cpp:1115: __translateKernel()
(0.028092) DynamicTranslationCache.cpp:1136:   translating subkernel _subkernel_test_0
(0.028114) DynamicTranslationCache.cpp:1149:   Converting from PTX IR to LLVM IR.
(0.028648) DynamicTranslationCache.cpp:1166: translated PTX to LLVM
(0.028947) DynamicTranslationCache.cpp:1215:  _translateKernel('test') complete for 1 subkernels
(0.028956) DynamicTranslationCache.cpp:148:    registered new kernel
Pass/Fail : Fail


Name : TestPTXAssembly

Description: A unit test framework for PTX. Runs random inputs through unit 
             tests on all available devices until a timer expires.


Test Seed : 1326492380
Test time : 0.0285127

Status : Ran 'TestVectorElements-u32' for 12 iterations.
 Output parameter 0 (I16) computed value - 32738 does not match reference value - 31941
  On device - 0 - 'Ocelot Dynamic Multicore CPU'
Test 'TestAdd-u16' seed '1326492380' failed.



INFO     
Passing tests:
 (0.043s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDataflowGraph : Passed
 (0.103s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMKernels : Passed
 (0.045s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaGlobals : Passed
 (0.057s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLexer : Passed
 (0.052s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXToLLVMTranslator : Passed
 (0.072s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaMalloc : Passed
 (0.045s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestEmulator : Passed
 (0.051s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestParser : Passed
 (0.050s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDeviceSwitching : Passed
 (0.050s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestInstructions : Passed
 (0.051s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMInstructions : Passed
 (0.048s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCalVectorScale : Passed
 (0.061s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestKernels : Passed

Failing tests:
 (0.098s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaSequence : Did not complete.
 (0.062s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTexture2D : Did not complete.
 (0.058s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestIndirectFunctionCall : Did not complete.
 (0.051s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTextureArray : Did not complete.
 (0.049s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestExternalFunctions : Did not complete.
 (0.089s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXAssembly : Failed
 (0.055s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestFunctionCall : Did not complete.

