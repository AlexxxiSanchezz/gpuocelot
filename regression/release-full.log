INFO     Reading in test file /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/regression/full.level
INFO      Found the following tests:
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLexer
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestParser
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestEmulator
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestInstructions
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestKernels
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDataflowGraph
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMInstructions
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXToLLVMTranslator
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMKernels
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaMalloc
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTexture2D
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTextureArray
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaGlobals
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDeviceSwitching
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaSequence
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCalVectorScale
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXAssembly
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestFunctionCall
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestIndirectFunctionCall
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestExternalFunctions
INFO     ==== INDIVIDUAL TEST RESULTS ====

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDeviceSwitching 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMInstructions 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMInstructions
INFO     Test completed in 0.350432157516 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestLLVMInstructions

Description: A test for the assembly code generation and automatic 
             verfication of individual LLVM instructions. Test Points: 1) For each 
             instruction, generate several assembly strings using the 
             instruction's toString method, make sure that these pass the valid() 
             check, compare to references from the LLVM manual.


Test Seed : 1328753619
Test time : 0.00134325

Status :  Checked instruction "<result> = add i32 4, %var"
Add Instruction Passed
 Checked instruction "%ptr = alloca i32"
 Checked instruction "%ptr = alloca i32, i32 4"
 Checked instruction "%ptr = alloca i32, i32 4, align 1024"
 Checked instruction "%ptr = alloca i32, align 1024"
Alloca Instruction Passed
 Checked instruction "<result> = and i32 4, %var"
 Checked instruction "<result> = and i32 15, 40"
 Checked instruction "<result> = and i32 4, 8"
And Instruction Passed
 Checked instruction "<result> = ashr i32 4, 1"
 Checked instruction "<result> = ashr i8 -2, 1"
 Checked instruction "<result> = ashr < 2 x i32 > < i32 -2, i32 4 >, < i32 1, i32 3 >"
Ashr Instruction Passed
 Checked instruction "%X = bitcast i8 -1 to i8"
 Checked instruction "%Z = bitcast < 2 x i32 > %V to i64"
Bitcast Instruction Passed
 Checked instruction "br i1 %cond, label %IfEqual, label %IfUnequal"
Br Instruction Passed
 Checked instruction "%retval = call i32 @test(i32 %argc)"
 Checked instruction "call i32 (i8*, ...)* @printf(i8* %msg, i32 12, i8 42)"
 Checked instruction "%X = tail call i32 @foo()"
 Checked instruction "%Y = tail call fastcc i32 @foo()"
 Checked instruction "call void @foo(i8 97 signext)"
 Checked instruction "%r = call %struct.A @foo()"
 Checked instruction "call void @foo() noreturn"
 Checked instruction "%ZZ = call zeroext i32 @bar()"
Call Instruction Passed
 Checked instruction "%result = extractelement < 4 x i32 > %vec, i32 0"
Extractelement Instruction Passed
 Checked instruction "%result = extractvalue { i32, float } %agg, 0"
Extractvalue Instruction Passed
 Checked instruction "<result> = fadd float 0x4010000000000000, %var"
Fadd Instruction Passed
 Checked instruction "<result> = fcmp oeq float 0x4010000000000000, 0x4014000000000000"
 Checked instruction "<result> = fcmp one float 0x4010000000000000, 0x4014000000000000"
 Checked instruction "<result> = fcmp olt float 0x4010000000000000, 0x4014000000000000"
 Checked instruction "<result> = fcmp ueq float 0x3ff0000000000000, 0x4000000000000000"
Fcmp Instruction Passed
 Checked instruction "<result> = fdiv float 0x4010000000000000, %var"
Fdiv Instruction Passed
 Checked instruction "<result> = fmul float 0x4010000000000000, %var"
Fmul Instruction Passed
 Checked instruction "%X = fpext float 0x400921cac0000000 to double"
 Checked instruction "%Y = fpext float 0x3ff0000000000000 to float"
Fpext Instruction Passed
 Checked instruction "%X = fptosi double 0xc05ec00000000000 to i32"
Fptosi Instruction Passed
 Checked instruction "%X = fptoui double 0x405ec00000000000 to i32"
Fptoui Instruction Passed
 Checked instruction "%X = fptrunc double 0x405ec00000000000 to float"
Fptrunc Instruction Passed
 Checked instruction "free [ 4 x i8 ]* %array"
Free Instruction Passed
 Checked instruction "<result> = frem float 0x4010000000000000, %var"
Frem Instruction Passed
 Checked instruction "<result> = fsub float 0x0, %val"
Fsub Instruction Passed
 Checked instruction "%vptr = getelementptr { i32, < 2 x i8 > }* %svptr, i32 0, i32 1, i32 1"
 Checked instruction "%eptr = getelementptr [ 12 x i8 ]* %aptr, i32 0, i32 1"
Getelementptr Instruction Passed
 Checked instruction "<result> = icmp ne float* %X, %X"
Icmp Instruction Passed
 Checked instruction "%result = insertelement < 4 x i32 > %vec, i32 1, i32 0"
Insertelement Instruction Passed
 Checked instruction "%result = insertvalue { i32, float } %agg, i32 1, 0"
Insertvalue Instruction Passed
 Checked instruction "%Y = inttoptr i64 0 to i32*"
Inttoptr Instruction Passed
 Checked instruction "%retval = invoke i32 @Test(i32 15) to label %Continue unwind label %TestCleanup"
Invoke Instruction Passed
 Checked instruction "%val = load i32* %ptr"
Load Instruction Passed
 Checked instruction "<result> = lshr i8 -2, 1"
Lshr Instruction Passed
 Checked instruction "%array2 = malloc [ 12 x i8 ], i32 %size"
Malloc Instruction Passed
 Checked instruction "<result> = mul i32 4, %var"
Mul Instruction Passed
 Checked instruction "<result> = or i32 15, 40"
Or Instruction Passed
 Checked instruction "%indvar = phi i32 [ 0, %LoopHeader ], [ %nextindvar, %Loop ]"
Phi Instruction Passed
 Checked instruction "%Y = ptrtoint i32* %x to i64"
Prtoint Instruction Passed
 Checked instruction "ret void"
Ret Instruction Passed
 Checked instruction "<result> = sdiv i32 4, %var"
Sdiv Instruction Passed
 Checked instruction "%X = select i1 1, i8 17, i8 42"
Select Instruction Passed
 Checked instruction "%X = sext i8 -1 to i16"
Sext Instruction Passed
 Checked instruction "<result> = shl i32 1, 32"
Shl Instruction Passed
 Checked instruction "%result = shufflevector < 4 x i32 > %v1, < 4 x i32 > %v2, < 8 x i32 > < i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7 >"
ShuffleVector Instruction Passed
 Checked instruction "%X = sitofp i32 257 to float"
Sitofp Instruction Passed
 Checked instruction "<result> = srem i32 4, %var"
Srem Instruction Passed
 Checked instruction "store i32 3, i32* %ptr"
Store Instruction Passed
 Checked instruction "<result> = sub i32 4, %var"
Sub Instruction Passed
 Checked instruction "switch i32 %val, label %otherwise [ i32 0, label %onzero i32 1, label %onone i32 2, label %ontwo ]"
Switch Instruction Passed
 Checked instruction "%Y = trunc i32 123 to i1"
Trunc Instruction Passed
 Checked instruction "<result> = udiv i32 4, %var"
Udiv Instruction Passed
 Checked instruction "%Y = uitofp i8 -1 to double"
Uitofp Instruction Passed
 Checked instruction "unreachable"
Unreachable Instruction Passed
 Checked instruction "unwind"
Unwind Instruction Passed
 Checked instruction "<result> = urem i32 4, %var"
Urem Instruction Passed
 Checked instruction "%tmp = va_arg i8** %ap, i32"
VarArg Instruction Passed
 Checked instruction "<result> = xor i32 -1, %V"
Xor Instruction Passed
 Checked instruction "%X = zext i32 257 to i64"
Zext Instruction Passed



INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestFunctionCall 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestFunctionCall
INFO     Test completed in 0.0513000488281 seconds
INFO      It produced the following output:
(0.001072) DynamicMulticoreDevice.cpp:55:   DynamicMulticoreDevice()
(0.003376) KernelPartitioningPass.cpp:57:   KernelPartitioningPass::runOnFunction(kernel)
(0.003391) KernelPartitioningPass.cpp:69:   partitioning blocks at barriers
(0.003401) KernelPartitioningPass.cpp:103:    encountered 0 barriers
(0.003553) KernelPartitioningPass.cpp:122:   KernelGraph( partitioning with heuristic maximum)
(0.003565) KernelPartitioningPass.cpp:125:  Partitioning kernel kernel
/*
* Ocelot Version : 2.1.1735
*/
.entry kernel(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{

	.param  .b32 param0;
	.param  .b32 retval0;
	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .pred %p7;
	.reg .s64 %r8;
	.reg .s64 %r9;
	.reg .f32 %r10;
	.reg .f32 %r11;
	$BB_2_0002:		/**/ 
		ld.param.u64 %r0, [kernel_param_0]; 
		ld.param.u32 %r1, [kernel_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %ntid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		setp.lt.s32 %p7, %r6, %r1; 
		@%p7 bra $BB_2_0004; 
	$BB_2_0003:		/**/ 
		exit; 
	$BB_2_0004:		/*BB1_2*/ 
		mul.wide.s32 %r8, %r6, 4; 
		add.s64 %r9, %r2, %r8; 
		ld.global.f32 %r10, [%r9]; 
		st.param.f32 [param0], %r10; 
		call.uni (retval0), square, (param0); 
		ld.param.f32 %r11, [retval0]; 
		st.global.f32 [%r9], %r11; 
		exit; 
}
(0.003832) KernelPartitioningPass.cpp:345:    Spill region size is 88
(0.003846) KernelPartitioningPass.cpp:195:  KernelGraph::_partitionMaximumSize()
(0.003862) KernelPartitioningPass.cpp:479:  Subkernel::create(kernel)
(0.003875) KernelPartitioningPass.cpp:501:  Subkernel::_create(kernel id: 1)
(0.003896) KernelPartitioningPass.cpp:527:  
(0.003907) KernelPartitioningPass.cpp:528:   _analyzeExternalEdges()
(0.003917) KernelPartitioningPass.cpp:538:   adding block entry
(0.003930) KernelPartitioningPass.cpp:538:   adding block exit
(0.003946) KernelPartitioningPass.cpp:538:   adding block $BB_2_0002
(0.003960) KernelPartitioningPass.cpp:538:   adding block $BB_2_0003
(0.003976) KernelPartitioningPass.cpp:538:   adding block $BB_2_0004
(0.003991) KernelPartitioningPass.cpp:591:    - replicating internal edge entry -> $BB_2_0002
(0.004009) KernelPartitioningPass.cpp:591:    - replicating internal edge $BB_2_0002 -> $BB_2_0003
(0.004021) KernelPartitioningPass.cpp:591:    - replicating internal edge $BB_2_0002 -> $BB_2_0004
(0.004034) KernelPartitioningPass.cpp:627:   ENTRY EDGE: entry -> $BB_2_0002
(0.004045) KernelPartitioningPass.cpp:557:    this block exits
(0.004054) KernelPartitioningPass.cpp:591:    - replicating internal edge $BB_2_0003 -> exit
(0.004067) KernelPartitioningPass.cpp:557:    this block exits
(0.004077) KernelPartitioningPass.cpp:591:    - replicating internal edge $BB_2_0004 -> exit
(0.004089) KernelPartitioningPass.cpp:641:  Creating internal edges
(0.004099) KernelPartitioningPass.cpp:646:   looking in block mapping: entry -> $BB_2_0002
(0.004111) KernelPartitioningPass.cpp:663:    adding internal edge: entry -> $BB_2_0002 type: fallthrough
(0.004122) KernelPartitioningPass.cpp:646:   looking in block mapping: $BB_2_0002 -> $BB_2_0003
(0.004132) KernelPartitioningPass.cpp:663:    adding internal edge: $BB_2_0002 -> $BB_2_0003 type: fallthrough
(0.004143) KernelPartitioningPass.cpp:646:   looking in block mapping: $BB_2_0002 -> $BB_2_0004
(0.004153) KernelPartitioningPass.cpp:663:    adding internal edge: $BB_2_0002 -> $BB_2_0004 type: branch
(0.004164) KernelPartitioningPass.cpp:646:   looking in block mapping: $BB_2_0003 -> exit
(0.004174) KernelPartitioningPass.cpp:663:    adding internal edge: $BB_2_0003 -> exit type: branch
(0.004185) KernelPartitioningPass.cpp:646:   looking in block mapping: $BB_2_0004 -> exit
(0.004195) KernelPartitioningPass.cpp:663:    adding internal edge: $BB_2_0004 -> exit type: branch
(0.004207) KernelPartitioningPass.cpp:669:   identifying targets of external IN edges
(0.004216) KernelPartitioningPass.cpp:681:   identifying sources of external OUT edges
(0.004241) KernelPartitioningPass.cpp:350:TestFunctionCall: ocelot/executive/implementation/DynamicTranslationCache.cpp:893: void setupCallTargets(ir::PTXKernel&, const executive::DynamicTranslationCache&): Assertion `0 && "arbitrary function calls not yet supported"' failed.
  Linking external edges
(0.004286) KernelPartitioningPass.cpp:352:    but first!
(0.004296) KernelPartitioningPass.cpp:358:      subkernel _subkernel_kernel_1 out edges: 
(0.004306) KernelPartitioningPass.cpp:364:    and here are all the in_edges:
(0.004393) KernelPartitioningPass.cpp:753:  Subkernel::_createExternalHandlers()
(0.004416) KernelPartitioningPass.cpp:761:    visiting external IN-edges
(0.004427) KernelPartitioningPass.cpp:787:    visiting external OUT-edges
(0.004438) KernelPartitioningPass.cpp:871:  Frontier exit blocks:
(0.004452) KernelPartitioningPass.cpp:926:  end frontier exit blocks:
(0.004502) DynamicTranslationCache.cpp:175:  DynamicTranslationCache::loadModule(ocelot/cuda/test/functions/simpleFunc.cu, device = 0x1b7bee0)
(0.004533) DynamicTranslationCache.cpp:149:  DynamicTranslationCache::registerKernel(kernel)
(0.004554) DynamicTranslationCache.cpp:1138: __translateKernel()
(0.004566) DynamicTranslationCache.cpp:1142: Getting metadata for kernel 'kernel'
(0.004580) DynamicTranslationCache.cpp:918:   Building metadata.
(0.004594) DynamicTranslationCache.cpp:1162:   ---------------------
(0.004603) DynamicTranslationCache.cpp:1163:   translating subkernel _subkernel_kernel_1
(0.004613) DynamicTranslationCache.cpp:1167:    setting up PTX memory references
(0.004623) DynamicTranslationCache.cpp:844:   Setting up memory references for kernel variables.
(0.004636) DynamicTranslationCache.cpp:265:    Setting up argument memory references.
(0.004647) DynamicTranslationCache.cpp:278:     Argument kernel_param_0, offset 0
(0.004658) DynamicTranslationCache.cpp:278:     Argument kernel_param_1, offset 8
(0.004678) DynamicTranslationCache.cpp:304:     For instruction "ld.param.u64 %r0, [kernel_param_0]" mapping "kernel_param_0" to 0
(0.004697) DynamicTranslationCache.cpp:304:     For instruction "ld.param.u32 %r1, [kernel_param_1]" mapping "kernel_param_1" to 8
(0.004708) DynamicTranslationCache.cpp:317:     total argument memory size is 12
(0.004719) DynamicTranslationCache.cpp:327:    Setting up parameter memory references.
(0.004740) DynamicTranslationCache.cpp:350:     For arguments of call instruction 'call.uni (retval0), square, (param0)'
(0.004751) DynamicTranslationCache.cpp:360:      mapping 'retval0' to 0
(0.004761) DynamicTranslationCache.cpp:373:      mapping 'param0' to 4
(0.004779) DynamicTranslationCache.cpp:405:     For instruction "st.param.f32 [param0], %r10" mapping "param0" to 4
(0.004797) DynamicTranslationCache.cpp:405:     For instruction "ld.param.f32 %r11, [retval0]" mapping "retval0" to 0
(0.004808) DynamicTranslationCache.cpp:435:     total parameter memory size is 8
(0.004821) DynamicTranslationCache.cpp:449:    Setting up shared memory references.
(0.004837) DynamicTranslationCache.cpp:558:     Mapping external shared variables.
(0.004848) DynamicTranslationCache.cpp:568:     Total shared memory size is 0.
(0.004860) DynamicTranslationCache.cpp:577:    Setting up constant memory references.
(0.004872) DynamicTranslationCache.cpp:600:     Total constant memory size is 0
(0.004884) DynamicTranslationCache.cpp:642:   Setting up texture memory references.
(0.004895) DynamicTranslationCache.cpp:689:    Setting up local memory references.
(0.004911) DynamicTranslationCache.cpp:797:     Found local local variable _Zocelot_spill_area of size 88
(0.004928) DynamicTranslationCache.cpp:835:     Total local memory size is 96.
(0.004939) DynamicTranslationCache.cpp:1173:    setting up call targets
(0.004948) DynamicTranslationCache.cpp:871:    Setting up targets of call instructions.

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTexture2D 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDeviceSwitching
INFO     Test completed in 492.309775114 seconds
INFO      It produced the following output:
(0.021367) DynamicMulticoreDevice.cpp:55:   DynamicMulticoreDevice()
(0.022883) KernelPartitioningPass.cpp:57:   KernelPartitioningPass::runOnFunction(increment)
(0.022900) KernelPartitioningPass.cpp:69:   partitioning blocks at barriers
(0.022911) KernelPartitioningPass.cpp:103:    encountered 0 barriers
(0.023041) KernelPartitioningPass.cpp:122:   KernelGraph( partitioning with heuristic maximum)
(0.023053) KernelPartitioningPass.cpp:125:  Partitioning kernel increment
/*
* Ocelot Version : 2.1.1735
*/
.entry increment(.param  .u64 memory)
{

	.reg .u64 %r0;
	.reg .u32 %r1;
	.reg .u32 %r2;
	$BB_1_0002:		/*Entry*/ 
		ld.param.u64 %r0, [memory]; 
		ld.global.u32 %r1, [%r0]; 
		add.u32 %r2, %r1, 1; 
		st.global.u32 [%r0], %r2; 
	$BB_1_0003:		/*Exit*/ 
		exit; 
}
(0.023203) KernelPartitioningPass.cpp:345:    Spill region size is 16
(0.023218) KernelPartitioningPass.cpp:195:  KernelGraph::_partitionMaximumSize()
(0.023235) KernelPartitioningPass.cpp:479:  Subkernel::create(increment)
(0.023249) KernelPartitioningPass.cpp:501:  Subkernel::_create(increment id: 1)
(0.023270) KernelPartitioningPass.cpp:527:  
(0.023281) KernelPartitioningPass.cpp:528:   _analyzeExternalEdges()
(0.023291) KernelPartitioningPass.cpp:538:   adding block entry
(0.023305) KernelPartitioningPass.cpp:538:   adding block exit
(0.023319) KernelPartitioningPass.cpp:538:   adding block $BB_1_0002
(0.023332) KernelPartitioningPass.cpp:538:   adding block $BB_1_0003
(0.023346) KernelPartitioningPass.cpp:591:    - replicating internal edge entry -> $BB_1_0002
(0.023365) KernelPartitioningPass.cpp:591:    - replicating internal edge $BB_1_0002 -> $BB_1_0003
(0.023377) KernelPartitioningPass.cpp:627:   ENTRY EDGE: entry -> $BB_1_0002
(0.023389) KernelPartitioningPass.cpp:557:    this block exits
(0.023398) KernelPartitioningPass.cpp:591:    - replicating internal edge $BB_1_0003 -> exit
(0.023411) KernelPartitioningPass.cpp:641:  Creating internal edges
(0.023421) KernelPartitioningPass.cpp:646:   looking in block mapping: entry -> $BB_1_0002
(0.023432) KernelPartitioningPass.cpp:663:    adding internal edge: entry -> $BB_1_0002 type: fallthrough
(0.023444) KernelPartitioningPass.cpp:646:   looking in block mapping: $BB_1_0002 -> $BB_1_0003
(0.023454) KernelPartitioningPass.cpp:663:    adding internal edge: $BB_1_0002 -> $BB_1_0003 type: fallthrough
(0.023466) KernelPartitioningPass.cpp:646:   looking in block mapping: $BB_1_0003 -> exit
(0.023476) KernelPartitioningPass.cpp:663:    adding internal edge: $BB_1_0003 -> exit type: fallthrough
(0.023487) KernelPartitioningPass.cpp:669:   identifying targets of external IN edges
(0.023497) KernelPartitioningPass.cpp:681:   identifying sources of external OUT edges
(0.023524) KernelPartitioningPass.cpp:350:  Linking external edges
(0.023534) KernelPartitioningPass.cpp:352:    but first!
(0.023543) KernelPartitioningPass.cpp:358:      subkernel _subkernel_increment_1 out edges: 
(0.023553) KernelPartitioningPass.cpp:364:    and here are all the in_edges:
(0.023614) KernelPartitioningPass.cpp:753:  Subkernel::_createExternalHandlers()
(0.023635) KernelPartitioningPass.cpp:761:    visiting external IN-edges
(0.023646) KernelPartitioningPass.cpp:787:    visiting external OUT-edges
(0.023658) KernelPartitioningPass.cpp:871:  Frontier exit blocks:
(0.023672) KernelPartitioningPass.cpp:926:  end frontier exit blocks:
(0.023720) DynamicTranslationCache.cpp:175:  DynamicTranslationCache::loadModule(simpleKernels, device = 0x6f5360)
(0.023754) DynamicTranslationCache.cpp:149:  DynamicTranslationCache::registerKernel(increment)
(0.023777) DynamicTranslationCache.cpp:1138: __translateKernel()
(0.023789) DynamicTranslationCache.cpp:1142: Getting metadata for kernel 'increment'
(0.023806) DynamicTranslationCache.cpp:918:   Building metadata.
(0.023820) DynamicTranslationCache.cpp:1162:   ---------------------
(0.023829) DynamicTranslationCache.cpp:1163:   translating subkernel _subkernel_increment_1
(0.023839) DynamicTranslationCache.cpp:1167:    setting up PTX memory references
(0.023849) DynamicTranslationCache.cpp:844:   Set
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTexture2D
INFO     Test completed in 491.902432919 seconds
