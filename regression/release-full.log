INFO     Reading in test file /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/regression/full.level
INFO      Found the following tests:
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLexer
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestParser
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestEmulator
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestInstructions
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestKernels
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDataflowGraph
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMInstructions
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXToLLVMTranslator
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMKernels
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaMalloc
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTexture2D
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTextureArray
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaGlobals
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDeviceSwitching
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaSequence
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCalVectorScale
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXAssembly
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestFunctionCall
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestIndirectFunctionCall
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestExternalFunctions
INFO     ==== INDIVIDUAL TEST RESULTS ====

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDeviceSwitching 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMInstructions 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestFunctionCall 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTexture2D 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMInstructions
INFO     Test completed in 0.0543079376221 seconds
INFO      It produced the following output:
(0.000232) DynamicExecutionManager.cpp:37:   DynamicExecutionManager()
Pass/Fail : Pass


Name : TestLLVMInstructions

Description: A test for the assembly code generation and automatic 
             verfication of individual LLVM instructions. Test Points: 1) For each 
             instruction, generate several assembly strings using the 
             instruction's toString method, make sure that these pass the valid() 
             check, compare to references from the LLVM manual.


Test Seed : 1326212284
Test time : 0.000881433

Status :  Checked instruction "<result> = add i32 4, %var"
Add Instruction Passed
 Checked instruction "%ptr = alloca i32"
 Checked instruction "%ptr = alloca i32, i32 4"
 Checked instruction "%ptr = alloca i32, i32 4, align 1024"
 Checked instruction "%ptr = alloca i32, align 1024"
Alloca Instruction Passed
 Checked instruction "<result> = and i32 4, %var"
 Checked instruction "<result> = and i32 15, 40"
 Checked instruction "<result> = and i32 4, 8"
And Instruction Passed
 Checked instruction "<result> = ashr i32 4, 1"
 Checked instruction "<result> = ashr i8 -2, 1"
 Checked instruction "<result> = ashr < 2 x i32 > < i32 -2, i32 4 >, < i32 1, i32 3 >"
Ashr Instruction Passed
 Checked instruction "%X = bitcast i8 -1 to i8"
 Checked instruction "%Z = bitcast < 2 x i32 > %V to i64"
Bitcast Instruction Passed
 Checked instruction "br i1 %cond, label %IfEqual, label %IfUnequal"
Br Instruction Passed
 Checked instruction "%retval = call i32 @test(i32 %argc)"
 Checked instruction "call i32 (i8*, ...)* @printf(i8* %msg, i32 12, i8 42)"
 Checked instruction "%X = tail call i32 @foo()"
 Checked instruction "%Y = tail call fastcc i32 @foo()"
 Checked instruction "call void @foo(i8 97 signext)"
 Checked instruction "%r = call %struct.A @foo()"
 Checked instruction "call void @foo() noreturn"
 Checked instruction "%ZZ = call zeroext i32 @bar()"
Call Instruction Passed
 Checked instruction "%result = extractelement < 4 x i32 > %vec, i32 0"
Extractelement Instruction Passed
 Checked instruction "%result = extractvalue { i32, float } %agg, 0"
Extractvalue Instruction Passed
 Checked instruction "<result> = fadd float 0x4010000000000000, %var"
Fadd Instruction Passed
 Checked instruction "<result> = fcmp oeq float 0x4010000000000000, 0x4014000000000000"
 Checked instruction "<result> = fcmp one float 0x4010000000000000, 0x4014000000000000"
 Checked instruction "<result> = fcmp olt float 0x4010000000000000, 0x4014000000000000"
 Checked instruction "<result> = fcmp ueq float 0x3ff0000000000000, 0x4000000000000000"
Fcmp Instruction Passed
 Checked instruction "<result> = fdiv float 0x4010000000000000, %var"
Fdiv Instruction Passed
 Checked instruction "<result> = fmul float 0x4010000000000000, %var"
Fmul Instruction Passed
 Checked instruction "%X = fpext float 0x400921cac0000000 to double"
 Checked instruction "%Y = fpext float 0x3ff0000000000000 to float"
Fpext Instruction Passed
 Checked instruction "%X = fptosi double 0xc05ec00000000000 to i32"
Fptosi Instruction Passed
 Checked instruction "%X = fptoui double 0x405ec00000000000 to i32"
Fptoui Instruction Passed
 Checked instruction "%X = fptrunc double 0x405ec00000000000 to float"
Fptrunc Instruction Passed
 Checked instruction "free [ 4 x i8 ]* %array"
Free Instruction Passed
 Checked instruction "<result> = frem float 0x4010000000000000, %var"
Frem Instruction Passed
 Checked instruction "<result> = fsub float 0x0, %val"
Fsub Instruction Passed
 Checked instruction "%vptr = getelementptr { i32, < 2 x i8 > }* %svptr, i32 0, i32 1, i32 1"
 Checked instruction "%eptr = getelementptr [ 12 x i8 ]* %aptr, i32 0, i32 1"
Getelementptr Instruction Passed
 Checked instruction "<result> = icmp ne float* %X, %X"
Icmp Instruction Passed
 Checked instruction "%result = insertelement < 4 x i32 > %vec, i32 1, i32 0"
Insertelement Instruction Passed
 Checked instruction "%result = insertvalue { i32, float } %agg, i32 1, 0"
Insertvalue Instruction Passed
 Checked instruction "%Y = inttoptr i64 0 to i32*"
Inttoptr Instruction Passed
 Checked instruction "%retval = invoke i32 @Test(i32 15) to label %Continue unwind label %TestCleanup"
Invoke Instruction Passed
 Checked instruction "%val = load i32* %ptr"
Load Instruction Passed
 Checked instruction "<result> = lshr i8 -2, 1"
Lshr Instruction Passed
 Checked instruction "%array2 = malloc [ 12 x i8 ], i32 %size"
Malloc Instruction Passed
 Checked instruction "<result> = mul i32 4, %var"
Mul Instruction Passed
 Checked instruction "<result> = or i32 15, 40"
Or Instruction Passed
 Checked instruction "%indvar = phi i32 [ 0, %LoopHeader ], [ %nextindvar, %Loop ]"
Phi Instruction Passed
 Checked instruction "%Y = ptrtoint i32* %x to i64"
Prtoint Instruction Passed
 Checked instruction "ret void"
Ret Instruction Passed
 Checked instruction "<result> = sdiv i32 4, %var"
Sdiv Instruction Passed
 Checked instruction "%X = select i1 1, i8 17, i8 42"
Select Instruction Passed
 Checked instruction "%X = sext i8 -1 to i16"
Sext Instruction Passed
 Checked instruction "<result> = shl i32 1, 32"
Shl Instruction Passed
 Checked instruction "%result = shufflevector < 4 x i32 > %v1, < 4 x i32 > %v2, < 8 x i32 > < i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7 >"
ShuffleVector Instruction Passed
 Checked instruction "%X = sitofp i32 257 to float"
Sitofp Instruction Passed
 Checked instruction "<result> = srem i32 4, %var"
Srem Instruction Passed
 Checked instruction "store i32 3, i32* %ptr"
Store Instruction Passed
 Checked instruction "<result> = sub i32 4, %var"
Sub Instruction Passed
 Checked instruction "switch i32 %val, label %otherwise [ i32 0, label %onzero i32 1, label %onone i32 2, label %ontwo ]"
Switch Instruction Passed
 Checked instruction "%Y = trunc i32 123 to i1"
Trunc Instruction Passed
 Checked instruction "<result> = udiv i32 4, %var"
Udiv Instruction Passed
 Checked instruction "%Y = uitofp i8 -1 to double"
Uitofp Instruction Passed
 Checked instruction "unreachable"
Unreachable Instruction Passed
 Checked instruction "unwind"
Unwind Instruction Passed
 Checked instruction "<result> = urem i32 4, %var"
Urem Instruction Passed
 Checked instruction "%tmp = va_arg i8** %ap, i32"
VarArg Instruction Passed
 Checked instruction "<result> = xor i32 -1, %V"
Xor Instruction Passed
 Checked instruction "%X = zext i32 257 to i64"
Zext Instruction Passed


(0.001440) DynamicExecutionManager.cpp:43:   ~DynamicExecutionManager()

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestInstructions 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDeviceSwitching
INFO     Test completed in 0.0578529834747 seconds
INFO      It produced the following output:
(0.000254) DynamicExecutionManager.cpp:37:   DynamicExecutionManager()
(0.000839) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
Pass/Fail : Pass


Name : TestDeviceSwitching

Description: A unit test for the ability of the CUDA runtime to switch 
             between devices and use multiple threads Test Points: 1) In a single 
             threaded application, iterate across all devices launching the same 
             simple kernel each time 2) Test context migration support in 
             ocelot. Iterate across all devices, launching a simple kernel that 
             updates shared variable. Use the context switch mechanism to 
             migrate the shared data. 3) Test multi-threading support. Launch one 
             host thread to allocate memory, pass pointers to worker 
             threads, each of which should launch independent kernels in 
             parallel.


Test Seed : 1326212284
Test time : 0.000540972

Status : Test Point 1 Passed
Test Point 2 Passed
Test Point 3 Passed


(0.002566) DynamicExecutionManager.cpp:43:   ~DynamicExecutionManager()

INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTexture2D
INFO     Test completed in 0.0557029247284 seconds
INFO      It produced the following output:
(0.000178) DynamicExecutionManager.cpp:37:   DynamicExecutionManager()
(0.000499) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
(0.000791) DynamicMulticoreDevice.cpp:53:   DynamicMulticoreDevice()
(0.002290) DynamicMulticoreDevice.cpp:64:   DynamicMulticoreDevice::load(ocelot/cuda/test/textures/texture2D.cu)
failed to bind texture: cudaErrorInvalidValue
(0.003997) CudaWorkerThread.cpp:133:  CUDAWorker thread is alive, waiting for command.
(0.004014) CudaWorkerThread.cpp:181:  Received kill command, joining.
(0.004030) CudaWorkerThread.cpp:59:   Tearing down CUDA Worker Thread 3
(0.004105) DynamicExecutionManager.cpp:43:   ~DynamicExecutionManager()

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaSequence 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXToLLVMTranslator -i ../tests/ptx 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestFunctionCall
INFO     Test completed in 0.0626850128174 seconds
INFO      It produced the following output:
(0.000192) DynamicExecutionManager.cpp:37:   DynamicExecutionManager()
(0.000504) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
(0.000751) DynamicMulticoreDevice.cpp:53:   DynamicMulticoreDevice()
(0.009321) CudaWorkerThread.cpp:133:  CUDAWorker thread is alive, waiting for command.
(0.009808) DynamicMulticoreDevice.cpp:64:   DynamicMulticoreDevice::load(ocelot/cuda/test/functions/simpleFunc.cu)
(0.009846) CudaWorkerThread.cpp:78:   Launching kernel 'kernel' executing on device 'Ocelot Dynamic Multicore CPU'
(0.009857) CudaWorkerThread.cpp:99:    sending message 0x22ed910
(0.009879) CudaWorkerThread.cpp:109:  Waiting for all kernels to finish executing on device 'Ocelot Dynamic Multicore CPU'
(0.009880) CudaWorkerThread.cpp:138:   Received message 0x22ed910, type 2
(0.009887) CudaWorkerThread.cpp:114:   sending message 0x7fff46e52590
(0.009890) CudaWorkerThread.cpp:157:   Received kernel launch message.
(0.009899) CudaWorkerThread.cpp:191:   Launching kernel 'kernel' now.
(0.009906) DynamicMulticoreDevice.cpp:131:  DynamicMulticoreDevice::launch(ocelot/cuda/test/functions/simpleFunc.cu, kernel)
(0.009915) DynamicMulticoreDevice.cpp:82:   DynamicMulticoreDevice::getKernel(ocelot/cuda/test/functions/simpleFunc.cu, kernel)
(0.009930) DynamicMulticoreKernel.cpp:51:   DynamicMulticoreKernel(kernel, device)
(0.009938) DynamicMulticoreKernel.cpp:66:    partitioning PTX kernel
(0.009947) KernelPartitioningPass.cpp:45:   KernelPartitioningPass::runOnFunction(kernel)
(0.010084) KernelPartitioningPass.cpp:204:    Spill region size is 88
(0.010100) KernelPartitioningPass.cpp:97:   KernelGraph::_partitionMinimumSize()
(0.010110) KernelPartitioningPass.cpp:234:  Subkernel::create(kernel)
(0.010119) KernelPartitioningPass.cpp:257:  Subkernel::_create(kernel)
(0.010144) KernelPartitioningPass.cpp:284:   adding block $BB_2_0002
(0.010162) KernelPartitioningPass.cpp:301:    adding EXTERNAL OUT-Edge $BB_2_0002 -> $BB_2_0003
(0.010173) KernelPartitioningPass.cpp:301:    adding EXTERNAL OUT-Edge $BB_2_0002 -> $BB_2_0004
(0.010181) KernelPartitioningPass.cpp:325:    adding EXTERNAL IN-Edge entry -> $BB_2_0002
(0.010189) KernelPartitioningPass.cpp:331:   creating internal edges
(0.010195) KernelPartitioningPass.cpp:341:   identifying targets of external IN edges
(0.010202) KernelPartitioningPass.cpp:353:   identifying sources of external OUT edges
(0.010224) KernelPartitioningPass.cpp:234:  Subkernel::create(kernel)
(0.010231) KernelPartitioningPass.cpp:257:  Subkernel::_create(kernel)
(0.010243) KernelPartitioningPass.cpp:284:   adding block $BB_2_0003
(0.010253) KernelPartitioningPass.cpp:301:    adding EXTERNAL OUT-Edge $BB_2_0003 -> exit
(0.010262) KernelPartitioningPass.cpp:325:    adding EXTERNAL IN-Edge $BB_2_0002 -> $BB_2_0003
(0.010269) KernelPartitioningPass.cpp:331:   creating internal edges
(0.010276) KernelPartitioningPass.cpp:341:   identifying targets of external IN edges
(0.010283) KernelPartitioningPass.cpp:353:   identifying sources of external OUT edges
(0.010295) KernelPartitioningPass.cpp:234:  Subkernel::create(kernel)
(0.010301) KernelPartitioningPass.cpp:257:  Subkernel::_create(kernel)
(0.010317) KernelPartitioningPass.cpp:284:   adding block $BB_2_0004
(0.010326) KernelPartitioningPass.cpp:301:    adding EXTERNAL OUT-Edge $BB_2_0004 -> exit
(0.010335) KernelPartitioningPass.cpp:325:    adding EXTERNAL IN-Edge $BB_2_0002 -> $BB_2_0004
(0.010342) KernelPartitioningPass.cpp:331:   creating internal edges
(0.010348) KernelPartitioningPass.cpp:341:   identifying targets of external IN edges
(0.010355) KernelPartitioningPass.cpp:353:   identifying sources of external OUT edges
(0.010368) KernelPartitioningPass.cpp:119:  Linking external edges
(0.010375) KernelPartitioningPass.cpp:146:    linking $BB_2_0002_external_out_handler_to_2_0003 to $BB_2_0003_external_in_handler__from_2_0002 (entry 65536)
(0.010382) KernelPartitioningPass.cpp:146:    linking $BB_2_0002_external_out_handler_to_2_0004 to $BB_2_0004_external_in_handler__from_2_0002 (entry 131072)
(0.010389) KernelPartitioningPass.cpp:153:   failed to link external edge: $BB_2_0003 -> exit
(0.010420) KernelPartitioningPass.cpp:153:   failed to link external edge: $BB_2_0004 -> exit
(0.010468) KernelPartitioningPass.cpp:441:  Subkernel::_createExternalHandlers()
(0.010488) KernelPartitioningPass.cpp:449:    visiting external IN-edges
(0.010499) KernelPartitioningPass.cpp:460:      IN-edge: $BB_2_0002_external_in_handler__from_y -> $BB_2_0002 (0 live values
(0.010521) KernelPartitioningPass.cpp:504:    visiting external OUT-edges
(0.010528) KernelPartitioningPass.cpp:516:      OUT-edge: $BB_2_0002 -> $BB_2_0002_external_out_handler_to_2_0003 (2 live values
(0.010538) KernelPartitioningPass.cpp:531:        alive-out: 2 [type: s64]
(0.010554) KernelPartitioningPass.cpp:531:        alive-out: 6 [type: s32]
(0.010577) KernelPartitioningPass.cpp:516:      OUT-edge: $BB_2_0002 -> $BB_2_0002_external_out_handler_to_2_0004 (2 live values
(0.010586) KernelPartitioningPass.cpp:531:        alive-out: 2 [type: s64]
(0.010597) KernelPartitioningPass.cpp:531:        alive-out: 6 [type: s32]
(0.010615) KernelPartitioningPass.cpp:563:  Frontier exit blocks:
(0.010637) KernelPartitioningPass.cpp:573:   block $BB_2_0002 (2 external edges) terminator: @%p7 bra $BB_2_0004
(0.010645) KernelPartitioningPass.cpp:581:   1 external edge, modifying branch target to point to handler
(0.010657) KernelPartitioningPass.cpp:615:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1648
*/
.entry _subkernel_kernel_0(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[88];

	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .pred %p7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	.reg .u32 %r12;
	.reg .u32 %r13;
	$BB_2_0002_external_in_handler__from_y:		// 0 live-in values 
		bra $BB_2_0002; 
	$BB_2_0002:		/**/ 
		ld.param.u64 %r0, [kernel_param_0]; 
		ld.param.u32 %r1, [kernel_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %ntid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		setp.lt.s32 %p7, %r6, %r1; 
		@%p7 bra $BB_2_0002_external_out_handler_to_2_0004; 
	$BB_2_0002_external_out_handler_to_2_0003:		// 2 live-out values 
		mov.s32 %r8, _Zocelot_spill_area; 
		st.local.s64 [%r8 + 16], %r2; 
		st.local.s32 [%r8 + 48], %r6; 
		mov.s32 %r9, _Zocelot_resume_status; 
		st.local.u32 [%r9], 8; 
		mov.s32 %r10, _Zocelot_resume_point; 
		st.local.u32 [%r10], 65536; 
		exit; 
	$BB_2_0002_external_out_handler_to_2_0004:		// 2 live-out values 
		mov.s32 %r11, _Zocelot_spill_area; 
		st.local.s64 [%r11 + 16], %r2; 
		st.local.s32 [%r11 + 48], %r6; 
		mov.s32 %r12, _Zocelot_resume_status; 
		st.local.u32 [%r12], 8; 
		mov.s32 %r13, _Zocelot_resume_point; 
		st.local.u32 [%r13], 131072; 
		exit; 
}
(0.010906) KernelPartitioningPass.cpp:441:  Subkernel::_createExternalHandlers()
(0.010917) KernelPartitioningPass.cpp:449:    visiting external IN-edges
(0.010924) KernelPartitioningPass.cpp:460:      IN-edge: $BB_2_0003_external_in_handler__from_2_0002 -> $BB_2_0003 (2 live values
(0.010936) KernelPartitioningPass.cpp:504:    visiting external OUT-edges
(0.010943) KernelPartitioningPass.cpp:516:      OUT-edge: $BB_2_0003 -> $BB_2_0003_external_out_handler_to_ (0 live values
(0.010959) KernelPartitioningPass.cpp:563:  Frontier exit blocks:
(0.010968) KernelPartitioningPass.cpp:573:   block $BB_2_0003 (1 external edges) terminator: ret
(0.010975) KernelPartitioningPass.cpp:596:   fall-through non-control-flow instruction to external edge: ret
(0.010984) KernelPartitioningPass.cpp:615:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1648
*/
.entry _subkernel_kernel_1(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[88];

	.reg .u32 %r1;
	.reg .u32 %r2;
	$BB_2_0003_external_in_handler__from_2_0002:		// 2 live-in values 
		bra $BB_2_0003; 
	$BB_2_0003:		/**/ 
		ret; 
	$BB_2_0003_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r1, _Zocelot_resume_status; 
		st.local.u32 [%r1], 6; 
		mov.s32 %r2, _Zocelot_resume_point; 
		st.local.u32 [%r2], 0; 
		exit; 
}
(0.011087) KernelPartitioningPass.cpp:441:  Subkernel::_createExternalHandlers()
(0.011099) KernelPartitioningPass.cpp:449:    visiting external IN-edges
(0.011106) KernelPartitioningPass.cpp:460:      IN-edge: $BB_2_0004_external_in_handler__from_2_0002 -> $BB_2_0004 (2 live values
(0.011115) KernelPartitioningPass.cpp:474:        alive-in: 2 [type: s64]
(0.011127) KernelPartitioningPass.cpp:474:        alive-in: 6 [type: s32]
(0.011139) KernelPartitioningPass.cpp:504:    visiting external OUT-edges
(0.011146) KernelPartitioningPass.cpp:516:      OUT-edge: $BB_2_0004 -> $BB_2_0004_external_out_handler_to_ (0 live values
(0.011163) KernelPartitioningPass.cpp:563:  Frontier exit blocks:
(0.011171) KernelPartitioningPass.cpp:573:   block $BB_2_0004 (1 external edges) terminator: ret
(0.011178) KernelPartitioningPass.cpp:596:   fall-through non-control-flow instruction to external edge: ret
(0.011187) KernelPartitioningPass.cpp:615:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1648
*/
.entry _subkernel_kernel_2(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[88];

	.reg .s64 %r8;
	.reg .s32 %r6;
	.reg .s64 %r9;
	.reg .s64 %r2;
	.reg .f32 %r10;
	.reg .f32 %r11;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r12;
	$BB_2_0004_external_in_handler__from_2_0002:		// 2 live-in values 
		mov.s32 %r12, _Zocelot_spill_area; 
		ld.local.s64 %r2, [%r12 + 16]; 
		ld.local.s32 %r6, [%r12 + 48]; 
		bra $BB_2_0004; 
	$BB_2_0004:		/*BB1_2*/ 
		mul.wide.s32 %r8, %r6, 4; 
		add.s64 %r9, %r2, %r8; 
		ld.global.f32 %r10, [%r9]; 
		st.param.f32 [param0], %r10; 
		call.uni (retval0), square, (param0); 
		ld.param.f32 %r11, [retval0]; 
		st.global.f32 [%r9], %r11; 
		ret; 
	$BB_2_0004_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r13, _Zocelot_resume_status; 
		st.local.u32 [%r13], 6; 
		mov.s32 %r14, _Zocelot_resume_point; 
		st.local.u32 [%r14], 0; 
		exit; 
}
(0.011334) ExecutableKernel.cpp:208:  ExecutableKernels::mapArgumentOffsets() - 'kernel' - size: 12 bytes
(0.011350) DynamicMulticoreKernel.cpp:106:  Setting CTA shape to ( x = 32, y = 1, z = 1 ) for kernel "kernel"
(0.011359) ExecutableKernel.cpp:216:  ExecutableKernel::setArgumentBlock() - parameterSize = 12
(0.011366) ExecutableKernel.cpp:208:  ExecutableKernels::mapArgumentOffsets() - 'kernel' - size: 12 bytes
(0.011379) ExecutableKernel.cpp:238:  Configuring parameter kernel_param_0 - offset: 0 - type: 1 x u64 - value: 0x00000000022ed700
(0.011388) ExecutableKernel.cpp:238:  Configuring parameter kernel_param_1 - offset: 8 - type: 1 x u32 - value: 32
(0.011396) DynamicMulticoreKernel.cpp:187:    Allocating argument memory.
(0.011403) DynamicMulticoreKernel.cpp:198:     Allocated argument kernel_param_0 from 0 to 8
(0.011411) DynamicMulticoreKernel.cpp:198:     Allocated argument kernel_param_1 from 8 to 12
(0.011418) DynamicMulticoreKernel.cpp:204:    Allocated 12 for argument memory.
(0.011426) DynamicMulticoreKernel.cpp:214:   Allocating Constant Memory
(0.011433) DynamicMulticoreKernel.cpp:230:     Total constant memory size is 0.
(0.011441) DynamicMulticoreKernel.cpp:149:  Updating Memory
(0.011450) DynamicMulticoreKernel.cpp:92:   Launching kernel "kernel" on grid ( x = 1, y = 1 )
(0.011458) DynamicMulticoreKernel.cpp:93:     shared memory size: 0
(0.011466) DynamicExecutionManager.cpp:53:   DynamicExecutionManager::launch()
(0.011475) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(ocelot/cuda/test/functions/simpleFunc.cu)
(0.011499) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(kernel)
(0.011516) DynamicTranslationCache.cpp:1089: __translateKernel()
(0.011527) DynamicTranslationCache.cpp:1110:   translating subkernel _subkernel_kernel_0
(0.011563)TestFunctionCall: ocelot/executive/implementation/DynamicTranslationCache.cpp:885: void setupCallTargets(ir::PTXKernel&, const executive::DynamicTranslationCache&): Assertion `0 && "arbitrary function calls not yet supported"' failed.
 DynamicTranslationCache.cpp:1123:   Converting from PTX IR to LLVM IR.
(0.013045) DynamicTranslationCache.cpp:1140: translated PTX to LLVM
(0.013742) DynamicTranslationCache.cpp:1110:   translating subkernel _subkernel_kernel_1
(0.013763) DynamicTranslationCache.cpp:1123:   Converting from PTX IR to LLVM IR.
(0.014088) DynamicTranslationCache.cpp:1140: translated PTX to LLVM
(0.014244) DynamicTranslationCache.cpp:1110:   translating subkernel _subkernel_kernel_2

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLexer -i ../tests/ptx 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestInstructions
INFO     Test completed in 0.0516970157623 seconds
INFO      It produced the following output:
(0.000240) DynamicExecutionManager.cpp:37:   DynamicExecutionManager()
(0.002789) ExecutableKernel.cpp:208:  ExecutableKernels::mapArgumentOffsets() - '_Z17k_simple_sequencePi' - size: 4 bytes
(0.003066) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
Pass/Fail : Pass


Name : TestInstructions

Description: 


Test Seed : 1326212284
Test time : 0.000609875

Status : Test output:
Accessors test passed.
pass: load and store instructions
Abs test passed.
pass: arithmetic instructions
pass: exotic arithmetic instructions
pass: floating-point instructions
pass: logical instructions
pass: comparison instructions
pass: predicated Add and Ld isntructions


(0.004179) DynamicExecutionManager.cpp:43:   ~DynamicExecutionManager()

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestIndirectFunctionCall 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXToLLVMTranslator
INFO     Test completed in 0.0672218799591 seconds
INFO      It produced the following output:
(0.000270) DynamicExecutionManager.cpp:37:   DynamicExecutionManager()
Pass/Fail : Pass


Name : TestPTXToLLVMTranslator

Description: This is a basic test that just tries to get through a 
             translation successfully of as many PTX programs as possible Test 
             Points: 1) Scan for all PTX files in a directory, try to 
             translate them.


Test Seed : 1326212284
Test time : 1.28746e-05

Status : 

(0.000639) DynamicExecutionManager.cpp:43:   ~DynamicExecutionManager()

INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLexer
INFO     Test completed in 0.0614061355591 seconds
INFO      It produced the following output:
(0.000270) DynamicExecutionManager.cpp:37:   DynamicExecutionManager()
Pass/Fail : Pass


Name : TestLexer

Description: Tests for the PTX lexer. Test Point 1: Scan a PTX file and 
             write out a temp stream, scan the stream again and make sure that the 
             two sets of tokens match


Test Seed : 1326212284
Test time : 1.78814e-05

Status : 

(0.000639) DynamicExecutionManager.cpp:43:   ~DynamicExecutionManager()

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTextureArray 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestKernels 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaSequence
INFO     Test completed in 0.0877749919891 seconds
INFO      It produced the following output:
(0.000277) DynamicExecutionManager.cpp:37:   DynamicExecutionManager()
(0.000665) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
(0.001002) DynamicMulticoreDevice.cpp:53:   DynamicMulticoreDevice()
sequence() - A_gpu = 0x015e5a00
(0.007930) DynamicMulticoreDevice.cpp:64:   DynamicMulticoreDevice::load(ocelot/cuda/test/kernels/sequence.cu)
(0.008016) CudaWorkerThread.cpp:78:   Launching kernel 'sequence' executing on device 'Ocelot Dynamic Multicore CPU'
(0.008026) CudaWorkerThread.cpp:99:    sending message 0x15e4100
(0.008046) CudaWorkerThread.cpp:109:  Waiting for all kernels to finish executing on device 'Ocelot Dynamic Multicore CPU'
(0.008053) CudaWorkerThread.cpp:114:   sending message 0x7fffefd38680
(0.008078) CudaWorkerThread.cpp:133:  CUDAWorker thread is alive, waiting for command.
(0.008095) CudaWorkerThread.cpp:138:   Received message 0x15e4100, type 2
(0.008102) CudaWorkerThread.cpp:157:   Received kernel launch message.
(0.008111) CudaWorkerThread.cpp:191:   Launching kernel 'sequence' now.
(0.008118) DynamicMulticoreDevice.cpp:131:  DynamicMulticoreDevice::launch(ocelot/cuda/test/kernels/sequence.cu, sequence)
(0.008126) DynamicMulticoreDevice.cpp:82:   DynamicMulticoreDevice::getKernel(ocelot/cuda/test/kernels/sequence.cu, sequence)
(0.008143) DynamicMulticoreKernel.cpp:51:   DynamicMulticoreKernel(kernel, device)
(0.008154) DynamicMulticoreKernel.cpp:66:    partitioning PTX kernel
(0.008164) KernelPartitioningPass.cpp:45:   KernelPartitioningPass::runOnFunction(sequence)
(0.008304) KernelPartitioningPass.cpp:204:    Spill region size is 80
(0.008320) KernelPartitioningPass.cpp:97:   KernelGraph::_partitionMinimumSize()
(0.008330) KernelPartitioningPass.cpp:234:  Subkernel::create(sequence)
(0.008340) KernelPartitioningPass.cpp:257:  Subkernel::_create(sequence)
(0.008367) KernelPartitioningPass.cpp:284:   adding block $BB_1_0002
(0.008384) KernelPartitioningPass.cpp:301:    adding EXTERNAL OUT-Edge $BB_1_0002 -> $BB_1_0003
(0.008395) KernelPartitioningPass.cpp:301:    adding EXTERNAL OUT-Edge $BB_1_0002 -> $BB_1_0004
(0.008404) KernelPartitioningPass.cpp:325:    adding EXTERNAL IN-Edge entry -> $BB_1_0002
(0.008412) KernelPartitioningPass.cpp:331:   creating internal edges
(0.008418) KernelPartitioningPass.cpp:341:   identifying targets of external IN edges
(0.008426) KernelPartitioningPass.cpp:353:   identifying sources of external OUT edges
(0.008446) KernelPartitioningPass.cpp:234:  Subkernel::create(sequence)
(0.008453) KernelPartitioningPass.cpp:257:  Subkernel::_create(sequence)
(0.008466) KernelPartitioningPass.cpp:284:   adding block $BB_1_0003
(0.008474) KernelPartitioningPass.cpp:301:    adding EXTERNAL OUT-Edge $BB_1_0003 -> exit
(0.008483) KernelPartitioningPass.cpp:325:    adding EXTERNAL IN-Edge $BB_1_0002 -> $BB_1_0003
(0.008490) KernelPartitioningPass.cpp:331:   creating internal edges
(0.008496) KernelPartitioningPass.cpp:341:   identifying targets of external IN edges
(0.008503) KernelPartitioningPass.cpp:353:   identifying sources of external OUT edges
(0.008514) KernelPartitioningPass.cpp:234:  Subkernel::create(sequence)
(0.008521) KernelPartitioningPass.cpp:257:  Subkernel::_create(sequence)
(0.008536) KernelPartitioningPass.cpp:284:   adding block $BB_1_0004
(0.008545) KernelPartitioningPass.cpp:301:    adding EXTERNAL OUT-Edge $BB_1_0004 -> exit
(0.008554) KernelPartitioningPass.cpp:325:    adding EXTERNAL IN-Edge $BB_1_0002 -> $BB_1_0004
(0.008561) KernelPartitioningPass.cpp:331:   creating internal edges
(0.008567) KernelPartitioningPass.cpp:341:   identifying targets of external IN edges
(0.008574) KernelPartitioningPass.cpp:353:   identifying sources of external OUT edges
(0.008585) KernelPartitioningPass.cpp:119:  Linking external edges
(0.008593) KernelPartitioningPass.cpp:146:    linking $BB_1_0002_external_out_handler_to_1_0003 to $BB_1_0003_external_in_handler__from_1_0002 (entry 65536)
(0.008600) KernelPartitioningPass.cpp:146:    linking $BB_1_0002_external_out_handler_to_1_0004 to $BB_1_0004_external_in_handler__from_1_0002 (entry 131072)
(0.008607) KernelPartitioningPass.cpp:153:   failed to link external edge: $BB_1_0003 -> exit
(0.008650) KernelPartitioningPass.cpp:153:   failed to link external edge: $BB_1_0004 -> exit
(0.008698) KernelPartitioningPass.cpp:441:  Subkernel::_createExternalHandlers()
(0.008718) KernelPartitioningPass.cpp:449:    visiting external IN-edges
(0.008730) KernelPartitioningPass.cpp:460:      IN-edge: $BB_1_0002_external_in_handler__from_y -> $BB_1_0002 (0 live values
(0.008752) KernelPartitioningPass.cpp:504:    visiting external OUT-edges
(0.008761) KernelPartitioningPass.cpp:516:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_1_0003 (2 live values
(0.008771) KernelPartitioningPass.cpp:531:        alive-out: 2 [type: s64]
(0.008786) KernelPartitioningPass.cpp:531:        alive-out: 6 [type: s32]
(0.008809) KernelPartitioningPass.cpp:516:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_1_0004 (2 live values
(0.008818) KernelPartitioningPass.cpp:531:        alive-out: 2 [type: s64]
(0.008830) KernelPartitioningPass.cpp:531:        alive-out: 6 [type: s32]
(0.008848) KernelPartitioningPass.cpp:563:  Frontier exit blocks:
(0.008870) KernelPartitioningPass.cpp:573:   block $BB_1_0002 (2 external edges) terminator: @%p7 bra $BB_1_0004
(0.008878) KernelPartitioningPass.cpp:581:   1 external edge, modifying branch target to point to handler
(0.008889) KernelPartitioningPass.cpp:615:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1648
*/
.entry _subkernel_sequence_0(.param  .u64 sequence_param_0,
		.param  .u32 sequence_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[80];

	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .pred %p7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	.reg .u32 %r12;
	.reg .u32 %r13;
	$BB_1_0002_external_in_handler__from_y:		// 0 live-in values 
		bra $BB_1_0002; 
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [sequence_param_0]; 
		ld.param.u32 %r1, [sequence_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ntid.x; 
		mov.u32 %r4, %ctaid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		setp.lt.s32 %p7, %r6, %r1; 
		@%p7 bra $BB_1_0002_external_out_handler_to_1_0004; 
	$BB_1_0002_external_out_handler_to_1_0003:		// 2 live-out values 
		mov.s32 %r8, _Zocelot_spill_area; 
		st.local.s64 [%r8 + 16], %r2; 
		st.local.s32 [%r8 + 48], %r6; 
		mov.s32 %r9, _Zocelot_resume_status; 
		st.local.u32 [%r9], 8; 
		mov.s32 %r10, _Zocelot_resume_point; 
		st.local.u32 [%r10], 65536; 
		exit; 
	$BB_1_0002_external_out_handler_to_1_0004:		// 2 live-out values 
		mov.s32 %r11, _Zocelot_spill_area; 
		st.local.s64 [%r11 + 16], %r2; 
		st.local.s32 [%r11 + 48], %r6; 
		mov.s32 %r12, _Zocelot_resume_status; 
		st.local.u32 [%r12], 8; 
		mov.s32 %r13, _Zocelot_resume_point; 
		st.local.u32 [%r13], 131072; 
		exit; 
}
(0.009140) KernelPartitioningPass.cpp:441:  Subkernel::_createExternalHandlers()
(0.009151) KernelPartitioningPass.cpp:449:    visiting external IN-edges
(0.009158) KernelPartitioningPass.cpp:460:      IN-edge: $BB_1_0003_external_in_handler__from_1_0002 -> $BB_1_0003 (2 live values
(0.009171) KernelPartitioningPass.cpp:504:    visiting external OUT-edges
(0.009179) KernelPartitioningPass.cpp:516:      OUT-edge: $BB_1_0003 -> $BB_1_0003_external_out_handler_to_ (0 live values
(0.009195) KernelPartitioningPass.cpp:563:  Frontier exit blocks:
(0.009205) KernelPartitioningPass.cpp:573:   block $BB_1_0003 (1 external edges) terminator: ret
(0.009213) KernelPartitioningPass.cpp:596:   fall-through non-control-flow instruction to external edge: ret
(0.009221) KernelPartitioningPass.cpp:615:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1648
*/
.entry _subkernel_sequence_1(.param  .u64 sequence_param_0,
		.param  .u32 sequence_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[80];

	.reg .u32 %r1;
	.reg .u32 %r2;
	$BB_1_0003_external_in_handler__from_1_0002:		// 2 live-in values 
		bra $BB_1_0003; 
	$BB_1_0003:		/**/ 
		ret; 
	$BB_1_0003_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r1, _Zocelot_resume_status; 
		st.local.u32 [%r1], 6; 
		mov.s32 %r2, _Zocelot_resume_point; 
		st.local.u32 [%r2], 0; 
		exit; 
}
(0.009330) KernelPartitioningPass.cpp:441:  Subkernel::_createExternalHandlers()
(0.009341) KernelPartitioningPass.cpp:449:    visiting external IN-edges
(0.009348) KernelPartitioningPass.cpp:460:      IN-edge: $BB_1_0004_external_in_handler__from_1_0002 -> $BB_1_0004 (2 live values
(0.009357) KernelPartitioningPass.cpp:474:        alive-in: 2 [type: s64]
(0.009369) KernelPartitioningPass.cpp:474:        alive-in: 6 [type: s32]
(0.009382) KernelPartitioningPass.cpp:504:    visiting external OUT-edges
(0.009389) KernelPartitioningPass.cpp:516:      OUT-edge: $BB_1_0004 -> $BB_1_0004_external_out_handler_to_ (0 live values
(0.009406) KernelPartitioningPass.cpp:563:  Frontier exit blocks:
(0.009413) KernelPartitioningPass.cpp:573:   block $BB_1_0004 (1 external edges) terminator: ret
(0.009420) KernelPartitioningPass.cpp:596:   fall-through non-control-flow instruction to external edge: ret
(0.009429) KernelPartitioningPass.cpp:615:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1648
*/
.entry _subkernel_sequence_2(.param  .u64 sequence_param_0,
		.param  .u32 sequence_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[80];

	.reg .s32 %r8;
	.reg .s32 %r6;
	.reg .s64 %r9;
	.reg .s64 %r10;
	.reg .s64 %r2;
	.reg .u32 %r12;
	.reg .u32 %r13;
	.reg .u32 %r11;
	$BB_1_0004_external_in_handler__from_1_0002:		// 2 live-in values 
		mov.s32 %r11, _Zocelot_spill_area; 
		ld.local.s64 %r2, [%r11 + 16]; 
		ld.local.s32 %r6, [%r11 + 48]; 
		bra $BB_1_0004; 
	$BB_1_0004:		/*BB0_2*/ 
		shl.b32 %r8, %r6, 1; 
		mul.wide.s32 %r9, %r6, 4; 
		add.s64 %r10, %r2, %r9; 
		st.global.u32 [%r10], %r8; 
		ret; 
	$BB_1_0004_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r12, _Zocelot_resume_status; 
		st.local.u32 [%r12], 6; 
		mov.s32 %r13, _Zocelot_resume_point; 
		st.local.u32 [%r13], 0; 
		exit; 
}
(0.009557) ExecutableKernel.cpp:208:  ExecutableKernels::mapArgumentOffsets() - 'sequence' - size: 12 bytes
(0.009573) DynamicMulticoreKernel.cpp:106:  Setting CTA shape to ( x = 4, y = 1, z = 1 ) for kernel "sequence"
(0.009583) ExecutableKernel.cpp:216:  ExecutableKernel::setArgumentBlock() - parameterSize = 12
(0.009589) ExecutableKernel.cpp:208:  ExecutableKernels::mapArgumentOffsets() - 'sequence' - size: 12 bytes
(0.009601) ExecutableKernel.cpp:238:  Configuring parameter sequence_param_0 - offset: 0 - type: 1 x u64 - value: 0x00000000015e5a00
(0.009611) ExecutableKernel.cpp:238:  Configuring parameter sequence_param_1 - offset: 8 - type: 1 x u32 - value: 4
(0.009620) DynamicMulticoreKernel.cpp:187:    Allocating argument memory.
(0.009627) DynamicMulticoreKernel.cpp:198:     Allocated argument sequence_param_0 from 0 to 8
(0.009635) DynamicMulticoreKernel.cpp:198:     Allocated argument sequence_param_1 from 8 to 12
(0.009642) DynamicMulticoreKernel.cpp:204:    Allocated 12 for argument memory.
(0.009650) DynamicMulticoreKernel.cpp:214:   Allocating Constant Memory
(0.009658) DynamicMulticoreKernel.cpp:230:     Total constant memory size is 0.
(0.009666) DynamicMulticoreKernel.cpp:149:  Updating Memory
(0.009675) DynamicMulticoreKernel.cpp:92:   Launching kernel "sequence" on grid ( x = 1, y = 1 )
(0.009683) DynamicMulticoreKernel.cpp:93:     shared memory size: 0
(0.009691) DynamicExecutionManager.cpp:53:   DynamicExecutionManager::launch()
(0.009701) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(ocelot/cuda/test/kernels/sequence.cu)
(0.009724) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(sequence)
(0.009740) DynamicTranslationCache.cpp:1089: __translateKernel()
(0.009751) DynamicTranslationCache.cpp:1110:   translating subkernel _subkernel_sequence_0
(0.009786) DynamicTranslationCache.cpp:1123:   Converting from PTX IR to LLVM IR.
(0.011059) DynamicTranslationCache.cpp:1140: translated PTX to LLVM
(0.011705) DynamicTranslationCache.cpp:1110:   translating subkernel _subkernel_sequence_1
(0.011727) DynamicTranslationCache.cpp:1123:   Converting from PTX IR to LLVM IR.
(0.012056) DynamicTranslationCache.cpp:1140: translated PTX to LLVM
(0.012209) DynamicTranslationCache.cpp:1110:   translating subkernel _subkernel_sequence_2
(0.012229) DynamicTranslationCache.cpp:1123:   Converting from PTX IR to LLVM IR.
(0.012792) DynamicTranslationCache.cpp:1140: translated PTX to LLVM
(0.013011) DynamicTranslationCache.cpp:1189:  _translateKernel('sequence') complete for 3 subkernels
(0.013020) DynamicTranslationCache.cpp:148:    registered new kernel
(0.013031) DynamicMulticoreExecutive.cpp:106:  DynamicMulticoreExecutve('sequence', shared mem size: 0
(0.013041) DynamicMulticoreExecutive.cpp:107:    localMemorySize: 88
(0.013048) DynamicMulticoreExecutive.cpp:108:    paramMemorySize: 0
(0.013055) DynamicExecutionManager.cpp:66:   Executing block 0, 0
(0.013062) DynamicMulticoreExecutive.cpp:146:  DynamicMulticoreExecutive::execute(0, 0) kernel: 'sequence' for CTA size 4 threads
(0.013074) DynamicTranslationCache.cpp:108:   DynamicTranslationCache::getOrInsertTranslation(ws: 1, skId: 0, specialization = 0)
(0.013083) DynamicTranslationCache.cpp:1200: _specializeTranslation()
(0.013090) DynamicTranslationCache.cpp:1210:   cloning and optimizing
(0.014733) DynamicTranslationCache.cpp:983:  Overriding optimization level
(0.016315) DynamicTranslationCache.cpp:1055: performed transformations
(0.016371) DynamicTranslationCache.cpp:1219:   JIT compiling
(0.018288) DynamicTranslationCache.cpp:1230:   verifying
(0.018470) DynamicTranslationCache.cpp:1242: Specialized and optimized LLVM function:

define internal void @_subkernel_sequence_0_opt0_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
"$BB_1_0002":
  %rt0 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt1 = load i8** %rt0, align 8
  %rt2 = bitcast i8* %rt1 to i64*
  %r0 = load i64* %rt2, align 8
  %rt3 = getelementptr i8* %rt1, i64 8
  %rt6 = bitcast i8* %rt3 to i32*
  %r1 = load i32* %rt6, align 4
  %rt7 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 1, i32 0
  %rt8 = load i32* %rt7, align 4
  %rt9 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 2, i32 0
  %rt10 = load i32* %rt9, align 4
  %rt111 = bitcast %LLVMContext* %__ctaContext to i32*
  %rt12 = load i32* %rt111, align 4
  %rt13 = mul i32 %rt10, %rt8
  %r6 = add i32 %rt12, %rt13
  %r7 = icmp slt i32 %r6, %r1
  %rt42 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt43 = load i8** %rt42, align 8
  %rt44 = ptrtoint i8* %rt43 to i64
  %rt45 = add i64 %rt44, 24
  %rt46 = inttoptr i64 %rt45 to i64*
  store i64 %r0, i64* %rt46, align 8
  %rt50 = load i8** %rt42, align 8
  %rt51 = ptrtoint i8* %rt50 to i64
  %rt52 = add i64 %rt51, 56
  %rt53 = inttoptr i64 %rt52 to i32*
  store i32 %r6, i32* %rt53, align 4
  %rt56 = load i8** %rt42, align 8
  %rt57 = ptrtoint i8* %rt56 to i64
  %rt58 = add i64 %rt57, 4
  %rt59 = inttoptr i64 %rt58 to i32*
  store i32 8, i32* %rt59, align 4
  %rt62 = load i8** %rt42, align 8
  %rt65 = bitcast i8* %rt62 to i32*
  %. = select i1 %r7, i32 131072, i32 65536
  store i32 %., i32* %rt65, align 4
  ret void
}

(0.018478) DynamicTranslationCache.cpp:1245:   updating translation cache data structures
(0.018492) DynamicTranslationCache.cpp:1257:   _specializeTranslation() complete
(0.018499) DynamicTranslationCache.cpp:126:    inserted in translation cache
(0.018506) DynamicMulticoreExecutive.cpp:175:  --------------
(0.018512) DynamicMulticoreExecutive.cpp:176:    executing thread 0
(0.018521) DynamicMulticoreExecutive.cpp:186:    encoded resume point: 0
(0.018527) DynamicMulticoreExecutive.cpp:187:    mapped subkernel ID: 0
(0.018533) DynamicMulticoreExecutive.cpp:188:    fetching translation (warp size: 1)
(0.018540) DynamicTranslationCache.cpp:108:   DynamicTranslationCache::getOrInsertTranslation(ws: 1, skId: 0, specialization = 0)
(0.018548) DynamicTranslationCache.cpp:117:    found in translation cache
(0.018594) DynamicMulticoreExecutive.cpp:196:    executing subkernel
(0.018602) DynamicMulticoreExecutive.cpp:201:  Local memory: 
[offset:   0]: 0x00020000  [resume point]
[offset:   4]: 0x00000008  [resume status]
[offset:   8]: 0x00000000  [spill area]
[offset:  12]: 0x00000000
[offset:  16]: 0x00000000
[offset:  20]: 0x00000000
[offset:  24]: 0x01605630
[offset:  28]: 0x00000000
[offset:  32]: 0x00000000
[offset:  36]: 0x00000000
[offset:  40]: 0x00000000
[offset:  44]: 0x00000000
[offset:  48]: 0x00000000
[offset:  52]: 0x00000000
[offset:  56]: 0x00000000
[offset:  60]: 0x00000000
[offset:  64]: 0x00000000
[offset:  68]: 0x00000000
[offset:  72]: 0x00000000
[offset:  76]: 0x00000000
[offset:  80]: 0x00000000
[offset:  84]: 0x00000000
(0.018621) DynamicMulticoreExecutive.cpp:207:    thread 0 exited with code 8 and resume point: 131072
(0.018628) DynamicMulticoreExecutive.cpp:175:  --------------
(0.018634) DynamicMulticoreExecutive.cpp:176:    executing thread 0
(0.018640) DynamicMulticoreExecutive.cpp:186:    encoded resume point: 131072
(0.018645) DynamicMulticoreExecutive.cpp:187:    mapped subkernel ID: 2
(0.018651) DynamicMulticoreExecutive.cpp:188:    fetching translation (warp size: 1)
(0.018658) DynamicTranslationCache.cpp:108:   DynamicTranslationCache::getOrInsertTranslation(ws: 1, skId: 2, specialization = 0)
(0.018665) DynamicTranslationCache.cpp:1200: _specializeTranslation()
(0.018672) DynamicTranslationCache.cpp:1210:   cloning and optimizing
(0.018757) DynamicTranslationCache.cpp:983:  Overriding optimization level
(0.019595) DynamicTranslationCache.cpp:1055: performed transformations
(0.019637) DynamicTranslationCache.cpp:1219:   JIT compiling
(0.020319) DynamicTranslationCache.cpp:1230:   verifying
(0.020454) DynamicTranslationCache.cpp:1242: Specialized and optimized LLVM function:

define internal void @_subkernel_sequence_2_opt0_ws1(%LLVMContext.2* %__ctaContext) nounwind align 1 {
exit:
  %rt2 = getelementptr %LLVMContext.2* %__ctaContext, i64 0, i32 4
  %rt3 = load i8** %rt2, align 8
  %rt11 = ptrtoint i8* %rt3 to i64
  %rt12 = add i64 %rt11, 56
  %rt13 = inttoptr i64 %rt12 to i32*
  %r2 = load i32* %rt13, align 4
  %rt5 = add i64 %rt11, 24
  %rt6 = inttoptr i64 %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %r5 = shl i32 %r2, 1
  %rt14 = sext i32 %r2 to i64
  %r6 = shl nsw i64 %rt14, 2
  %r7 = add i64 %r6, %r1
  %rt15 = inttoptr i64 %r7 to i32*
  store i32 %r5, i32* %rt15, align 4
  %rt17 = load i8** %rt2, align 8
  %rt18 = bitcast i8* %rt17 to i32*
  store i32 2, i32* %rt18, align 4
  %rt21 = load i8** %rt2, align 8
  %rt22 = ptrtoint i8* %rt21 to i64
  %rt23 = add i64 %rt22, 4
  %rt24 = inttoptr i64 %rt23 to i32*
  store i32 6, i32* %rt24, align 4
  %rt27 = load i8** %rt2, align 8
  %rt30 = bitcast i8* %rt27 to i32*
  store i32 0, i32* %rt30, align 4
  ret void
}

(0.020462) DynamicTranslationCache.cpp:1245:   updating translation cache data structures
(0.020470) DynamicTranslationCache.cpp:1257:   _specializeTranslation() complete
(0.020477) DynamicTranslationCache.cpp:126:    inserted in translation cache
(0.020483) DynamicMulticoreExecutive.cpp:196:    executing subkernel
(0.020489) DynamicMulticoreExecutive.cpp:201:  Local memory: 
[offset:   0]: 0x00000000  [resume point]
[offset:   4]: 0x00000006  [resume status]
[offset:   8]: 0x00000000  [spill area]
[offset:  12]: 0x00000000
[offset:  16]: 0x00000000
[offset:  20]: 0x00000000
[offset:  24]: 0x01605630
[offset:  28]: 0x00000000
[offset:  32]: 0x00000000
[offset:  36]: 0x00000000
[offset:  40]: 0x00000000
[offset:  44]: 0x00000000
[offset:  48]: 0x00000000
[offset:  52]: 0x00000000
[offset:  56]: 0x00000000
[offset:  60]: 0x00000000
[offset:  64]: 0x00000000
[offset:  68]: 0x00000000
[offset:  72]: 0x00000000
[offset:  76]: 0x00000000
[offset:  80]: 0x00000000
[offset:  84]: 0x00000000
(0.020506) DynamicMulticoreExecutive.cpp:207:    thread 0 exited with code 6 and resume point: 0
(0.020514) DynamicMulticoreExecutive.cpp:175:  --------------
(0.020519) DynamicMulticoreExecutive.cpp:176:    executing thread 0
(0.020541) DynamicMulticoreExecutive.cpp:175:  --------------
(0.020548) DynamicMulticoreExecutive.cpp:176:    executing thread 1
(0.020554) DynamicMulticoreExecutive.cpp:186:    encoded resume point: 0
(0.020560) DynamicMulticoreExecutive.cpp:187:    mapped subkernel ID: 0
(0.020566) DynamicMulticoreExecutive.cpp:188:    fetching translation (warp size: 1)
(0.020572) DynamicTranslationCache.cpp:108:   DynamicTranslationCache::getOrInsertTranslation(ws: 1, skId: 0, specialization = 0)
(0.020579) DynamicTranslationCache.cpp:117:    found in translation cache
(0.020585) DynamicMulticoreExecutive.cpp:196:    executing subkernel
(0.020591) DynamicMulticoreExecutive.cpp:201:  Local memory: 
[offset:   0]: 0x00020000  [resume point]
[offset:   4]: 0x00000008  [resume status]
[offset:   8]: 0x00000000  [spill area]
[offset:  12]: 0x00000000
[offset:  16]: 0x00000000
[offset:  20]: 0x00000000
[offset:  24]: 0x01605630
[offset:  28]: 0x00000000
[offset:  32]: 0x00000000
[offset:  36]: 0x00000000
[offset:  40]: 0x00000000
[offset:  44]: 0x00000000
[offset:  48]: 0x00000000
[offset:  52]: 0x00000000
[offset:  56]: 0x00000001
[offset:  60]: 0x00000000
[offset:  64]: 0x00000000
[offset:  68]: 0x00000000
[offset:  72]: 0x00000000
[offset:  76]: 0x00000000
[offset:  80]: 0x00000000
[offset:  84]: 0x00000000
(0.020608) DynamicMulticoreExecutive.cpp:207:    thread 0 exited with code 8 and resume point: 131072
(0.020614) DynamicMulticoreExecutive.cpp:175:  --------------
(0.020620) DynamicMulticoreExecutive.cpp:176:    executing thread 1
(0.020627) DynamicMulticoreExecutive.cpp:186:    encoded resume point: 131072
(0.020633) DynamicMulticoreExecutive.cpp:187:    mapped subkernel ID: 2
(0.020638) DynamicMulticoreExecutive.cpp:188:    fetching translation (warp size: 1)
(0.020645) DynamicTranslationCache.cpp:108:   DynamicTranslationCache::getOrInsertTranslation(ws: 1, skId: 2, specialization = 0)
(0.020651) DynamicTranslationCache.cpp:117:    found in translation cache
(0.020657) DynamicMulticoreExecutive.cpp:196:    executing subkernel
(0.020663) DynamicMulticoreExecutive.cpp:201:  Local memory: 
[offset:   0]: 0x00000000  [resume point]
[offset:   4]: 0x00000006  [resume status]
[offset:   8]: 0x00000000  [spill area]
[offset:  12]: 0x00000000
[offset:  16]: 0x00000000
[offset:  20]: 0x00000000
[offset:  24]: 0x01605630
[offset:  28]: 0x00000000
[offset:  32]: 0x00000000
[offset:  36]: 0x00000000
[offset:  40]: 0x00000000
[offset:  44]: 0x00000000
[offset:  48]: 0x00000000
[offset:  52]: 0x00000000
[offset:  56]: 0x00000001
[offset:  60]: 0x00000000
[offset:  64]: 0x00000000
[offset:  68]: 0x00000000
[offset:  72]: 0x00000000
[offset:  76]: 0x00000000
[offset:  80]: 0x00000000
[offset:  84]: 0x00000000
(0.020680) DynamicMulticoreExecutive.cpp:207:    thread 0 exited with code 6 and resume point: 0
(0.020686) DynamicMulticoreExecutive.cpp:175:  --------------
(0.020692) DynamicMulticoreExecutive.cpp:176:    executing thread 1
(0.020698) DynamicMulticoreExecutive.cpp:175:  --------------
(0.020704) DynamicMulticoreExecutive.cpp:176:    executing thread 2
(0.020710) DynamicMulticoreExecutive.cpp:186:    encoded resume point: 0
(0.020716) DynamicMulticoreExecutive.cpp:187:    mapped subkernel ID: 0
(0.020722) DynamicMulticoreExecutive.cpp:188:    fetching translation (warp size: 1)
(0.020728) DynamicTranslationCache.cpp:108:   DynamicTranslationCache::getOrInsertTranslation(ws: 1, skId: 0, specialization = 0)
(0.020735) DynamicTranslationCache.cpp:117:    found in translation cache
(0.020741) DynamicMulticoreExecutive.cpp:196:    executing subkernel
(0.020746) DynamicMulticoreExecutive.cpp:201:  Local memory: 
[offset:   0]: 0x00020000  [resume point]
[offset:   4]: 0x00000008  [resume status]
[offset:   8]: 0x00000000  [spill area]
[offset:  12]: 0x00000000
[offset:  16]: 0x00000000
[offset:  20]: 0x00000000
[offset:  24]: 0x01605630
[offset:  28]: 0x00000000
[offset:  32]: 0x00000000
[offset:  36]: 0x00000000
[offset:  40]: 0x00000000
[offset:  44]: 0x00000000
[offset:  48]: 0x00000000
[offset:  52]: 0x00000000
[offset:  56]: 0x00000002
[offset:  60]: 0x00000000
[offset:  64]: 0x00000000
[offset:  68]: 0x00000000
[offset:  72]: 0x00000000
[offset:  76]: 0x00000000
[offset:  80]: 0x00000000
[offset:  84]: 0x00000000
(0.020772) DynamicMulticoreExecutive.cpp:207:    thread 0 exited with code 8 and resume point: 131072
(0.020780) DynamicMulticoreExecutive.cpp:175:  --------------
(0.020786) DynamicMulticoreExecutive.cpp:176:    executing thread 2
(0.020792) DynamicMulticoreExecutive.cpp:186:    encoded resume point: 131072
(0.020797) DynamicMulticoreExecutive.cpp:187:    mapped subkernel ID: 2
(0.020803) DynamicMulticoreExecutive.cpp:188:    fetching translation (warp size: 1)
(0.020810) DynamicTranslationCache.cpp:108:   DynamicTranslationCache::getOrInsertTranslation(ws: 1, skId: 2, specialization = 0)
(0.020817) DynamicTranslationCache.cpp:117:    found in translation cache
(0.020822) DynamicMulticoreExecutive.cpp:196:    executing subkernel
(0.020828) DynamicMulticoreExecutive.cpp:201:  Local memory: 
[offset:   0]: 0x00000000  [resume point]
[offset:   4]: 0x00000006  [resume status]
[offset:   8]: 0x00000000  [spill area]
[offset:  12]: 0x00000000
[offset:  16]: 0x00000000
[offset:  20]: 0x00000000
[offset:  24]: 0x01605630
[offset:  28]: 0x00000000
[offset:  32]: 0x00000000
[offset:  36]: 0x00000000
[offset:  40]: 0x00000000
[offset:  44]: 0x00000000
[offset:  48]: 0x00000000
[offset:  52]: 0x00000000
[offset:  56]: 0x00000002
[offset:  60]: 0x00000000
[offset:  64]: 0x00000000
[offset:  68]: 0x00000000
[offset:  72]: 0x00000000
[offset:  76]: 0x00000000
[offset:  80]: 0x00000000
[offset:  84]: 0x00000000
(0.020845) DynamicMulticoreExecutive.cpp:207:    thread 0 exited with code 6 and resume point: 0
(0.020851) DynamicMulticoreExecutive.cpp:175:  --------------
(0.020857) DynamicMulticoreExecutive.cpp:176:    executing thread 2
(0.020863) DynamicMulticoreExecutive.cpp:175:  --------------
(0.020869) DynamicMulticoreExecutive.cpp:176:    executing thread 3
(0.020875) DynamicMulticoreExecutive.cpp:186:    encoded resume point: 0
(0.020881) DynamicMulticoreExecutive.cpp:187:    mapped subkernel ID: 0
(0.020886) DynamicMulticoreExecutive.cpp:188:    fetching translation (warp size: 1)
(0.020893) DynamicTranslationCache.cpp:108:   DynamicTranslationCache::getOrInsertTranslation(ws: 1, skId: 0, specialization = 0)
(0.020900) DynamicTranslationCache.cpp:117:    found in translation cache
(0.020905) DynamicMulticoreExecutive.cpp:196:    executing subkernel
(0.020911) DynamicMulticoreExecutive.cpp:201:  Local memory: 
[offset:   0]: 0x00010000  [resume point]
[offset:   4]: 0x00000008  [resume status]
[offset:   8]: 0x00000000  [spill area]
[offset:  12]: 0x00000000
[offset:  16]: 0x00000000
[offset:  20]: 0x00000000
[offset:  24]: 0x01605630
[offset:  28]: 0x00000000
[offset:  32]: 0x00000000
[offset:  36]: 0x00000000
[offset:  40]: 0x00000000
[offset:  44]: 0x00000000
[offset:  48]: 0x00000000
[offset:  52]: 0x00000000
[offset:  56]: 0x00000003
[offset:  60]: 0x00000000
[offset:  64]: 0x00000000
[offset:  68]: 0x00000000
[offset:  72]: 0x00000000
[offset:  76]: 0x00000000
[offset:  80]: 0x00000000
[offset:  84]: 0x00000000
(0.020928) DynamicMulticoreExecutive.cpp:207:    thread 0 exited with code 8 and resume point: 65536
(0.020934) DynamicMulticoreExecutive.cpp:175:  --------------
(0.020940) DynamicMulticoreExecutive.cpp:176:    executing thread 3
(0.020946) DynamicMulticoreExecutive.cpp:186:    encoded resume point: 65536
(0.020952) DynamicMulticoreExecutive.cpp:187:    mapped subkernel ID: 1
(0.020957) DynamicMulticoreExecutive.cpp:188:    fetching translation (warp size: 1)
(0.020964) DynamicTranslationCache.cpp:108:   DynamicTranslationCache::getOrInsertTranslation(ws: 1, skId: 1, specialization = 0)
(0.020971) DynamicTranslationCache.cpp:1200: _specializeTranslation()
(0.020977) DynamicTranslationCache.cpp:1210:   cloning and optimizing
(0.021024) DynamicTranslationCache.cpp:983:  Overriding optimization level
(0.021469) DynamicTranslationCache.cpp:1055: performed transformations
(0.021509) DynamicTranslationCache.cpp:1219:   JIT compiling
(0.021979) DynamicTranslationCache.cpp:1230:   verifying
(0.022127) DynamicTranslationCache.cpp:1242: Specialized and optimized LLVM function:

define internal void @_subkernel_sequence_1_opt0_ws1(%LLVMContext.0* %__ctaContext) nounwind align 1 {
exit:
  %rt0 = getelementptr %LLVMContext.0* %__ctaContext, i64 0, i32 4
  %rt1 = load i8** %rt0, align 8
  %rt2 = bitcast i8* %rt1 to i32*
  store i32 2, i32* %rt2, align 4
  %rt5 = load i8** %rt0, align 8
  %rt6 = ptrtoint i8* %rt5 to i64
  %rt7 = add i64 %rt6, 4
  %rt8 = inttoptr i64 %rt7 to i32*
  store i32 6, i32* %rt8, align 4
  %rt11 = load i8** %rt0, align 8
  %rt14 = bitcast i8* %rt11 to i32*
  store i32 0, i32* %rt14, align 4
  ret void
}

(0.022135) DynamicTranslationCache.cpp:1245:   updating translation cache data structures
(0.022143) DynamicTranslationCache.cpp:1257:   _specializeTranslation() complete
(0.022149) DynamicTranslationCache.cpp:126:    inserted in translation cache
(0.022155) DynamicMulticoreExecutive.cpp:196:    executing subkernel
(0.022161) DynamicMulticoreExecutive.cpp:201:  Local memory: 
[offset:   0]: 0x00000000  [resume point]
[offset:   4]: 0x00000006  [resume status]
[offset:   8]: 0x00000000  [spill area]
[offset:  12]: 0x00000000
[offset:  16]: 0x00000000
[offset:  20]: 0x00000000
[offset:  24]: 0x01605630
[offset:  28]: 0x00000000
[offset:  32]: 0x00000000
[offset:  36]: 0x00000000
[offset:  40]: 0x00000000
[offset:  44]: 0x00000000
[offset:  48]: 0x00000000
[offset:  52]: 0x00000000
[offset:  56]: 0x00000003
[offset:  60]: 0x00000000
[offset:  64]: 0x00000000
[offset:  68]: 0x00000000
[offset:  72]: 0x00000000
[offset:  76]: 0x00000000
[offset:  80]: 0x00000000
[offset:  84]: 0x00000000
(0.022178) DynamicMulticoreExecutive.cpp:207:    thread 0 exited with code 6 and resume point: 0
(0.022185) DynamicMulticoreExecutive.cpp:175:  --------------
(0.022191) DynamicMulticoreExecutive.cpp:176:    executing thread 3
(0.022197) DynamicMulticoreExecutive.cpp:235:  completed DynamicMulticoreExecutive::execute(0, 0) kernel: 'sequence'
(0.022209) CudaWorkerThread.cpp:199:    kernel 'sequence' finished.
(0.022218) CudaWorkerThread.cpp:138:   Received message 0x7fffefd38680, type 1
(0.022226) CudaWorkerThread.cpp:146:   Waiting for all kernels to finish  on thread 3.
(0.022252) CudaWorkerThread.cpp:120:   received ack message 0x7fffefd38680
ERROR 1 [0] - expected: 0, got: -1
ERROR 1 [1] - expected: 2, got: -1
ERROR 1 [2] - expected: 4, got: -1
ERROR 1 [3] - expected: 6, got: -1
Pass/Fail : Fail
(0.022510) CudaWorkerThread.cpp:181:  Received kill command, joining.
(0.022525) CudaWorkerThread.cpp:59:   Tearing down CUDA Worker Thread 3
(0.022637) DynamicExecutionManager.cpp:43:   ~DynamicExecutionManager()

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCalVectorScale 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestIndirectFunctionCall
INFO     Test completed in 0.0499730110168 seconds
INFO      It produced the following output:
(0.000268) DynamicExecutionManager.cpp:37:   DynamicExecutionManager()
(0.000643) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
(0.000969) DynamicMulticoreDevice.cpp:53:   DynamicMulticoreDevice()
(0.003381) DynamicMulticoreDevice.cpp:64:   DynamicMulticoreDevice::load(ocelot/cuda/test/functions/indirectCall.cu)
(0.003416) CudaWorkerThread.cpp:78:   Launching kernel 'kernelEntry' executing on device 'Ocelot Dynamic Multicore CPU'
(0.003425) CudaWorkerThread.cpp:99:    sending message 0xa15a20
(0.003438) CudaWorkerThread.cpp:109:  Waiting for all kernels to finish executing on device 'Ocelot Dynamic Multicore CPU'
(0.003444) CudaWorkerThread.cpp:114:   sending message 0x7fff71035f90
(0.003499) CudaWorkerThread.cpp:133:  CUDAWorker thread is alive, waiting for command.
(0.003513) CudaWorkerThread.cpp:138:   Received message 0xa15a20, type 2
(0.003520) CudaWorkerThread.cpp:157:   Received kernel launch message.
(0.003529) CudaWorkerThread.cpp:191:   Launching kernel 'kernelEntry' now.
(0.003536) DynamicMulticoreDevice.cpp:131:  DynamicMulticoreDevice::launch(ocelot/cuda/test/functions/indirectCall.cu, kernelEntry)
(0.003544) DynamicMulticoreDevice.cpp:82:   DynamicMulticoreDevice::getKernel(ocelot/cuda/test/functions/indirectCall.cu, kernelEntry)
(0.003558) DynamicMulticoreKernel.cpp:51:   DynamicMulticoreKernel(kernel, device)
(0.003566) DynamicMulticoreKernel.cpp:66:    partitioning PTX kernel
(0.003575) KernelPartitioningPass.cpp:45:   KernelPartitioningPass::runOnFunction(kernelEntry)
(0.003744) KernelPartitioningPass.cpp:204:    Spill region size is 120
(0.003758) KernelPartitioningPass.cpp:97:   KernelGraph::_partitionMinimumSize()
(0.003767) KernelPartitioningPass.cpp:234:  Subkernel::create(kernelEntry)
(0.003776) KernelPartitioningPass.cpp:257:  Subkernel::_create(kernelEntry)
(0.003796) KernelPartitioningPass.cpp:284:   adding block $BB_5_0002
(0.003812) KernelPartitioningPass.cpp:301:    adding EXTERNAL OUT-Edge $BB_5_0002 -> $BB_5_0003
(0.003823) KernelPartitioningPass.cpp:301:    adding EXTERNAL OUT-Edge $BB_5_0002 -> $BB_5_0008
(0.003832) KernelPartitioningPass.cpp:325:    adding EXTERNAL IN-Edge entry -> $BB_5_0002
(0.003840) KernelPartitioningPass.cpp:331:   creating internal edges
(0.003846) KernelPartitioningPass.cpp:341:   identifying targets of external IN edges
(0.003853) KernelPartitioningPass.cpp:353:   identifying sources of external OUT edges
(0.003871) KernelPartitioningPass.cpp:234:  Subkernel::create(kernelEntry)
(0.003878) KernelPartitioningPass.cpp:257:  Subkernel::_create(kernelEntry)
(0.003891) KernelPartitioningPass.cpp:284:   adding block $BB_5_0003
(0.003901) KernelPartitioningPass.cpp:301:    adding EXTERNAL OUT-Edge $BB_5_0003 -> $BB_5_0004
(0.003909) KernelPartitioningPass.cpp:301:    adding EXTERNAL OUT-Edge $BB_5_0003 -> $BB_5_0007
(0.003917) KernelPartitioningPass.cpp:325:    adding EXTERNAL IN-Edge $BB_5_0002 -> $BB_5_0003
(0.003924) KernelPartitioningPass.cpp:331:   creating internal edges
(0.003930) KernelPartitioningPass.cpp:341:   identifying targets of external IN edges
(0.003937) KernelPartitioningPass.cpp:353:   identifying sources of external OUT edges
(0.003949) KernelPartitioningPass.cpp:234:  Subkernel::create(kernelEntry)
(0.003955) KernelPartitioningPass.cpp:257:  Subkernel::_create(kernelEntry)
(0.003968) KernelPartitioningPass.cpp:284:   adding block $BB_5_0004
(0.003976) KernelPartitioningPass.cpp:301:    adding EXTERNAL OUT-Edge $BB_5_0004 -> $BB_5_0005
(0.003985) KernelPartitioningPass.cpp:301:    adding EXTERNAL OUT-Edge $BB_5_0004 -> $BB_5_0006
(0.003994) KernelPartitioningPass.cpp:325:    adding EXTERNAL IN-Edge $BB_5_0003 -> $BB_5_0004
(0.004000) KernelPartitioningPass.cpp:331:   creating internal edges
(0.004006) KernelPartitioningPass.cpp:341:   identifying targets of external IN edges
(0.004013) KernelPartitioningPass.cpp:353:   identifying sources of external OUT edges
(0.004025) KernelPartitioningPass.cpp:234:  Subkernel::create(kernelEntry)
(0.004031) KernelPartitioningPass.cpp:257:  Subkernel::_create(kernelEntry)
(0.004043) KernelPartitioningPass.cpp:284:   adding block $BB_5_0005
(0.004074) KernelPartitioningPass.cpp:301:    adding EXTERNAL OUT-Edge $BB_5_0005 -> $BB_5_0009
(0.004084) KernelPartitioningPass.cpp:325:    adding EXTERNAL IN-Edge $BB_5_0004 -> $BB_5_0005
(0.004091) KernelPartitioningPass.cpp:331:   creating internal edges
(0.004097) KernelPartitioningPass.cpp:341:   identifying targets of external IN edges
(0.004104) KernelPartitioningPass.cpp:353:   identifying sources of external OUT edges
(0.004115) KernelPartitioningPass.cpp:234:  Subkernel::create(kernelEntry)
(0.004122) KernelPartitioningPass.cpp:257:  Subkernel::_create(kernelEntry)
(0.004134) KernelPartitioningPass.cpp:284:   adding block $BB_5_0006
(0.004143) KernelPartitioningPass.cpp:301:    adding EXTERNAL OUT-Edge $BB_5_0006 -> $BB_5_0009
(0.004152) KernelPartitioningPass.cpp:325:    adding EXTERNAL IN-Edge $BB_5_0004 -> $BB_5_0006
(0.004159) KernelPartitioningPass.cpp:331:   creating internal edges
(0.004165) KernelPartitioningPass.cpp:341:   identifying targets of external IN edges
(0.004172) KernelPartitioningPass.cpp:353:   identifying sources of external OUT edges
(0.004184) KernelPartitioningPass.cpp:234:  Subkernel::create(kernelEntry)
(0.004190) KernelPartitioningPass.cpp:257:  Subkernel::_create(kernelEntry)
(0.004203) KernelPartitioningPass.cpp:284:   adding block $BB_5_0007
(0.004212) KernelPartitioningPass.cpp:301:    adding EXTERNAL OUT-Edge $BB_5_0007 -> $BB_5_0009
(0.004251) KernelPartitioningPass.cpp:325:    adding EXTERNAL IN-Edge $BB_5_0003 -> $BB_5_0007
(0.004259) KernelPartitioningPass.cpp:331:   creating internal edges
(0.004265) KernelPartitioningPass.cpp:341:   identifying targets of external IN edges
(0.004272) KernelPartitioningPass.cpp:353:   identifying sources of external OUT edges
(0.004283) KernelPartitioningPass.cpp:234:  Subkernel::create(kernelEntry)
(0.004289) KernelPartitioningPass.cpp:257:  Subkernel::_create(kernelEntry)
(0.004302) KernelPartitioningPass.cpp:284:   adding block $BB_5_0008
(0.004310) KernelPartitioningPass.cpp:301:    adding EXTERNAL OUT-Edge $BB_5_0008 -> $BB_5_0009
(0.004319) KernelPartitioningPass.cpp:325:    adding EXTERNAL IN-Edge $BB_5_0002 -> $BB_5_0008
(0.004326) KernelPartitioningPass.cpp:331:   creating internal edges
(0.004332) KernelPartitioningPass.cpp:341:   identifying targets of external IN edges
(0.004339) KernelPartitioningPass.cpp:353:   identifying sources of external OUT edges
(0.004350) KernelPartitioningPass.cpp:234:  Subkernel::create(kernelEntry)
(0.004356) KernelPartitioningPass.cpp:257:  Subkernel::_create(kernelEntry)
(0.004371) KernelPartitioningPass.cpp:284:   adding block $BB_5_0009
(0.004380) KernelPartitioningPass.cpp:301:    adding EXTERNAL OUT-Edge $BB_5_0009 -> exit
(0.004389) KernelPartitioningPass.cpp:325:    adding EXTERNAL IN-Edge $BB_5_0008 -> $BB_5_0009
(0.004397) KernelPartitioningPass.cpp:325:    adding EXTERNAL IN-Edge $BB_5_0005 -> $BB_5_0009
(0.004406) KernelPartitioningPass.cpp:325:    adding EXTERNAL IN-Edge $BB_5_0006 -> $BB_5_0009
(0.004414) KernelPartitioningPass.cpp:325:    adding EXTERNAL IN-Edge $BB_5_0007 -> $BB_5_0009
(0.004421) KernelPartitioningPass.cpp:331:   creating internal edges
(0.004427) KernelPartitioningPass.cpp:341:   identifying targets of external IN edges
(0.004435) KernelPartitioningPass.cpp:353:   identifying sources of external OUT edges
(0.004448) KernelPartitioningPass.cpp:119:  Linking external edges
(0.004456) KernelPartitioningPass.cpp:146:    linking $BB_5_0002_external_out_handler_to_5_0003 to $BB_5_0003_external_in_handler__from_5_0002 (entry 65536)
(0.004463) KernelPartitioningPass.cpp:146:    linking $BB_5_0002_external_out_handler_to_5_0008 to $BB_5_0008_external_in_handler__from_5_0002 (entry 393216)
(0.004469) KernelPartitioningPass.cpp:146:    linking $BB_5_0003_external_out_handler_to_5_0004 to $BB_5_0004_external_in_handler__from_5_0003 (entry 131072)
(0.004476) KernelPartitioningPass.cpp:146:    linking $BB_5_0003_external_out_handler_to_5_0007 to $BB_5_0007_external_in_handler__from_5_0003 (entry 327680)
(0.004483) KernelPartitioningPass.cpp:146:    linking $BB_5_0004_external_out_handler_to_5_0005 to $BB_5_0005_external_in_handler__from_5_0004 (entry 196608)
(0.004501) KernelPartitioningPass.cpp:146:    linking $BB_5_0004_external_out_handler_to_5_0006 to $BB_5_0006_external_in_handler__from_5_0004 (entry 262144)
(0.004508) KernelPartitioningPass.cpp:146:    linking $BB_5_0005_external_out_handler_to_5_0009 to $BB_5_0009_external_in_handler__from_5_0005 (entry 458753)
(0.004515) KernelPartitioningPass.cpp:146:    linking $BB_5_0006_external_out_handler_to_5_0009 to $BB_5_0009_external_in_handler__from_5_0006 (entry 458754)
(0.004522) KernelPartitioningPass.cpp:146:    linking $BB_5_0007_external_out_handler_to_5_0009 to $BB_5_0009_external_in_handler__from_5_0007 (entry 458755)
(0.004529) KernelPartitioningPass.cpp:146:    linking $BB_5_0008_external_out_handler_to_5_0009 to $BB_5_0009_external_in_handler__from_5_0008 (entry 458752)
(0.004536) KernelPartitioningPass.cpp:153:   failed to link external edge: $BB_5_0009 -> exit
(0.004583) KernelPartitioningPass.cpp:441:  Subkernel::_createExternalHandlers()
(0.004602) KernelPartitioningPass.cpp:449:    visiting external IN-edges
(0.004613) KernelPartitioningPass.cpp:460:      IN-edge: $BB_5_0002_external_in_handler__from_y -> $BB_5_0002 (0 live values
(0.004633) KernelPartitioningPass.cpp:504:    visiting external OUT-edges
(0.004642) KernelPartitioningPass.cpp:516:      OUT-edge: $BB_5_0002 -> $BB_5_0002_external_out_handler_to_5_0003 (3 live values
(0.004652) KernelPartitioningPass.cpp:531:        alive-out: 2 [type: s64]
(0.004666) KernelPartitioningPass.cpp:531:        alive-out: 6 [type: s32]
(0.004676) KernelPartitioningPass.cpp:531:        alive-out: 8 [type: s32]
(0.004698) KernelPartitioningPass.cpp:516:      OUT-edge: $BB_5_0002 -> $BB_5_0002_external_out_handler_to_5_0008 (3 live values
(0.004706) KernelPartitioningPass.cpp:531:        alive-out: 2 [type: s64]
(0.004718) KernelPartitioningPass.cpp:531:        alive-out: 6 [type: s32]
(0.004728) KernelPartitioningPass.cpp:531:        alive-out: 8 [type: s32]
(0.004750) KernelPartitioningPass.cpp:563:  Frontier exit blocks:
(0.004772) KernelPartitioningPass.cpp:573:   block $BB_5_0002 (2 external edges) terminator: @%p9 bra $BB_5_0008
(0.004780) KernelPartitioningPass.cpp:581:   1 external edge, modifying branch target to point to handler
(0.004792) KernelPartitioningPass.cpp:615:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1648
*/
.entry _subkernel_kernelEntry_0(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .s32 %r7;
	.reg .s32 %r8;
	.reg .pred %p9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	.reg .u32 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r15;
	$BB_5_0002_external_in_handler__from_y:		// 0 live-in values 
		bra $BB_5_0002; 
	$BB_5_0002:		/**/ 
		ld.param.u64 %r0, [kernelEntry_param_0]; 
		ld.param.u32 %r1, [kernelEntry_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %ntid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		add.s32 %r7, %r6, %r1; 
		and.b32 %r8, %r7, 3; 
		setp.eq.s32 %p9, %r8, 0; 
		@%p9 bra $BB_5_0002_external_out_handler_to_5_0008; 
	$BB_5_0002_external_out_handler_to_5_0003:		// 3 live-out values 
		mov.s32 %r10, _Zocelot_spill_area; 
		st.local.s64 [%r10 + 16], %r2; 
		st.local.s32 [%r10 + 48], %r6; 
		st.local.s32 [%r10 + 64], %r8; 
		mov.s32 %r11, _Zocelot_resume_status; 
		st.local.u32 [%r11], 8; 
		mov.s32 %r12, _Zocelot_resume_point; 
		st.local.u32 [%r12], 65536; 
		exit; 
	$BB_5_0002_external_out_handler_to_5_0008:		// 3 live-out values 
		mov.s32 %r13, _Zocelot_spill_area; 
		st.local.s64 [%r13 + 16], %r2; 
		st.local.s32 [%r13 + 48], %r6; 
		st.local.s32 [%r13 + 64], %r8; 
		mov.s32 %r14, _Zocelot_resume_status; 
		st.local.u32 [%r14], 8; 
		mov.s32 %r15, _Zocelot_resume_point; 
		st.local.u32 [%r15], 393216; 
		exit; 
}
(0.005092) KernelPartitioningPass.cpp:441:  Subkernel::_createExternalHandlers()
(0.005106) KernelPartitioningPass.cpp:449:    visiting external IN-edges
(0.005113) KernelPartitioningPass.cpp:460:      IN-edge: $BB_5_0003_external_in_handler__from_5_0002 -> $BB_5_0003 (3 live values
(0.005122) KernelPartitioningPass.cpp:474:        alive-in: 8 [type: s32]
(0.005135) KernelPartitioningPass.cpp:504:    visiting external OUT-edges
(0.005143) KernelPartitioningPass.cpp:516:      OUT-edge: $BB_5_0003 -> $BB_5_0003_external_out_handler_to_5_0004 (3 live values
(0.005152) KernelPartitioningPass.cpp:531:        alive-out: 8 [type: s32]
(0.005170) KernelPartitioningPass.cpp:516:      OUT-edge: $BB_5_0003 -> $BB_5_0003_external_out_handler_to_5_0007 (3 live values
(0.005179) KernelPartitioningPass.cpp:531:        alive-out: 8 [type: s32]
(0.005199) KernelPartitioningPass.cpp:563:  Frontier exit blocks:
(0.005209) KernelPartitioningPass.cpp:573:   block $BB_5_0003 (2 external edges) terminator: @%p10 bra $BB_5_0007
(0.005216) KernelPartitioningPass.cpp:581:   1 external edge, modifying branch target to point to handler
(0.005226) KernelPartitioningPass.cpp:615:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1648
*/
.entry _subkernel_kernelEntry_1(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .pred %p10;
	.reg .s32 %r8;
	.reg .u32 %r11;
	.reg .u32 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	$BB_5_0003_external_in_handler__from_5_0002:		// 3 live-in values 
		ld.local.s32 %r8, [%r0 + 64]; 
		bra $BB_5_0003; 
	$BB_5_0003:		/**/ 
		setp.eq.s32 %p10, %r8, 1; 
		@%p10 bra $BB_5_0003_external_out_handler_to_5_0007; 
	$BB_5_0003_external_out_handler_to_5_0004:		// 3 live-out values 
		st.local.s32 [%r0 + 64], %r8; 
		mov.s32 %r11, _Zocelot_resume_status; 
		st.local.u32 [%r11], 8; 
		mov.s32 %r12, _Zocelot_resume_point; 
		st.local.u32 [%r12], 131072; 
		exit; 
	$BB_5_0003_external_out_handler_to_5_0007:		// 3 live-out values 
		st.local.s32 [%r0 + 64], %r8; 
		mov.s32 %r13, _Zocelot_resume_status; 
		st.local.u32 [%r13], 8; 
		mov.s32 %r14, _Zocelot_resume_point; 
		st.local.u32 [%r14], 327680; 
		exit; 
}
(0.005374) KernelPartitioningPass.cpp:441:  Subkernel::_createExternalHandlers()
(0.005386) KernelPartitioningPass.cpp:449:    visiting external IN-edges
(0.005394) KernelPartitioningPass.cpp:460:      IN-edge: $BB_5_0004_external_in_handler__from_5_0003 -> $BB_5_0004 (3 live values
(0.005403) KernelPartitioningPass.cpp:474:        alive-in: 8 [type: s32]
(0.005415) KernelPartitioningPass.cpp:504:    visiting external OUT-edges
(0.005423) KernelPartitioningPass.cpp:516:      OUT-edge: $BB_5_0004 -> $BB_5_0004_external_out_handler_to_5_0005 (2 live values
(0.005442) KernelPartitioningPass.cpp:516:      OUT-edge: $BB_5_0004 -> $BB_5_0004_external_out_handler_to_5_0006 (2 live values
(0.005459) KernelPartitioningPass.cpp:563:  Frontier exit blocks:
(0.005470) KernelPartitioningPass.cpp:573:   block $BB_5_0004 (2 external edges) terminator: @%p11 bra $BB_5_0006
(0.005476) KernelPartitioningPass.cpp:581:   1 external edge, modifying branch target to point to handler
(0.005486) KernelPartitioningPass.cpp:615:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1648
*/
.entry _subkernel_kernelEntry_2(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .pred %p11;
	.reg .s32 %r8;
	.reg .u32 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r15;
	$BB_5_0004_external_in_handler__from_5_0003:		// 3 live-in values 
		ld.local.s32 %r8, [%r0 + 64]; 
		bra $BB_5_0004; 
	$BB_5_0004:		/**/ 
		setp.eq.s32 %p11, %r8, 2; 
		@%p11 bra $BB_5_0004_external_out_handler_to_5_0006; 
	$BB_5_0004_external_out_handler_to_5_0005:		// 2 live-out values 
		mov.s32 %r12, _Zocelot_resume_status; 
		st.local.u32 [%r12], 8; 
		mov.s32 %r13, _Zocelot_resume_point; 
		st.local.u32 [%r13], 196608; 
		exit; 
	$BB_5_0004_external_out_handler_to_5_0006:		// 2 live-out values 
		mov.s32 %r14, _Zocelot_resume_status; 
		st.local.u32 [%r14], 8; 
		mov.s32 %r15, _Zocelot_resume_point; 
		st.local.u32 [%r15], 262144; 
		exit; 
}
(0.005631) KernelPartitioningPass.cpp:441:  Subkernel::_createExternalHandlers()
(0.005643) KernelPartitioningPass.cpp:449:    visiting external IN-edges
(0.005650) KernelPartitioningPass.cpp:460:      IN-edge: $BB_5_0005_external_in_handler__from_5_0004 -> $BB_5_0005 (2 live values
(0.005662) KernelPartitioningPass.cpp:504:    visiting external OUT-edges
(0.005670) KernelPartitioningPass.cpp:516:      OUT-edge: $BB_5_0005 -> $BB_5_0005_external_out_handler_to_5_0009 (3 live values
(0.005678) KernelPartitioningPass.cpp:531:        alive-out: 12 [type: s64]
(0.005697) KernelPartitioningPass.cpp:563:  Frontier exit blocks:
(0.005705) KernelPartitioningPass.cpp:573:   block $BB_5_0005 (1 external edges) terminator: bra.uni $BB_5_0009
(0.005713) KernelPartitioningPass.cpp:581:   1 external edge, modifying branch target to point to handler
(0.005722) KernelPartitioningPass.cpp:615:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1648
*/
.entry _subkernel_kernelEntry_3(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r15;
	$BB_5_0005_external_in_handler__from_5_0004:		// 2 live-in values 
		bra $BB_5_0005; 
	$BB_5_0005:		/**/ 
		mov.u64 %r12, funcPentuple; 
		bra.uni $BB_5_0005_external_out_handler_to_5_0009; 
	$BB_5_0005_external_out_handler_to_5_0009:		// 3 live-out values 
		mov.s32 %r13, _Zocelot_spill_area; 
		st.local.s64 [%r13 + 96], %r12; 
		mov.s32 %r14, _Zocelot_resume_status; 
		st.local.u32 [%r14], 8; 
		mov.s32 %r15, _Zocelot_resume_point; 
		st.local.u32 [%r15], 458753; 
		exit; 
}
(0.005825) KernelPartitioningPass.cpp:441:  Subkernel::_createExternalHandlers()
(0.005836) KernelPartitioningPass.cpp:449:    visiting external IN-edges
(0.005843) KernelPartitioningPass.cpp:460:      IN-edge: $BB_5_0006_external_in_handler__from_5_0004 -> $BB_5_0006 (2 live values
(0.005854) KernelPartitioningPass.cpp:504:    visiting external OUT-edges
(0.005862) KernelPartitioningPass.cpp:516:      OUT-edge: $BB_5_0006 -> $BB_5_0006_external_out_handler_to_5_0009 (3 live values
(0.005870) KernelPartitioningPass.cpp:531:        alive-out: 12 [type: s64]
(0.005892) KernelPartitioningPass.cpp:563:  Frontier exit blocks:
(0.005900) KernelPartitioningPass.cpp:573:   block $BB_5_0006 (1 external edges) terminator: bra.uni $BB_5_0009
(0.005907) KernelPartitioningPass.cpp:581:   1 external edge, modifying branch target to point to handler
(0.005916) KernelPartitioningPass.cpp:615:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1648
*/
.entry _subkernel_kernelEntry_4(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r15;
	$BB_5_0006_external_in_handler__from_5_0004:		// 2 live-in values 
		bra $BB_5_0006; 
	$BB_5_0006:		/*BB4_4*/ 
		mov.u64 %r12, funcQuadruple; 
		bra.uni $BB_5_0006_external_out_handler_to_5_0009; 
	$BB_5_0006_external_out_handler_to_5_0009:		// 3 live-out values 
		mov.s32 %r13, _Zocelot_spill_area; 
		st.local.s64 [%r13 + 96], %r12; 
		mov.s32 %r14, _Zocelot_resume_status; 
		st.local.u32 [%r14], 8; 
		mov.s32 %r15, _Zocelot_resume_point; 
		st.local.u32 [%r15], 458754; 
		exit; 
}
(0.006021) KernelPartitioningPass.cpp:441:  Subkernel::_createExternalHandlers()
(0.006032) KernelPartitioningPass.cpp:449:    visiting external IN-edges
(0.006039) KernelPartitioningPass.cpp:460:      IN-edge: $BB_5_0007_external_in_handler__from_5_0003 -> $BB_5_0007 (3 live values
(0.006051) KernelPartitioningPass.cpp:504:    visiting external OUT-edges
(0.006068) KernelPartitioningPass.cpp:516:      OUT-edge: $BB_5_0007 -> $BB_5_0007_external_out_handler_to_5_0009 (3 live values
(0.006077) KernelPartitioningPass.cpp:531:        alive-out: 12 [type: s64]
(0.006099) KernelPartitioningPass.cpp:563:  Frontier exit blocks:
(0.006107) KernelPartitioningPass.cpp:573:   block $BB_5_0007 (1 external edges) terminator: bra.uni $BB_5_0009
(0.006114) KernelPartitioningPass.cpp:581:   1 external edge, modifying branch target to point to handler
(0.006123) KernelPartitioningPass.cpp:615:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1648
*/
.entry _subkernel_kernelEntry_5(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r15;
	$BB_5_0007_external_in_handler__from_5_0003:		// 3 live-in values 
		bra $BB_5_0007; 
	$BB_5_0007:		/*BB4_5*/ 
		mov.u64 %r12, funcTriple; 
		bra.uni $BB_5_0007_external_out_handler_to_5_0009; 
	$BB_5_0007_external_out_handler_to_5_0009:		// 3 live-out values 
		mov.s32 %r13, _Zocelot_spill_area; 
		st.local.s64 [%r13 + 96], %r12; 
		mov.s32 %r14, _Zocelot_resume_status; 
		st.local.u32 [%r14], 8; 
		mov.s32 %r15, _Zocelot_resume_point; 
		st.local.u32 [%r15], 458755; 
		exit; 
}
(0.006228) KernelPartitioningPass.cpp:441:  Subkernel::_createExternalHandlers()
(0.006239) KernelPartitioningPass.cpp:449:    visiting external IN-edges
(0.006247) KernelPartitioningPass.cpp:460:      IN-edge: $BB_5_0008_external_in_handler__from_5_0002 -> $BB_5_0008 (3 live values
(0.006258) KernelPartitioningPass.cpp:504:    visiting external OUT-edges
(0.006266) KernelPartitioningPass.cpp:516:      OUT-edge: $BB_5_0008 -> $BB_5_0008_external_out_handler_to_5_0009 (3 live values
(0.006274) KernelPartitioningPass.cpp:531:        alive-out: 12 [type: s64]
(0.006296) KernelPartitioningPass.cpp:563:  Frontier exit blocks:
(0.006307) KernelPartitioningPass.cpp:573:   block $BB_5_0008 (1 external edges) terminator: mov.u64 %r12, funcDouble
(0.006317) KernelPartitioningPass.cpp:596:   fall-through non-control-flow instruction to external edge: mov.u64 %r12, funcDouble
(0.006326) KernelPartitioningPass.cpp:615:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1648
*/
.entry _subkernel_kernelEntry_6(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r15;
	$BB_5_0008_external_in_handler__from_5_0002:		// 3 live-in values 
		bra $BB_5_0008; 
	$BB_5_0008:		/*BB4_6*/ 
		mov.u64 %r12, funcDouble; 
	$BB_5_0008_external_out_handler_to_5_0009:		// 3 live-out values 
		mov.s32 %r13, _Zocelot_spill_area; 
		st.local.s64 [%r13 + 96], %r12; 
		mov.s32 %r14, _Zocelot_resume_status; 
		st.local.u32 [%r14], 8; 
		mov.s32 %r15, _Zocelot_resume_point; 
		st.local.u32 [%r15], 458752; 
		exit; 
}
(0.006454) KernelPartitioningPass.cpp:441:  Subkernel::_createExternalHandlers()
(0.006467) KernelPartitioningPass.cpp:449:    visiting external IN-edges
(0.006475) KernelPartitioningPass.cpp:460:      IN-edge: $BB_5_0009_external_in_handler__from_5_0008 -> $BB_5_0009 (3 live values
(0.006483) KernelPartitioningPass.cpp:474:        alive-in: 12 [type: s64]
(0.006495) KernelPartitioningPass.cpp:474:        alive-in: 2 [type: s64]
(0.006509) KernelPartitioningPass.cpp:474:        alive-in: 6 [type: s32]
(0.006521) KernelPartitioningPass.cpp:460:      IN-edge: $BB_5_0009_external_in_handler__from_5_0005 -> $BB_5_0009 (3 live values
(0.006531) KernelPartitioningPass.cpp:474:        alive-in: 12 [type: s64]
(0.006541) KernelPartitioningPass.cpp:474:        alive-in: 2 [type: s64]
(0.006551) KernelPartitioningPass.cpp:474:        alive-in: 6 [type: s32]
(0.006566) KernelPartitioningPass.cpp:460:      IN-edge: $BB_5_0009_external_in_handler__from_5_0006 -> $BB_5_0009 (3 live values
(0.006575) KernelPartitioningPass.cpp:474:        alive-in: 12 [type: s64]
(0.006595) KernelPartitioningPass.cpp:474:        alive-in: 2 [type: s64]
(0.006605) KernelPartitioningPass.cpp:474:        alive-in: 6 [type: s32]
(0.006620) KernelPartitioningPass.cpp:460:      IN-edge: $BB_5_0009_external_in_handler__from_5_0007 -> $BB_5_0009 (3 live values
(0.006629) KernelPartitioningPass.cpp:474:        alive-in: 12 [type: s64]
(0.006639) KernelPartitioningPass.cpp:474:        alive-in: 2 [type: s64]
(0.006649) KernelPartitioningPass.cpp:474:        alive-in: 6 [type: s32]
(0.006660) KernelPartitioningPass.cpp:504:    visiting external OUT-edges
(0.006668) KernelPartitioningPass.cpp:516:      OUT-edge: $BB_5_0009 -> $BB_5_0009_external_out_handler_to_ (0 live values
(0.006685) KernelPartitioningPass.cpp:563:  Frontier exit blocks:
(0.006693) KernelPartitioningPass.cpp:573:   block $BB_5_0009 (1 external edges) terminator: ret
(0.006700) KernelPartitioningPass.cpp:596:   fall-through non-control-flow instruction to external edge: ret
(0.006708) KernelPartitioningPass.cpp:615:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1648
*/
.entry _subkernel_kernelEntry_7(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s32 %r6;
	.reg .s64 %r12;
	.reg .s32 %r13;
	.reg .s64 %r14;
	.reg .s64 %r15;
	.reg .s64 %r2;
	.reg .u32 %r20;
	.reg .u32 %r21;
	.reg .u32 %r16;
	.reg .u32 %r17;
	.reg .u32 %r18;
	.reg .u32 %r19;
	
	prototype_0: .callprototype (.param .b32 _) prototype_0 (.param .b32 _);
	
	$BB_5_0009_external_in_handler__from_5_0007:		// 3 live-in values 
		mov.s32 %r19, _Zocelot_spill_area; 
		ld.local.s64 %r12, [%r19 + 96]; 
		ld.local.s64 %r2, [%r19 + 16]; 
		ld.local.s32 %r6, [%r19 + 48]; 
		bra $BB_5_0009; 
	$BB_5_0009:		/*BB4_7*/ 
		st.param.b32 [param0], %r6; 
		call (retval0), %r12, (param0), prototype_0; 
		ld.param.b32 %r13, [retval0]; 
		mul.wide.s32 %r14, %r6, 4; 
		add.s64 %r15, %r2, %r14; 
		st.global.u32 [%r15], %r13; 
		ret; 
	$BB_5_0009_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r20, _Zocelot_resume_status; 
		st.local.u32 [%r20], 6; 
		mov.s32 %r21, _Zocelot_resume_point; 
		st.local.u32 [%r21], 0; 
		exit; 
	$BB_5_0009_external_in_handler__from_5_0006:		// 3 live-in values 
		mov.s32 %r18, _Zocelot_spill_area; 
		ld.local.s64 %r12, [%r18 + 96]; 
		ld.local.s64 %r2, [%r18 + 16]; 
		ld.local.s32 %r6, [%r18 + 48]; 
		bra $BB_5_0009; 
	$BB_5_0009_external_in_handler__from_5_0005:		// 3 live-in values 
		mov.s32 %r17, _Zocelot_spill_area; 
		ld.local.s64 %r12, [%r17 + 96]; 
		ld.local.s64 %r2, [%r17 + 16]; 
		ld.local.s32 %r6, [%r17 + 48]; 
		bra $BB_5_0009; 
	$BB_5_0009_external_in_handler__from_5_0008:		// 3 live-in values 
		mov.s32 %r16, _Zocelot_spill_area; 
		ld.local.s64 %r12, [%r16 + 96]; 
		ld.local.s64 %r2, [%r16 + 16]; 
		ld.local.s32 %r6, [%r16 + 48]; 
		bra $BB_5_0009; 
}
(0.006945) ExecutableKernel.cpp:208:  ExecutableKernels::mapArgumentOffsets() - 'kernelEntry' - size: 12 bytes
(0.006964) DynamicMulticoreKernel.cpp:106:  Setting CTA shape to ( x = 32, y = 1, z = 1 ) for kernel "kernelEntry"
(0.006973) ExecutableKernel.cpp:216:  ExecutableKernel::setArgumentBlock() - parameterSize = 12
(0.006981) ExecutableKernel.cpp:208:  ExecutableKernels::mapArgumentOffsets() - 'kernelEntry' - size: 12 bytes
(0.006993) ExecutableKernel.cpp:238:  Configuring parameter kernelEntry_param_0 - offset: 0 - type: 1 x u64 - value: 0x0000000000a0a700
(0.007003) ExecutableKernel.cpp:238:  Configuring parameter kernelEntry_param_1 - offset: 8 - type: 1 x u32 - value: 0
(0.007012) DynamicMulticoreKernel.cpp:187:    Allocating argument memory.
(0.007019) DynamicMulticoreKernel.cpp:198:     Allocated argument kernelEntry_param_0 from 0 to 8
(0.007028) DynamicMulticoreKernel.cpp:198:     Allocated argument kernelEntry_param_1 from 8 to 12
(0.007035) DynamicMulticoreKernel.cpp:204:    Allocated 12 for argument memory.
(0.007043) DynamicMulticoreKernel.cpp:214:   Allocating Constant Memory
TestIndirectFunctionCall: ocelot/executive/implementation/DynamicTranslationCache.cpp:885: void setupCallTargets(ir::PTXKernel&, const executive::DynamicTranslationCache&): Assertion `0 && "arbitrary function calls not yet supported"' failed.
(0.007051) DynamicMulticoreKernel.cpp:230:     Total constant memory size is 0.
(0.007070) DynamicMulticoreKernel.cpp:149:  Updating Memory
(0.007080) DynamicMulticoreKernel.cpp:92:   Launching kernel "kernelEntry" on grid ( x = 1, y = 1 )
(0.007089) DynamicMulticoreKernel.cpp:93:     shared memory size: 0
(0.007097) DynamicExecutionManager.cpp:53:   DynamicExecutionManager::launch()
(0.007107) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(ocelot/cuda/test/functions/indirectCall.cu)
(0.007131) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(kernelEntry)
(0.007149) DynamicTranslationCache.cpp:1089: __translateKernel()
(0.007160) DynamicTranslationCache.cpp:1110:   translating subkernel _subkernel_kernelEntry_0
(0.007201) DynamicTranslationCache.cpp:1123:   Converting from PTX IR to LLVM IR.
(0.008822) DynamicTranslationCache.cpp:1140: translated PTX to LLVM
(0.009715) DynamicTranslationCache.cpp:1110:   translating subkernel _subkernel_kernelEntry_1
(0.009752) DynamicTranslationCache.cpp:1123:   Converting from PTX IR to LLVM IR.
(0.010574) DynamicTranslationCache.cpp:1140: translated PTX to LLVM
(0.010924) DynamicTranslationCache.cpp:1110:   translating subkernel _subkernel_kernelEntry_2
(0.010953) DynamicTranslationCache.cpp:1123:   Converting from PTX IR to LLVM IR.
(0.011535) DynamicTranslationCache.cpp:1140: translated PTX to LLVM
(0.011781) DynamicTranslationCache.cpp:1110:   translating subkernel _subkernel_kernelEntry_3

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMKernels 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTextureArray
INFO     Test completed in 0.0553600788116 seconds
INFO      It produced the following output:
(0.000235) DynamicExecutionManager.cpp:37:   DynamicExecutionManager()
(0.000593) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
(0.000923) DynamicMulticoreDevice.cpp:53:   DynamicMulticoreDevice()
(0.002618) DynamicMulticoreDevice.cpp:64:   DynamicMulticoreDevice::load(ocelot/cuda/test/textures/textureArray.cu)
cudaBindTextureToArray() - failed to bind texture: cudaErrorInvalidValue
(0.006824) CudaWorkerThread.cpp:133:  CUDAWorker thread is alive, waiting for command.
(0.006842) CudaWorkerThread.cpp:181:  Received kill command, joining.
(0.006895) CudaWorkerThread.cpp:59:   Tearing down CUDA Worker Thread 3
(0.006951) DynamicExecutionManager.cpp:43:   ~DynamicExecutionManager()

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestParser -i ../tests/ptx 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestKernels
INFO     Test completed in 0.0680179595947 seconds
INFO      It produced the following output:
(0.000262) DynamicExecutionManager.cpp:37:   DynamicExecutionManager()
(0.014480) ExecutableKernel.cpp:208:  ExecutableKernels::mapArgumentOffsets() - '_Z17k_sequenceLoopingPfi' - size: 12 bytes
(0.015494) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
(0.016786) ExecutableKernel.cpp:208:  ExecutableKernels::mapArgumentOffsets() - '_Z21k_matrixVectorProductPKfS0_Pfii' - size: 32 bytes
Pass/Fail : Pass


Name : TestKernels

Description: 


Test Seed : 1326212284
Test time : 0.0185556

Status : Test output:
looping kernel succeeded
matrix vector kernel succeeded


(0.019748) DynamicExecutionManager.cpp:43:   ~DynamicExecutionManager()

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestExternalFunctions 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCalVectorScale
INFO     Test completed in 0.0483660697937 seconds
INFO      It produced the following output:
(0.000235) DynamicExecutionManager.cpp:37:   DynamicExecutionManager()
(0.000585) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
(0.000867) DynamicMulticoreDevice.cpp:53:   DynamicMulticoreDevice()
(0.000986) CudaWorkerThread.cpp:133:  CUDAWorker thread is alive, waiting for command.
(0.001001) CudaWorkerThread.cpp:181:  Received kill command, joining.
(0.001018) CudaWorkerThread.cpp:59:   Tearing down CUDA Worker Thread 3
No CAL devices found
Pass/Fail : Pass
(0.002827) DynamicExecutionManager.cpp:43:   ~DynamicExecutionManager()

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaGlobals 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestExternalFunctions
INFO     Test completed in 0.0482139587402 seconds
INFO      It produced the following output:
(0.000241) DynamicExecutionManager.cpp:37:   DynamicExecutionManager()
(0.000813) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
(0.001080) DynamicMulticoreDevice.cpp:53:   DynamicMulticoreDevice()
(0.003583) DynamicMulticoreDevice.cpp:64:   DynamicMulticoreDevice::load(someModule)
(0.003625) CudaWorkerThread.cpp:78:   Launching kernel 'kernel' executing on device 'Ocelot Dynamic Multicore CPU'
(0.003635) CudaWorkerThread.cpp:99:    sending message 0x181e7c0
(0.003655) CudaWorkerThread.cpp:109:  Waiting for all kernels to finish executing on device 'Ocelot Dynamic Multicore CPU'
(0.003662) CudaWorkerThread.cpp:114:   sending message 0x7fff86d39ef0
(0.003690) CudaWorkerThread.cpp:133:  CUDAWorker thread is alive, waiting for command.
(0.003704) CudaWorkerThread.cpp:138:   Received message 0x181e7c0, type 2
(0.003711) CudaWorkerThread.cpp:157:   Received kernel launch message.
(0.003719) CudaWorkerThread.cpp:191:   Launching kernel 'kernel' now.
(0.003726) DynamicMulticoreDevice.cpp:131:  DynamicMulticoreDevice::launch(someModule, kernel)
(0.003734) DynamicMulticoreDevice.cpp:82:   DynamicMulticoreDevice::getKernel(someModule, kernel)
(0.003748) DynamicMulticoreKernel.cpp:51:   DynamicMulticoreKernel(kernel, device)
(0.003755) DynamicMulticoreKernel.cpp:66:    partitioning PTX kernel
(0.003765) KernelPartitioningPass.cpp:45:   KernelPartitioningPass::runOnFunction(kernel)
(0.003875) KernelPartitioningPass.cpp:204:    Spill region size is 24
(0.003891) KernelPartitioningPass.cpp:97:   KernelGraph::_partitionMinimumSize()
(0.003900) KernelPartitioningPass.cpp:234:  Subkernel::create(kernel)
(0.003909) KernelPartitioningPass.cpp:257:  Subkernel::_create(kernel)
(0.003932) KernelPartitioningPass.cpp:284:   adding block $BB_1_0002
(0.003947) KernelPartitioningPass.cpp:301:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.003958) KernelPartitioningPass.cpp:325:    adding EXTERNAL IN-Edge entry -> $BB_1_0002
(0.003966) KernelPartitioningPass.cpp:331:   creating internal edges
(0.003972) KernelPartitioningPass.cpp:341:   identifying targets of external IN edges
(0.003978) KernelPartitioningPass.cpp:353:   identifying sources of external OUT edges
(0.003997) KernelPartitioningPass.cpp:119:  Linking external edges
(0.004005) KernelPartitioningPass.cpp:153:   failed to link external edge: $BB_1_0002 -> exit
(0.004045) KernelPartitioningPass.cpp:441:  Subkernel::_createExternalHandlers()
(0.004062) KernelPartitioningPass.cpp:449:    visiting external IN-edges
(0.004073) KernelPartitioningPass.cpp:460:      IN-edge: $BB_1_0002_external_in_handler__from_y -> $BB_1_0002 (0 live values
(0.004093) KernelPartitioningPass.cpp:504:    visiting external OUT-edges
(0.004101) KernelPartitioningPass.cpp:516:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.004122) KernelPartitioningPass.cpp:563:  Frontier exit blocks:
(0.004135) KernelPartitioningPass.cpp:573:   block $BB_1_0002 (1 external edges) terminator: exit
(0.004147) KernelPartitioningPass.cpp:615:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1648
*/
.entry _subkernel_kernel_0(.param  .u64 result)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[24];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u64 %r2;
	.reg .u64 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	$BB_1_0002_external_in_handler__from_y:		// 0 live-in values 
		bra $BB_1_0002; 
	$BB_1_0002:		/**/ 
		mov.u64 %r0, 8; 
		st.param.u64 [value], %r0; 
		call.uni (returned), malloc, (value); 
		ld.param.u64 %r1, [returned]; 
		st.global.u64 [%r1], %r0; 
		ld.global.u64 %r2, [%r1]; 
		ld.param.u64 %r3, [result]; 
		st.global.u64 [%r3], %r2; 
		st.param.u64 [freeValue], %r1; 
		call.uni free, (freeValue); 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r4, _Zocelot_resume_status; 
		st.local.u32 [%r4], 6; 
		mov.s32 %r5, _Zocelot_resume_point; 
		st.local.u32 [%r5], 0; 
		exit; 
}
(0.004319) ExecutableKernel.cpp:208:  ExecutableKernels::mapArgumentOffsTestExternalFunctions: ocelot/executive/implementation/DynamicTranslationCache.cpp:885: void setupCallTargets(ir::PTXKernel&, const executive::DynamicTranslationCache&): Assertion `0 && "arbitrary function calls not yet supported"' failed.
ets() - 'kernel' - size: 8 bytes
(0.004367) DynamicMulticoreKernel.cpp:106:  Setting CTA shape to ( x = 1, y = 1, z = 1 ) for kernel "kernel"
(0.004376) ExecutableKernel.cpp:216:  ExecutableKernel::setArgumentBlock() - parameterSize = 8
(0.004383) ExecutableKernel.cpp:208:  ExecutableKernels::mapArgumentOffsets() - 'kernel' - size: 8 bytes
(0.004394) ExecutableKernel.cpp:238:  Configuring parameter result - offset: 0 - type: 1 x u64 - value: 0x0000000001816d00
(0.004403) DynamicMulticoreKernel.cpp:187:    Allocating argument memory.
(0.004409) DynamicMulticoreKernel.cpp:198:     Allocated argument result from 0 to 8
(0.004417) DynamicMulticoreKernel.cpp:204:    Allocated 8 for argument memory.
(0.004426) DynamicMulticoreKernel.cpp:214:   Allocating Constant Memory
(0.004432) DynamicMulticoreKernel.cpp:230:     Total constant memory size is 0.
(0.004440) DynamicMulticoreKernel.cpp:149:  Updating Memory
(0.004448) DynamicMulticoreKernel.cpp:92:   Launching kernel "kernel" on grid ( x = 1, y = 1 )
(0.004457) DynamicMulticoreKernel.cpp:93:     shared memory size: 0
(0.004464) DynamicExecutionManager.cpp:53:   DynamicExecutionManager::launch()
(0.004473) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(someModule)
(0.004495) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(kernel)
(0.004510) DynamicTranslationCache.cpp:1089: __translateKernel()
(0.004520) DynamicTranslationCache.cpp:1110:   translating subkernel _subkernel_kernel_0

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestEmulator 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestParser
INFO     Test completed in 0.0640671253204 seconds
INFO      It produced the following output:
(0.000241) DynamicExecutionManager.cpp:37:   DynamicExecutionManager()
Pass/Fail : Pass


Name : TestParser

Description: A test for the PTXParser class. Test Points: 1) Load a PTX file 
             and run it through the parser generating a module. Write the 
             module to an intermediate stream. Parse the stream again 
             generating a new module, compare both to make sure that they match.


Test Seed : 1326212284
Test time : 1.28746e-05

Status : 

(0.000592) DynamicExecutionManager.cpp:43:   ~DynamicExecutionManager()

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXAssembly 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaGlobals
INFO     Test completed in 0.0521810054779 seconds
INFO      It produced the following output:
(0.000238) DynamicExecutionManager.cpp:37:   DynamicExecutionManager()
(0.000589) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
Pass/Fail : Pass
(0.002644) DynamicExecutionManager.cpp:43:   ~DynamicExecutionManager()

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaMalloc 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMKernels
INFO     Test completed in 0.103745937347 seconds
INFO      It produced the following output:
(0.000242) DynamicExecutionManager.cpp:37:   DynamicExecutionManager()
(0.009284) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
(0.009409) ExecutableKernel.cpp:208:  ExecutableKernels::mapArgumentOffsets() - '_Z17k_sequenceLoopingPfi' - size: 12 bytes
(0.009424) ExecutableKernel.cpp:208:  ExecutableKernels::mapArgumentOffsets() - '_Z21k_matrixVectorProductPKfS0_Pfii' - size: 32 bytes
Pass/Fail : Pass


Name : TestLLVMKernels

Description: A unit test for the LLVM executive runtime. Test Points: 1) 
             Execute a kernel with a loop. 2) Execute a matrix multiply kernel.


Test Seed : 1326212284
Test time : 0.0567558

Status : A = [
 1 0 0 0 0 0 0 0 ;
 0.5 1 0 0 0 0 0 0 ;
 0.333333 0.5 1 0 0 0 0 0 ;
 0.25 0.333333 0.5 1 0 0 0 0 ;
 0.2 0.25 0.333333 0.5 1 0 0 0 ;
 0.166667 0.2 0.25 0.333333 0.5 1 0 0 ;
 0.142857 0.166667 0.2 0.25 0.333333 0.5 1 0 ;
 0.125 0.142857 0.166667 0.2 0.25 0.333333 0.5 1 ;
];
V = [
 1 ;
 2 ;
 3 ;
 4 ;
 5 ;
 6 ;
 7 ;
 8 ;
];
R = [
 1 ;
 2.5 ;
 4.33333 ;
 6.41667 ;
 8.7 ;
 11.15 ;
 13.7429 ;
 16.4607 ;
];


(0.057892) DynamicExecutionManager.cpp:43:   ~DynamicExecutionManager()

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDataflowGraph -i ../tests/ptx 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXAssembly
INFO     Test completed in 0.0568470954895 seconds
INFO      It produced the following output:
(0.000237) DynamicExecutionManager.cpp:37:   DynamicExecutionManager()
(0.003307) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
(0.003612) DynamicMulticoreDevice.cpp:53:   DynamicMulticoreDevice()
(0.004597) DynamicMulticoreDevice.cpp:64:   DynamicMulticoreDevice::load(TestVectorElements-u32)
(0.004627) CudaWorkerThread.cpp:78:   Launching kernel 'test' executing on device 'Ocelot Dynamic Multicore CPU'
(0.004637) CudaWorkerThread.cpp:99:    sending message 0x138ade0
(0.004649) CudaWorkerThread.cpp:109:  Waiting for all kernels to finish executing on device 'Ocelot Dynamic Multicore CPU'
(0.004656) CudaWorkerThread.cpp:114:   sending message 0x7ffff5d56f60
(0.004706) CudaWorkerThread.cpp:133:  CUDAWorker thread is alive, waiting for command.
(0.004720) CudaWorkerThread.cpp:138:   Received message 0x138ade0, type 2
(0.004728) CudaWorkerThread.cpp:157:   Received kernel launch message.
(0.004735) CudaWorkerThread.cpp:191:   Launching kernel 'test' now.
(0.004742) DynamicMulticoreDevice.cpp:131:  DynamicMulticoreDevice::launch(TestVectorElements-u32, test)
(0.004751) DynamicMulticoreDevice.cpp:82:   DynamicMulticoreDevice::getKernel(TestVectorElements-u32, test)
(0.004764) DynamicMulticoreKernel.cpp:51:   DynamicMulticoreKernel(kernel, device)
(0.004774) DynamicMulticoreKernel.cpp:66:    partitioning PTX kernel
(0.004784) KernelPartitioningPass.cpp:45:   KernelPartitioningPass::runOnFunction(test)
(0.004883) KernelPartitioningPass.cpp:204:    Spill region size is 72
(0.004897) KernelPartitioningPass.cpp:97:   KernelGraph::_partitionMinimumSize()
(0.004907) KernelPartitioningPass.cpp:234:  Subkernel::create(test)
(0.004915) KernelPartitioningPass.cpp:257:  Subkernel::_create(test)
(0.004936) KernelPartitioningPass.cpp:284:   adding block $BB_1_0002
(0.004951) KernelPartitioningPass.cpp:301:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.004961) KernelPartitioningPass.cpp:325:    adding EXTERNAL IN-Edge entry -> $BB_1_0002
(0.004969) KernelPartitioningPass.cpp:331:   creating internal edges
(0.004975) KernelPartitioningPass.cpp:341:   identifying targets of external IN edges
(0.004982) KernelPartitioningPass.cpp:353:   identifying sources of external OUT edges
(0.004999) KernelPartitioningPass.cpp:119:  Linking external edges
(0.005007) KernelPartitioningPass.cpp:153:   failed to link external edge: $BB_1_0002 -> exit
(0.005049) KernelPartitioningPass.cpp:441:  Subkernel::_createExternalHandlers()
(0.005066) KernelPartitioningPass.cpp:449:    visiting external IN-edges
(0.005077) KernelPartitioningPass.cpp:460:      IN-edge: $BB_1_0002_external_in_handler__from_y -> $BB_1_0002 (0 live values
(0.005095) KernelPartitioningPass.cpp:504:    visiting external OUT-edges
(0.005102) KernelPartitioningPass.cpp:516:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.005123) KernelPartitioningPass.cpp:563:  Frontier exit blocks:
(0.005135) KernelPartitioningPass.cpp:573:   block $BB_1_0002 (1 external edges) terminator: exit
(0.005147) KernelPartitioningPass.cpp:615:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1648
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	$BB_1_0002_external_in_handler__from_y:		// 0 live-in values 
		bra $BB_1_0002; 
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r10, _Zocelot_resume_status; 
		st.local.u32 [%r10], 6; 
		mov.s32 %r11, _Zocelot_resume_point; 
		st.local.u32 [%r11], 0; 
		exit; 
}
(0.005326) ExecutableKernel.cpp:208:  ExecutableKernels::mapArgumentOffsets() - 'test' - size: 16 bytes
(0.005426) DynamicMulticoreKernel.cpp:106:  Setting CTA shape to ( x = 1, y = 1, z = 1 ) for kernel "test"
(0.005436) ExecutableKernel.cpp:216:  ExecutableKernel::setArgumentBlock() - parameterSize = 16
(0.005443) ExecutableKernel.cpp:208:  ExecutableKernels::mapArgumentOffsets() - 'test' - size: 16 bytes
(0.005454) ExecutableKernel.cpp:238:  Configuring parameter out - offset: 0 - type: 1 x u64 - value: 0x000000000137d000
(0.005463) ExecutableKernel.cpp:238:  Configuring parameter in - offset: 8 - type: 1 x u64 - value: 0x000000000137cf00
(0.005472) DynamicMulticoreKernel.cpp:187:    Allocating argument memory.
(0.005479) DynamicMulticoreKernel.cpp:198:     Allocated argument out from 0 to 8
(0.005487) DynamicMulticoreKernel.cpp:198:     Allocated argument in from 8 to 16
(0.005494) DynamicMulticoreKernel.cpp:204:    Allocated 16 for argument memory.
(0.005501) DynamicMulticoreKernel.cpp:214:   Allocating Constant Memory
(0.005509) DynamicMulticoreKernel.cpp:230:     Total constant memory size is 0.
(0.005516) DynamicMulticoreKernel.cpp:149:  Updating Memory
(0.005525) DynamicMulticoreKernel.cpp:92:   Launching kernel "test" on grid ( x = 1, y = 1 )
(0.005533) DynamicMulticoreKernel.cpp:93:     shared memory size: 0
(0.005540) DynamicExecutionManager.cpp:53:   DynamicExecutionManager::launch()
(0.005549) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestVectorElements-u32)
(0.005570) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.005584) DynamicTranslationCache.cpp:1089: __translateKernel()
(0.005593) DynamicTranslationCache.cpp:1110:   translating subkernel _subkernel_test_0
(0.005620) DynamicTranslationCache.cpp:1123:   Converting from PTX IR to LLVM IR.
(0.006431) DynamicTranslationCache.cpp:1140: translated PTX to LLVM
(0.006916) DynamicTranslationCache.cpp:1189:  _translateKernel('test') complete for 1 subkernels
(0.006925) DynamicTranslationCache.cpp:148:    registered new kernel
(0.006936) DynamicMulticoreExecutive.cpp:106:  DynamicMulticoreExecutve('test', shared mem size: 0
(0.006944) DynamicMulticoreExecutive.cpp:107:    localMemorySize: 80
(0.006950) DynamicMulticoreExecutive.cpp:108:    paramMemorySize: 0
(0.006957) DynamicExecutionManager.cpp:66:   Executing block 0, 0
(0.006964) DynamicMulticoreExecutive.cpp:146:  DynamicMulticoreExecutive::execute(0, 0) kernel: 'test' for CTA size 1 threads
(0.006975) DynamicTranslationCache.cpp:108:   DynamicTranslationCache::getOrInsertTranslation(ws: 1, skId: 0, specialization = 0)
(0.006984) DynamicTranslationCache.cpp:1200: _specializeTranslation()
(0.006991) DynamicTranslationCache.cpp:1210:   cloning and optimizing
(0.008456) DynamicTranslationCache.cpp:983:  Overriding optimization level
(0.009630) DynamicTranslationCache.cpp:1055: performed transformations
(0.009682) DynamicTranslationCache.cpp:1219:   JIT compiling
(0.011246) DynamicTranslationCache.cpp:1230:   verifying
(0.011366) DynamicTranslationCache.cpp:1242: Specialized and optimized LLVM function:

define internal void @_subkernel_test_0_opt0_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
exit:
  %rt1 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 8
  %rt2 = load i8** %rt1, align 8
  %rt0 = getelementptr i8* %rt2, i64 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %rt2 to i64*
  %r1 = load i64* %rt6, align 8
  %rt8 = inttoptr i64 %r0 to <4 x i32>*
  %rt7 = load <4 x i32>* %rt8, align 16
  %rt9 = inttoptr i64 %r1 to <4 x i32>*
  %rt13 = shufflevector <4 x i32> %rt7, <4 x i32> undef, <4 x i32> <i32 1, i32 2, i32 3, i32 0>
  store <4 x i32> %rt13, <4 x i32>* %rt9, align 16
  %rt15 = getelementptr %LLVMContext* %__ctaContext, i64 0, i32 4
  %rt16 = load i8** %rt15, align 8
  %rt17 = ptrtoint i8* %rt16 to i64
  %rt18 = add i64 %rt17, 4
  %rt19 = inttoptr i64 %rt18 to i32*
  store i32 6, i32* %rt19, align 4
  %rt22 = load i8** %rt15, align 8
  %rt25 = bitcast i8* %rt22 to i32*
  store i32 0, i32* 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestEmulator
INFO     Test completed in 0.0612969398499 seconds
INFO      It produced the following output:
(0.000229) DynamicExecutionManager.cpp:37:   DynamicExecutionManager()
(0.002820) ExecutableKernel.cpp:208:  ExecutableKernels::mapArgumentOffsets() - '_Z17k_simple_sequencePi' - size: 4 bytes
(0.003148) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
(0.003496) ExecutableKernel.cpp:208:  ExecutableKernels::mapArgumentOffsets() - '_Z17k_simple_sequencePi' - size: 4 bytes
(0.003670) ExecutableKernel.cpp:208:  ExecutableKernels::mapArgumentOffsets() - '_Z17k_simple_sequencePi' - size: 4 bytes
(0.003812) ExecutableKernel.cpp:208:  ExecutableKernels::mapArgumentOffsets() - '_Z17k_simple_sequencePi' - size: 4 bytes
Pass/Fail : Pass


Name : TestEmulator

Description: 


Test Seed : 1326212284
Test time : 0.00355721

Status : Test output:
10 registers
Register test passed
Load test passed
Store test passed
no errors
Full kernel test passed


(0.004100) DynamicExecutionManager.cpp:43:   ~DynamicExecutionManager()

INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDataflowGraph
INFO     Test completed in 0.0399298667908 seconds
INFO      It produced the following output:
(0.000198) DynamicExecutionManager.cpp:37:   DynamicExecutionManager()
Pass/Fail : Pass


Name : TestDataflowGraph

Description: A test for the DataflowGraph class. Test Points: 1) 
             Generic: load PTX files, convert them into dataflow graphs, verify that 
             all live ranges spanning blocks are consistent. 2) SSA: convert to 
             ssa form, verify that no register is declared more than once. 3) 
             reverse SSA: convert to ssa then out of ssa, verify that all live 
             ranges spanning blocks are consistent.


Test Seed : 1326212284
Test time : 1.64509e-05

Status : Testing Generic Dataflow
 Test Passed
Testing SSA Dataflow
 Test Passed
Testing SSA then back Dataflow
 Test Passed


(0.000499) DynamicExecutionManager.cpp:43:   ~DynamicExecutionManager()

INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaMalloc
INFO     Test completed in 0.101248025894 seconds
INFO      It produced the following output:
(0.000270) DynamicExecutionManager.cpp:37:   DynamicExecutionManager()
(0.000630) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
test_malloc(256, 128)
(0.001034) DynamicMulticoreDevice.cpp:53:   DynamicMulticoreDevice()
(0.001204) CudaWorkerThread.cpp:133:  CUDAWorker thread is alive, waiting for command.
PASSED
test_mallocArray(256, 128)
checking results from last cudaMemcpyFromArray
PASSED
[1] mallocing pitch
[2] memcpying2d
[3] memcpying
[4] checking for errors
[5] mallocing
[6] memcpying
[7] memcpying
[8] final free
Pass/Fail : Pass
(0.031379) CudaWorkerThread.cpp:181:  Received kill command, joining.
(0.031427) CudaWorkerThread.cpp:59:   Tearing down CUDA Worker Thread 3
(0.031526) DynamicExecutionManager.cpp:43:   ~DynamicExecutionManager()

INFO     
Passing tests:
 (0.040s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDataflowGraph : Passed
 (0.104s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMKernels : Passed
 (0.052s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaGlobals : Passed
 (0.061s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLexer : Passed
 (0.067s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXToLLVMTranslator : Passed
 (0.101s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaMalloc : Passed
 (0.061s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestEmulator : Passed
 (0.064s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestParser : Passed
 (0.058s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDeviceSwitching : Passed
 (0.052s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestInstructions : Passed
 (0.054s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMInstructions : Passed
 (0.048s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCalVectorScale : Passed
 (0.068s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestKernels : Passed

Failing tests:
 (0.088s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaSequence : Failed
 (0.056s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTexture2D : Did not complete.
 (0.050s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestIndirectFunctionCall : Did not complete.
 (0.055s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTextureArray : Did not complete.
 (0.048s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestExternalFunctions : Did not complete.
 (0.057s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXAssembly : Did not complete.
 (0.063s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestFunctionCall : Did not complete.

