INFO     Reading in test file /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/regression/full.level
INFO      Found the following tests:
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLexer
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestParser
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestEmulator
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestInstructions
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestKernels
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDataflowGraph
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMInstructions
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXToLLVMTranslator
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMKernels
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaMalloc
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTexture2D
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTextureArray
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaGlobals
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDeviceSwitching
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaSequence
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCalVectorScale
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXAssembly
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestFunctionCall
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestIndirectFunctionCall
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestExternalFunctions
INFO     ==== INDIVIDUAL TEST RESULTS ====

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDeviceSwitching 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMInstructions 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestFunctionCall 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTexture2D 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDeviceSwitching
INFO     Test completed in 0.0543870925903 seconds
INFO      It produced the following output:
(0.000680) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
Pass/Fail : Pass


Name : TestDeviceSwitching

Description: A unit test for the ability of the CUDA runtime to switch 
             between devices and use multiple threads Test Points: 1) In a single 
             threaded application, iterate across all devices launching the same 
             simple kernel each time 2) Test context migration support in 
             ocelot. Iterate across all devices, launching a simple kernel that 
             updates shared variable. Use the context switch mechanism to 
             migrate the shared data. 3) Test multi-threading support. Launch one 
             host thread to allocate memory, pass pointers to worker 
             threads, each of which should launch independent kernels in 
             parallel.


Test Seed : 1328039762
Test time : 0.000532866

Status : Test Point 1 Passed
Test Point 2 Passed
Test Point 3 Passed



INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestInstructions 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestFunctionCall
INFO     Test completed in 0.05508685112 seconds
INFO      It produced the following output:
(0.000474) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
(0.002381) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(kernel)
(0.002391) KernelPartitioningPass.cpp:58:   partitioning blocks at barriers
(0.002398) KernelPartitioningPass.cpp:92:     encountered 0 barriers
(0.002510) KernelPartitioningPass.cpp:110:  Partitioning kernel kernel
/*
* Ocelot Version : 2.1.1677
*/
.entry kernel(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{

	.param  .b32 param0;
	.param  .b32 retval0;
	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .pred %p7;
	.reg .s64 %r8;
	.reg .s64 %r9;
	.reg .f32 %r10;
	.reg .f32 %r11;
	$BB_2_0002:		/**/ 
		ld.param.u64 %r0, [kernel_param_0]; 
		ld.param.u32 %r1, [kernel_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %ntid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		setp.lt.s32 %p7, %r6, %r1; 
		@%p7 bra $BB_2_0004; 
	$BB_2_0003:		/**/ 
		exit; 
	$BB_2_0004:		/*BB1_2*/ 
		mul.wide.s32 %r8, %r6, 4; 
		add.s64 %r9, %r2, %r8; 
		ld.global.f32 %r10, [%r9]; 
		st.param.f32 [param0], %r10; 
		call.uni (retval0), square, (param0); 
		ld.param.f32 %r11, [retval0]; 
		st.global.f32 [%r9], %r11; 
		exit; 
}
(0.002700) KernelPartitioningPass.cpp:253:    Spill region size is 88
(0.002711) KernelPartitioningPass.cpp:147:  KernelGraph::_partitionMinimumSize()
(0.002722) KernelPartitioningPass.cpp:314:  Subkernel::create(kernel)
(0.002729) KernelPartitioningPass.cpp:341:  Subkernel::_create(kernel)
(0.002743) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.002756) KernelPartitioningPass.cpp:440:   adding block $BB_2_0002
(0.002770) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_2_0002 -> $BB_2_0003
(0.002781) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_2_0002 -> $BB_2_0004
(0.002789) KernelPartitioningPass.cpp:492:   ENTRY EDGE
(0.002796) KernelPartitioningPass.cpp:502:   creating internal edges
(0.002803) KernelPartitioningPass.cpp:506:   looking in block mapping: entry -> $BB_2_0002
(0.002809) KernelPartitioningPass.cpp:518:    adding internal edge: entry -> $BB_2_0002
(0.002817) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.002823) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.002831) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.002839) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_kernel_0(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[88];

	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .pred %p7;
	$BB_2_0002:		/**/ 
		ld.param.u64 %r0, [kernel_param_0]; 
		ld.param.u32 %r1, [kernel_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %ntid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		setp.lt.s32 %p7, %r6, %r1; 
		@%p7 bra $BB_2_0004; 
	$BB_2_0002_external_out_handler_to_2_0003:
	$BB_2_0002_external_out_handler_to_2_0004:
}
(0.002953) KernelPartitioningPass.cpp:314:  Subkernel::create(kernel)
(0.002960) KernelPartitioningPass.cpp:341:  Subkernel::_create(kernel)
(0.002973) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.002980) KernelPartitioningPass.cpp:440:   adding block $BB_2_0003
(0.002989) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_2_0003 -> exit
(0.002999) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_2_0002 -> $BB_2_0003
(0.003006) KernelPartitioningPass.cpp:502:   creating internal edges
(0.003013) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.003020) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.003027) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.003033) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_kernel_1(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[88];

	$BB_2_0003_external_in_handler__from_2_0002:
	$BB_2_0003:		/**/ 
		exit; 
	$BB_2_0003_external_out_handler_to_:
}
(0.003098) KernelPartitioningPass.cpp:314:  Subkernel::create(kernel)
(0.003105) KernelPartitioningPass.cpp:341:  Subkernel::_create(kernel)
(0.003117) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.003128) KernelPartitioningPass.cpp:440:   adding block $BB_2_0004
(0.003138) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_2_0004 -> exit
(0.003147) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_2_0002 -> $BB_2_0004
(0.003155) KernelPartitioningPass.cpp:502:   creating internal edges
(0.003161) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.003168) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.003175) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.003182) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_kernel_2(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[88];

	.reg .s64 %r8;
	.reg .s32 %r6;
	.reg .s64 %r9;
	.reg .s64 %r2;
	.reg .f32 %r10;
	.reg .f32 %r11;
	$BB_2_0004_external_in_handler__from_2_0002:
	$BB_2_0004:		/*BB1_2*/ 
		mul.wide.s32 %r8, %r6, 4; 
		add.s64 %r9, %r2, %r8; 
		ld.global.f32 %r10, [%r9]; 
		st.param.f32 [param0], %r10; 
		call.uni (retval0), square, (param0); 
		ld.param.f32 %r11, [retval0]; 
		st.global.f32 [%r9], %r11; 
		exit; 
	$BB_2_0004_external_out_handler_to_:
}
(0.003275) KernelPartitioningPass.cpp:169:  Linking external edges
(0.003283) KernelPartitioningPass.cpp:196:    linking $BB_2_0002_external_out_handler_to_2_0003 to $BB_2_0003_external_in_handler__from_2_0002 (entry 65536)
(0.003290) KernelPartitioningPass.cpp:196:    linking $BB_2_0002_external_out_handler_to_2_0004 to $BB_2_0004_external_in_handler__from_2_0002 (entry 131072)
(0.003296) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_2_0003 -> exit
(0.003302) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_2_0004 -> exit
(0.003342) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.003358) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.003365) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.003374) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_2_0002 -> $BB_2_0002_external_out_handler_to_2_0003 (2 live values
(0.003388) KernelPartitioningPass.cpp:853:        alive-out: 2 [type: s64]
(0.003402) KernelPartitioningPass.cpp:853:        alive-out: 6 [type: s32]
(0.003413) KernelPartitioningPass.cpp:984:    creating exit in block $BB_2_0002_external_out_handler_to_2_0003
(0.003427) KernelPartitioningPass.cpp:809:    adding $BB_2_0002 to frontierExitBlocks
(0.003438) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_2_0002 -> $BB_2_0002_external_out_handler_to_2_0004 (2 live values
(0.003447) KernelPartitioningPass.cpp:853:        alive-out: 2 [type: s64]
(0.003458) KernelPartitioningPass.cpp:853:        alive-out: 6 [type: s32]
(0.003467) KernelPartitioningPass.cpp:984:    creating exit in block $BB_2_0002_external_out_handler_to_2_0004
(0.003480) KernelPartitioningPass.cpp:809:    adding $BB_2_0002 to frontierExitBlocks
(0.003488) KernelPartitioningPass.cpp:813:  Barrier exits
(0.003495) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.003506) KernelPartitioningPass.cpp:899:   block $BB_2_0002 (2 external edges) terminator: @%p7 bra $BB_2_0004
(0.003513) KernelPartitioningPass.cpp:907:   1 external edge, modifying branch target to point to handler
(0.003520) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.003540) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.003548) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_kernel_0(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[88];

	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .pred %p7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	.reg .u32 %r12;
	.reg .u32 %r13;
	$BB_2_0002:		/**/ 
		ld.param.u64 %r0, [kernel_param_0]; 
		ld.param.u32 %r1, [kernel_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %ntid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		setp.lt.s32 %p7, %r6, %r1; 
		@%p7 bra $BB_2_0002_external_out_handler_to_2_0004; 
	$BB_2_0002_external_out_handler_to_2_0003:		// 2 live-out values 
		mov.s32 %r8, _Zocelot_spill_area; 
		st.local.s64 [%r8 + 16], %r2; 
		st.local.s32 [%r8 + 48], %r6; 
		mov.s32 %r9, _Zocelot_resume_status; 
		st.local.u32 [%r9], 8; 
		mov.s32 %r10, _Zocelot_resume_point; 
		st.local.u32 [%r10], 65536; 
		exit; 
	$BB_2_0002_external_out_handler_to_2_0004:		// 2 live-out values 
		mov.s32 %r11, _Zocelot_spill_area; 
		st.local.s64 [%r11 + 16], %r2; 
		st.local.s32 [%r11 + 48], %r6; 
		mov.s32 %r12, _Zocelot_resume_status; 
		st.local.u32 [%r12], 8; 
		mov.s32 %r13, _Zocelot_resume_point; 
		st.local.u32 [%r13], 131072; 
		exit; 
}
(0.003744) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.003755) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.003762) KernelPartitioningPass.cpp:773:      IN-edge: $BB_2_0003_external_in_handler__from_2_0002 -> $BB_2_0003 (2 live values
(0.003773) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.003780) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_2_0003 -> $BB_2_0003_external_out_handler_to_ (0 live values
(0.003788) KernelPartitioningPass.cpp:984:    creating exit in block $BB_2_0003_external_out_handler_to_
(0.003801) KernelPartitioningPass.cpp:809:    adding $BB_2_0003 to frontierExitBlocks
(0.003808) KernelPartitioningPass.cpp:813:  Barrier exits
(0.003815) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.003822) KernelPartitioningPass.cpp:899:   block $BB_2_0003 (1 external edges) terminator: exit
(0.003829) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.003838) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.003843) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_kernel_1(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[88];

	.reg .u32 %r1;
	.reg .u32 %r2;
	$BB_2_0003_external_in_handler__from_2_0002:		// 2 live-in values 
		bra $BB_2_0003; 
	$BB_2_0003:		/**/ 
		bra $BB_2_0003_external_out_handler_to_; 
	$BB_2_0003_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r1, _Zocelot_resume_status; 
		st.local.u32 [%r1], 6; 
		mov.s32 %r2, _Zocelot_resume_point; 
		st.local.u32 [%r2], 0; 
		exit; 
}
(0.003936) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.003947) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.003954) KernelPartitioningPass.cpp:773:      IN-edge: $BB_2_0004_external_in_handler__from_2_0002 -> $BB_2_0004 (2 live values
(0.003963) KernelPartitioningPass.cpp:853:        alive-out: 2 [type: s64]
(0.003974) KernelPartitioningPass.cpp:853:        alive-out: 6 [type: s32]
(0.003985) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.003993) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_2_0004 -> $BB_2_0004_external_out_handler_to_ (0 live values
(0.004001) KernelPartitioningPass.cpp:984:    creating exit in block $BB_2_0004_external_out_handler_to_
(0.004015) KernelPartitioningPass.cpp:809:    adding $BB_2_0004 to frontierExitBlocks
(0.004032) KernelPartitioningPass.cpp:813:  Barrier exits
(0.004040) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.004047) KernelPartitioningPass.cpp:899:   block $BB_2_0004 (1 external edges) terminator: exit
(0.004054) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.004064) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.004070) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_kernel_2(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[88];

	.reg .s64 %r8;
	.reg .s32 %r6;
	.reg .s64 %r9;
	.reg .s64 %r2;
	.reg .f32 %r10;
	.reg .f32 %r11;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r12;
	$BB_2_0004_external_in_handler__from_2_0002:		// 2 live-in values 
		mov.s32 %r12, _Zocelot_spill_area; 
		ld.local.s64 %r2, [%r12 + 16]; 
		ld.local.s32 %r6, [%r12 + 48]; 
		bra $BB_2_0004; 
	$BB_2_0004:		/*BB1_2*/ 
		mul.wide.s32 %r8, %r6, 4; 
		add.s64 %r9, %r2, %r8; 
		ld.global.f32 %r10, [%r9]; 
		st.param.f32 [param0], %r10; 
		call.uni (retval0), square, (param0); 
		ld.param.f32 %r11, [retval0]; 
		st.global.f32 [%r9], %r11; 
		bra $BB_2_0004_external_out_handler_to_; 
	$BB_2_0004_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r13, _Zocelot_resume_status; 
		st.local.u32 [%r13], 6; 
		mov.s32 %r14, _Zocelot_resume_point; 
		st.local.u32 [%r14], 0; 
		exit; 
}
(0.004225) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(ocelot/cuda/test/functions/simpleFunc.cu)
(0.004247) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(kernel)
(0.004262) DynamicTranslationCache.cpp:1120: __translateKernel()
(0.004270) DynamicTranslationCache.cpp:1141:   translating subkernel _subkernel_kernel_0
(0.004301) DynamicTranslationCache.cpp:1154:   Converting from PTX IR to LLVM IR.
(0.005580) DynamicTranslationCache.cpp:1171: translated PTX to LLVM
(0.005589) DynamicTranslationCache.cpp:1172: ; Code assembled by Ocelot LLVMKernel 2.1.1677


%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* };

%Dimension = type { i32, i32, i32 };
define default void @_Z_ocelotTranslated__subkernel_kernel_0( %LLVMContext* %__ctaContext ) nounwind align 1;
{
$BB_2_0002:
	%rt0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8;
	%rt1 = load i8** %rt0;
	%rt2 = bitcast i8* %rt1 to i64*;
	%r0 = load i64* %rt2, align 8;
	%rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8;
	%rt5 = load i8** %rt4;
	%rt3 = getelementptr i8* %rt5, i32 8;
	%rt6 = bitcast i8* %rt3 to i32*;
	%r1 = load i32* %rt6, align 4;
	%r2 = bitcast i64 %r0 to i64;
	%rt7 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 0;
	%rt8 = load i32* %rt7;
	%r3 = bitcast i32 %rt8 to i32;
	%rt9 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 0;
	%rt10 = load i32* %rt9;
	%r4 = bitcast i32 %rt10 to i32;
	%rt11 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 0;
	%rt12 = load i32* %rt11;
	%r5 = bitcast i32 %rt12 to i32;
	%rt13 = mul i32 %r3, %r4;
	%r6 = add i32 %r5, %rt13;
	%r7 = icmp slt i32 %r6, %r1;
	br i1 %r7, label %$BB_2_0002_external_out_handler_to_2_0004, label %$BB_2_0002_external_out_handler_to_2_0003;
$BB_2_0002_external_out_handler_to_2_0003:
	%r8 = phi i64 [ %r2, %$BB_2_0002 ];
	%r9 = phi i32 [ %r6, %$BB_2_0002 ];
	%r10 = bitcast i32 8 to i32;
	%rt14 = zext i32 %r10 to i64;
	%rt15 = add i64 %rt14, 16;
	%rt16 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt17 = load i8** %rt16;
	%rt18 = ptrtoint i8* %rt17 to i64;
	%rt19 = add i64 %rt15, %rt18;
	%rt20 = inttoptr i64 %rt19 to i64*;
	store i64 %r8, i64* %rt20, align 8;
	%rt21 = zext i32 %r10 to i64;
	%rt22 = add i64 %rt21, 48;
	%rt23 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt24 = load i8** %rt23;
	%rt25 = ptrtoint i8* %rt24 to i64;
	%rt26 = add i64 %rt22, %rt25;
	%rt27 = inttoptr i64 %rt26 to i32*;
	store i32TestFunctionCall: ocelot/executive/implementation/DynamicTranslationCache.cpp:885: void setupCallTargets(ir::PTXKernel&, const executive::DynamicTranslationCache&): Assertion `0 && "arbitrary function calls not yet supported"' failed.
 %r9, i32* %rt27, align 4;
	%r11 = bitcast i32 4 to i32;
	%rt28 = zext i32 %r11 to i64;
	%rt29 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt30 = load i8** %rt29;
	%rt31 = ptrtoint i8* %rt30 to i64;
	%rt32 = add i64 %rt28, %rt31;
	%rt33 = inttoptr i64 %rt32 to i32*;
	store i32 8, i32* %rt33, align 4;
	%r12 = bitcast i32 0 to i32;
	%rt34 = zext i32 %r12 to i64;
	%rt35 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt36 = load i8** %rt35;
	%rt37 = ptrtoint i8* %rt36 to i64;
	%rt38 = add i64 %rt34, %rt37;
	%rt39 = inttoptr i64 %rt38 to i32*;
	store i32 65536, i32* %rt39, align 4;
	br label %exit;
	ret void;
$BB_2_0002_external_out_handler_to_2_0004:
	%r13 = phi i64 [ %r2, %$BB_2_0002 ];
	%r14 = phi i32 [ %r6, %$BB_2_0002 ];
	%r15 = bitcast i32 8 to i32;
	%rt40 = zext i32 %r15 to i64;
	%rt41 = add i64 %rt40, 16;
	%rt42 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt43 = load i8** %rt42;
	%rt44 = ptrtoint i8* %rt43 to i64;
	%rt45 = add i64 %rt41, %rt44;
	%rt46 = inttoptr i64 %rt45 to i64*;
	store i64 %r13, i64* %rt46, align 8;
	%rt47 = zext i32 %r15 to i64;
	%rt48 = add i64 %rt47, 48;
	%rt49 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt50 = load i8** %rt49;
	%rt51 = ptrtoint i8* %rt50 to i64;
	%rt52 = add i64 %rt48, %rt51;
	%rt53 = inttoptr i64 %rt52 to i32*;
	store i32 %r14, i32* %rt53, align 4;
	%r16 = bitcast i32 4 to i32;
	%rt54 = zext i32 %r16 to i64;
	%rt55 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt56 = load i8** %rt55;
	%rt57 = ptrtoint i8* %rt56 to i64;
	%rt58 = add i64 %rt54, %rt57;
	%rt59 = inttoptr i64 %rt58 to i32*;
	store i32 8, i32* %rt59, align 4;
	%r17 = bitcast i32 0 to i32;
	%rt60 = zext i32 %r17 to i64;
	%rt61 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt62 = load i8** %rt61;
	%rt63 = ptrtoint i8* %rt62 to i64;
	%rt64 = add i64 %rt60, %rt63;
	%rt65 = inttoptr i64 %rt64 to i32*;
	store i32 131072, i32* %rt65, align 4;
	br label %exit;
	ret void;
exit:
	ret void;

}

(0.006255) DynamicTranslationCache.cpp:1141:   translating subkernel _subkernel_kernel_1
(0.006275) DynamicTranslationCache.cpp:1154:   Converting from PTX IR to LLVM IR.
(0.006566) DynamicTranslationCache.cpp:1171: translated PTX to LLVM
(0.006574) DynamicTranslationCache.cpp:1172: ; Code assembled by Ocelot LLVMKernel 2.1.1677


%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* };

%Dimension = type { i32, i32, i32 };
define default void @_Z_ocelotTranslated__subkernel_kernel_1( %LLVMContext* %__ctaContext ) nounwind align 1;
{
$BB_2_0003_external_in_handler__from_2_0002:
	br label %$BB_2_0003;
$BB_2_0003:
	br label %$BB_2_0003_external_out_handler_to_;
$BB_2_0003_external_out_handler_to_:
	%r0 = bitcast i32 4 to i32;
	%rt0 = zext i32 %r0 to i64;
	%rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt2 = load i8** %rt1;
	%rt3 = ptrtoint i8* %rt2 to i64;
	%rt4 = add i64 %rt0, %rt3;
	%rt5 = inttoptr i64 %rt4 to i32*;
	store i32 6, i32* %rt5, align 4;
	%r1 = bitcast i32 0 to i32;
	%rt6 = zext i32 %r1 to i64;
	%rt7 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt8 = load i8** %rt7;
	%rt9 = ptrtoint i8* %rt8 to i64;
	%rt10 = add i64 %rt6, %rt9;
	%rt11 = inttoptr i64 %rt10 to i32*;
	store i32 0, i32* %rt11, align 4;
	br label %exit;
	ret void;
exit:
	ret void;

}

(0.006714) DynamicTranslationCache.cpp:1141:   translating subkernel _subkernel_kernel_2

INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTexture2D
INFO     Test completed in 0.058235168457 seconds
INFO      It produced the following output:
(0.000515) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
failed to bind texture: cudaErrorInvalidValue

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXToLLVMTranslator -i ../tests/ptx 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMInstructions
INFO     Test completed in 0.0599708557129 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestLLVMInstructions

Description: A test for the assembly code generation and automatic 
             verfication of individual LLVM instructions. Test Points: 1) For each 
             instruction, generate several assembly strings using the 
             instruction's toString method, make sure that these pass the valid() 
             check, compare to references from the LLVM manual.


Test Seed : 1328039762
Test time : 0.00523162

Status :  Checked instruction "<result> = add i32 4, %var"
Add Instruction Passed
 Checked instruction "%ptr = alloca i32"
 Checked instruction "%ptr = alloca i32, i32 4"
 Checked instruction "%ptr = alloca i32, i32 4, align 1024"
 Checked instruction "%ptr = alloca i32, align 1024"
Alloca Instruction Passed
 Checked instruction "<result> = and i32 4, %var"
 Checked instruction "<result> = and i32 15, 40"
 Checked instruction "<result> = and i32 4, 8"
And Instruction Passed
 Checked instruction "<result> = ashr i32 4, 1"
 Checked instruction "<result> = ashr i8 -2, 1"
 Checked instruction "<result> = ashr < 2 x i32 > < i32 -2, i32 4 >, < i32 1, i32 3 >"
Ashr Instruction Passed
 Checked instruction "%X = bitcast i8 -1 to i8"
 Checked instruction "%Z = bitcast < 2 x i32 > %V to i64"
Bitcast Instruction Passed
 Checked instruction "br i1 %cond, label %IfEqual, label %IfUnequal"
Br Instruction Passed
 Checked instruction "%retval = call i32 @test(i32 %argc)"
 Checked instruction "call i32 (i8*, ...)* @printf(i8* %msg, i32 12, i8 42)"
 Checked instruction "%X = tail call i32 @foo()"
 Checked instruction "%Y = tail call fastcc i32 @foo()"
 Checked instruction "call void @foo(i8 97 signext)"
 Checked instruction "%r = call %struct.A @foo()"
 Checked instruction "call void @foo() noreturn"
 Checked instruction "%ZZ = call zeroext i32 @bar()"
Call Instruction Passed
 Checked instruction "%result = extractelement < 4 x i32 > %vec, i32 0"
Extractelement Instruction Passed
 Checked instruction "%result = extractvalue { i32, float } %agg, 0"
Extractvalue Instruction Passed
 Checked instruction "<result> = fadd float 0x4010000000000000, %var"
Fadd Instruction Passed
 Checked instruction "<result> = fcmp oeq float 0x4010000000000000, 0x4014000000000000"
 Checked instruction "<result> = fcmp one float 0x4010000000000000, 0x4014000000000000"
 Checked instruction "<result> = fcmp olt float 0x4010000000000000, 0x4014000000000000"
 Checked instruction "<result> = fcmp ueq float 0x3ff0000000000000, 0x4000000000000000"
Fcmp Instruction Passed
 Checked instruction "<result> = fdiv float 0x4010000000000000, %var"
Fdiv Instruction Passed
 Checked instruction "<result> = fmul float 0x4010000000000000, %var"
Fmul Instruction Passed
 Checked instruction "%X = fpext float 0x400921cac0000000 to double"
 Checked instruction "%Y = fpext float 0x3ff0000000000000 to float"
Fpext Instruction Passed
 Checked instruction "%X = fptosi double 0xc05ec00000000000 to i32"
Fptosi Instruction Passed
 Checked instruction "%X = fptoui double 0x405ec00000000000 to i32"
Fptoui Instruction Passed
 Checked instruction "%X = fptrunc double 0x405ec00000000000 to float"
Fptrunc Instruction Passed
 Checked instruction "free [ 4 x i8 ]* %array"
Free Instruction Passed
 Checked instruction "<result> = frem float 0x4010000000000000, %var"
Frem Instruction Passed
 Checked instruction "<result> = fsub float 0x0, %val"
Fsub Instruction Passed
 Checked instruction "%vptr = getelementptr { i32, < 2 x i8 > }* %svptr, i32 0, i32 1, i32 1"
 Checked instruction "%eptr = getelementptr [ 12 x i8 ]* %aptr, i32 0, i32 1"
Getelementptr Instruction Passed
 Checked instruction "<result> = icmp ne float* %X, %X"
Icmp Instruction Passed
 Checked instruction "%result = insertelement < 4 x i32 > %vec, i32 1, i32 0"
Insertelement Instruction Passed
 Checked instruction "%result = insertvalue { i32, float } %agg, i32 1, 0"
Insertvalue Instruction Passed
 Checked instruction "%Y = inttoptr i64 0 to i32*"
Inttoptr Instruction Passed
 Checked instruction "%retval = invoke i32 @Test(i32 15) to label %Continue unwind label %TestCleanup"
Invoke Instruction Passed
 Checked instruction "%val = load i32* %ptr"
Load Instruction Passed
 Checked instruction "<result> = lshr i8 -2, 1"
Lshr Instruction Passed
 Checked instruction "%array2 = malloc [ 12 x i8 ], i32 %size"
Malloc Instruction Passed
 Checked instruction "<result> = mul i32 4, %var"
Mul Instruction Passed
 Checked instruction "<result> = or i32 15, 40"
Or Instruction Passed
 Checked instruction "%indvar = phi i32 [ 0, %LoopHeader ], [ %nextindvar, %Loop ]"
Phi Instruction Passed
 Checked instruction "%Y = ptrtoint i32* %x to i64"
Prtoint Instruction Passed
 Checked instruction "ret void"
Ret Instruction Passed
 Checked instruction "<result> = sdiv i32 4, %var"
Sdiv Instruction Passed
 Checked instruction "%X = select i1 1, i8 17, i8 42"
Select Instruction Passed
 Checked instruction "%X = sext i8 -1 to i16"
Sext Instruction Passed
 Checked instruction "<result> = shl i32 1, 32"
Shl Instruction Passed
 Checked instruction "%result = shufflevector < 4 x i32 > %v1, < 4 x i32 > %v2, < 8 x i32 > < i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7 >"
ShuffleVector Instruction Passed
 Checked instruction "%X = sitofp i32 257 to float"
Sitofp Instruction Passed
 Checked instruction "<result> = srem i32 4, %var"
Srem Instruction Passed
 Checked instruction "store i32 3, i32* %ptr"
Store Instruction Passed
 Checked instruction "<result> = sub i32 4, %var"
Sub Instruction Passed
 Checked instruction "switch i32 %val, label %otherwise [ i32 0, label %onzero i32 1, label %onone i32 2, label %ontwo ]"
Switch Instruction Passed
 Checked instruction "%Y = trunc i32 123 to i1"
Trunc Instruction Passed
 Checked instruction "<result> = udiv i32 4, %var"
Udiv Instruction Passed
 Checked instruction "%Y = uitofp i8 -1 to double"
Uitofp Instruction Passed
 Checked instruction "unreachable"
Unreachable Instruction Passed
 Checked instruction "unwind"
Unwind Instruction Passed
 Checked instruction "<result> = urem i32 4, %var"
Urem Instruction Passed
 Checked instruction "%tmp = va_arg i8** %ap, i32"
VarArg Instruction Passed
 Checked instruction "<result> = xor i32 -1, %V"
Xor Instruction Passed
 Checked instruction "%X = zext i32 257 to i64"
Zext Instruction Passed



INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLexer -i ../tests/ptx 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaSequence 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestInstructions
INFO     Test completed in 0.0634150505066 seconds
INFO      It produced the following output:
(0.002993) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
Pass/Fail : Pass


Name : TestInstructions

Description: 


Test Seed : 1328039762
Test time : 0.000597239

Status : Test output:
Accessors test passed.
pass: load and store instructions
Abs test passed.
pass: arithmetic instructions
pass: exotic arithmetic instructions
pass: floating-point instructions
pass: logical instructions
pass: comparison instructions
pass: predicated Add and Ld isntructions



INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestIndirectFunctionCall 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXToLLVMTranslator
INFO     Test completed in 0.0631649494171 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestPTXToLLVMTranslator

Description: This is a basic test that just tries to get through a 
             translation successfully of as many PTX programs as possible Test 
             Points: 1) Scan for all PTX files in a directory, try to 
             translate them.


Test Seed : 1328039762
Test time : 1.50204e-05

Status : 


INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTextureArray 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLexer
INFO     Test completed in 0.0659391880035 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestLexer

Description: Tests for the PTX lexer. Test Point 1: Scan a PTX file and 
             write out a temp stream, scan the stream again and make sure that the 
             two sets of tokens match


Test Seed : 1328039762
Test time : 1.62125e-05

Status : 


INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestKernels 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaSequence
INFO     Test completed in 0.0708439350128 seconds
INFO      It produced the following output:
(0.000526) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
sequence() - A_gpu = 0x01e03500
(0.003948) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(sequence)
(0.003959) KernelPartitioningPass.cpp:58:   partitioning blocks at barriers
(0.003966) KernelPartitioningPass.cpp:92:     encountered 0 barriers
(0.004067) KernelPartitioningPass.cpp:110:  Partitioning kernel sequence
/*
* Ocelot Version : 2.1.1677
*/
.entry sequence(.param  .u64 sequence_param_0,
		.param  .u32 sequence_param_1)
{

	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .pred %p7;
	.reg .s32 %r8;
	.reg .s64 %r9;
	.reg .s64 %r10;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [sequence_param_0]; 
		ld.param.u32 %r1, [sequence_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ntid.x; 
		mov.u32 %r4, %ctaid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		setp.lt.s32 %p7, %r6, %r1; 
		@%p7 bra $BB_1_0004; 
	$BB_1_0003:		/**/ 
		exit; 
	$BB_1_0004:		/*BB0_2*/ 
		shl.b32 %r8, %r6, 1; 
		mul.wide.s32 %r9, %r6, 4; 
		add.s64 %r10, %r2, %r9; 
		st.global.u32 [%r10], %r8; 
		exit; 
}
(0.004230) KernelPartitioningPass.cpp:253:    Spill region size is 80
(0.004241) KernelPartitioningPass.cpp:147:  KernelGraph::_partitionMinimumSize()
(0.004251) KernelPartitioningPass.cpp:314:  Subkernel::create(sequence)
(0.004259) KernelPartitioningPass.cpp:341:  Subkernel::_create(sequence)
(0.004274) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.004286) KernelPartitioningPass.cpp:440:   adding block $BB_1_0002
(0.004300) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_1_0002 -> $BB_1_0003
(0.004311) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_1_0002 -> $BB_1_0004
(0.004319) KernelPartitioningPass.cpp:492:   ENTRY EDGE
(0.004327) KernelPartitioningPass.cpp:502:   creating internal edges
(0.004367) KernelPartitioningPass.cpp:506:   looking in block mapping: entry -> $BB_1_0002
(0.004375) KernelPartitioningPass.cpp:518:    adding internal edge: entry -> $BB_1_0002
(0.004382) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.004389) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.004398) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.004405) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_sequence_0(.param  .u64 sequence_param_0,
		.param  .u32 sequence_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[80];

	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .pred %p7;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [sequence_param_0]; 
		ld.param.u32 %r1, [sequence_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ntid.x; 
		mov.u32 %r4, %ctaid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		setp.lt.s32 %p7, %r6, %r1; 
		@%p7 bra $BB_1_0004; 
	$BB_1_0002_external_out_handler_to_1_0003:
	$BB_1_0002_external_out_handler_to_1_0004:
}
(0.004519) KernelPartitioningPass.cpp:314:  Subkernel::create(sequence)
(0.004526) KernelPartitioningPass.cpp:341:  Subkernel::_create(sequence)
(0.004538) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.004546) KernelPartitioningPass.cpp:440:   adding block $BB_1_0003
(0.004555) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_1_0003 -> exit
(0.004563) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_1_0002 -> $BB_1_0003
(0.004570) KernelPartitioningPass.cpp:502:   creating internal edges
(0.004577) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.004583) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.004590) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.004596) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_sequence_1(.param  .u64 sequence_param_0,
		.param  .u32 sequence_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[80];

	$BB_1_0003_external_in_handler__from_1_0002:
	$BB_1_0003:		/**/ 
		exit; 
	$BB_1_0003_external_out_handler_to_:
}
(0.004670) KernelPartitioningPass.cpp:314:  Subkernel::create(sequence)
(0.004677) KernelPartitioningPass.cpp:341:  Subkernel::_create(sequence)
(0.004689) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.004698) KernelPartitioningPass.cpp:440:   adding block $BB_1_0004
(0.004707) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_1_0004 -> exit
(0.004716) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_1_0002 -> $BB_1_0004
(0.004723) KernelPartitioningPass.cpp:502:   creating internal edges
(0.004729) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.004736) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.004743) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.004749) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_sequence_2(.param  .u64 sequence_param_0,
		.param  .u32 sequence_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[80];

	.reg .s32 %r8;
	.reg .s32 %r6;
	.reg .s64 %r9;
	.reg .s64 %r10;
	.reg .s64 %r2;
	$BB_1_0004_external_in_handler__from_1_0002:
	$BB_1_0004:		/*BB0_2*/ 
		shl.b32 %r8, %r6, 1; 
		mul.wide.s32 %r9, %r6, 4; 
		add.s64 %r10, %r2, %r9; 
		st.global.u32 [%r10], %r8; 
		exit; 
	$BB_1_0004_external_out_handler_to_:
}
(0.004825) KernelPartitioningPass.cpp:169:  Linking external edges
(0.004833) KernelPartitioningPass.cpp:196:    linking $BB_1_0002_external_out_handler_to_1_0003 to $BB_1_0003_external_in_handler__from_1_0002 (entry 65536)
(0.004839) KernelPartitioningPass.cpp:196:    linking $BB_1_0002_external_out_handler_to_1_0004 to $BB_1_0004_external_in_handler__from_1_0002 (entry 131072)
(0.004846) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_1_0003 -> exit
(0.004853) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_1_0004 -> exit
(0.004893) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.004909) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.004916) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.004925) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_1_0003 (2 live values
(0.004940) KernelPartitioningPass.cpp:853:        alive-out: 2 [type: s64]
(0.004956) KernelPartitioningPass.cpp:853:        alive-out: 6 [type: s32]
(0.004967) KernelPartitioningPass.cpp:984:    creating exit in block $BB_1_0002_external_out_handler_to_1_0003
(0.004982) KernelPartitioningPass.cpp:809:    adding $BB_1_0002 to frontierExitBlocks
(0.004993) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_1_0004 (2 live values
(0.005002) KernelPartitioningPass.cpp:853:        alive-out: 2 [type: s64]
(0.005013) KernelPartitioningPass.cpp:853:        alive-out: 6 [type: s32]
(0.005023) KernelPartitioningPass.cpp:984:    creating exit in block $BB_1_0002_external_out_handler_to_1_0004
(0.005036) KernelPartitioningPass.cpp:809:    adding $BB_1_0002 to frontierExitBlocks
(0.005044) KernelPartitioningPass.cpp:813:  Barrier exits
(0.005052) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.005063) KernelPartitioningPass.cpp:899:   block $BB_1_0002 (2 external edges) terminator: @%p7 bra $BB_1_0004
(0.005070) KernelPartitioningPass.cpp:907:   1 external edge, modifying branch target to point to handler
(0.005077) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.005088) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.005095) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_sequence_0(.param  .u64 sequence_param_0,
		.param  .u32 sequence_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[80];

	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .pred %p7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	.reg .u32 %r12;
	.reg .u32 %r13;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [sequence_param_0]; 
		ld.param.u32 %r1, [sequence_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ntid.x; 
		mov.u32 %r4, %ctaid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		setp.lt.s32 %p7, %r6, %r1; 
		@%p7 bra $BB_1_0002_external_out_handler_to_1_0004; 
	$BB_1_0002_external_out_handler_to_1_0003:		// 2 live-out values 
		mov.s32 %r8, _Zocelot_spill_area; 
		st.local.s64 [%r8 + 16], %r2; 
		st.local.s32 [%r8 + 48], %r6; 
		mov.s32 %r9, _Zocelot_resume_status; 
		st.local.u32 [%r9], 8; 
		mov.s32 %r10, _Zocelot_resume_point; 
		st.local.u32 [%r10], 65536; 
		exit; 
	$BB_1_0002_external_out_handler_to_1_0004:		// 2 live-out values 
		mov.s32 %r11, _Zocelot_spill_area; 
		st.local.s64 [%r11 + 16], %r2; 
		st.local.s32 [%r11 + 48], %r6; 
		mov.s32 %r12, _Zocelot_resume_status; 
		st.local.u32 [%r12], 8; 
		mov.s32 %r13, _Zocelot_resume_point; 
		st.local.u32 [%r13], 131072; 
		exit; 
}
(0.005306) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.005317) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.005324) KernelPartitioningPass.cpp:773:      IN-edge: $BB_1_0003_external_in_handler__from_1_0002 -> $BB_1_0003 (2 live values
(0.005336) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.005343) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_1_0003 -> $BB_1_0003_external_out_handler_to_ (0 live values
(0.005352) KernelPartitioningPass.cpp:984:    creating exit in block $BB_1_0003_external_out_handler_to_
(0.005365) KernelPartitioningPass.cpp:809:    adding $BB_1_0003 to frontierExitBlocks
(0.005373) KernelPartitioningPass.cpp:813:  Barrier exits
(0.005379) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.005387) KernelPartitioningPass.cpp:899:   block $BB_1_0003 (1 external edges) terminator: exit
(0.005394) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.005403) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.005409) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_sequence_1(.param  .u64 sequence_param_0,
		.param  .u32 sequence_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[80];

	.reg .u32 %r1;
	.reg .u32 %r2;
	$BB_1_0003_external_in_handler__from_1_0002:		// 2 live-in values 
		bra $BB_1_0003; 
	$BB_1_0003:		/**/ 
		bra $BB_1_0003_external_out_handler_to_; 
	$BB_1_0003_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r1, _Zocelot_resume_status; 
		st.local.u32 [%r1], 6; 
		mov.s32 %r2, _Zocelot_resume_point; 
		st.local.u32 [%r2], 0; 
		exit; 
}
(0.005504) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.005516) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.005523) KernelPartitioningPass.cpp:773:      IN-edge: $BB_1_0004_external_in_handler__from_1_0002 -> $BB_1_0004 (2 live values
(0.005532) KernelPartitioningPass.cpp:853:        alive-out: 2 [type: s64]
(0.005544) KernelPartitioningPass.cpp:853:        alive-out: 6 [type: s32]
(0.005556) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.005563) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_1_0004 -> $BB_1_0004_external_out_handler_to_ (0 live values
(0.005572) KernelPartitioningPass.cpp:984:    creating exit in block $BB_1_0004_external_out_handler_to_
(0.005584) KernelPartitioningPass.cpp:809:    adding $BB_1_0004 to frontierExitBlocks
(0.005592) KernelPartitioningPass.cpp:813:  Barrier exits
(0.005598) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.005606) KernelPartitioningPass.cpp:899:   block $BB_1_0004 (1 external edges) terminator: exit
(0.005621) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.005630) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.005636) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_sequence_2(.param  .u64 sequence_param_0,
		.param  .u32 sequence_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[80];

	.reg .s32 %r8;
	.reg .s32 %r6;
	.reg .s64 %r9;
	.reg .s64 %r10;
	.reg .s64 %r2;
	.reg .u32 %r12;
	.reg .u32 %r13;
	.reg .u32 %r11;
	$BB_1_0004_external_in_handler__from_1_0002:		// 2 live-in values 
		mov.s32 %r11, _Zocelot_spill_area; 
		ld.local.s64 %r2, [%r11 + 16]; 
		ld.local.s32 %r6, [%r11 + 48]; 
		bra $BB_1_0004; 
	$BB_1_0004:		/*BB0_2*/ 
		shl.b32 %r8, %r6, 1; 
		mul.wide.s32 %r9, %r6, 4; 
		add.s64 %r10, %r2, %r9; 
		st.global.u32 [%r10], %r8; 
		bra $BB_1_0004_external_out_handler_to_; 
	$BB_1_0004_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r12, _Zocelot_resume_status; 
		st.local.u32 [%r12], 6; 
		mov.s32 %r13, _Zocelot_resume_point; 
		st.local.u32 [%r13], 0; 
		exit; 
}
(0.005780) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(ocelot/cuda/test/kernels/sequence.cu)
(0.005802) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(sequence)
(0.005817) DynamicTranslationCache.cpp:1120: __translateKernel()
(0.005826) DynamicTranslationCache.cpp:1141:   translating subkernel _subkernel_sequence_0
(0.005860) DynamicTranslationCache.cpp:1154:   Converting from PTX IR to LLVM IR.
(0.007051) DynamicTranslationCache.cpp:1171: translated PTX to LLVM
(0.007061) DynamicTranslationCache.cpp:1172: ; Code assembled by Ocelot LLVMKernel 2.1.1677


%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* };

%Dimension = type { i32, i32, i32 };
define default void @_Z_ocelotTranslated__subkernel_sequence_0( %LLVMContext* %__ctaContext ) nounwind align 1;
{
$BB_1_0002:
	%rt0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8;
	%rt1 = load i8** %rt0;
	%rt2 = bitcast i8* %rt1 to i64*;
	%r0 = load i64* %rt2, align 8;
	%rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8;
	%rt5 = load i8** %rt4;
	%rt3 = getelementptr i8* %rt5, i32 8;
	%rt6 = bitcast i8* %rt3 to i32*;
	%r1 = load i32* %rt6, align 4;
	%r2 = bitcast i64 %r0 to i64;
	%rt7 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 0;
	%rt8 = load i32* %rt7;
	%r3 = bitcast i32 %rt8 to i32;
	%rt9 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 0;
	%rt10 = load i32* %rt9;
	%r4 = bitcast i32 %rt10 to i32;
	%rt11 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 0;
	%rt12 = load i32* %rt11;
	%r5 = bitcast i32 %rt12 to i32;
	%rt13 = mul i32 %r3, %r4;
	%r6 = add i32 %r5, %rt13;
	%r7 = icmp slt i32 %r6, %r1;
	br i1 %r7, label %$BB_1_0002_external_out_handler_to_1_0004, label %$BB_1_0002_external_out_handler_to_1_0003;
$BB_1_0002_external_out_handler_to_1_0003:
	%r8 = phi i64 [ %r2, %$BB_1_0002 ];
	%r9 = phi i32 [ %r6, %$BB_1_0002 ];
	%r10 = bitcast i32 8 to i32;
	%rt14 = zext i32 %r10 to i64;
	%rt15 = add i64 %rt14, 16;
	%rt16 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt17 = load i8** %rt16;
	%rt18 = ptrtoint i8* %rt17 to i64;
	%rt19 = add i64 %rt15, %rt18;
	%rt20 = inttoptr i64 %rt19 to i64*;
	store i64 %r8, i64* %rt20, align 8;
	%rt21 = zext i32 %r10 to i64;
	%rt22 = add i64 %rt21, 48;
	%rt23 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt24 = load i8** %rt23;
	%rt25 = ptrtoint i8* %rt24 to i64;
	%rt26 = add i64 %rt22, %rt25;
	%rt27 = inttoptr i64 %rt26 to i32*;
	store i32 %r9, i32* %rt27, align 4;
	%r11 = bitcast i32 4 to i32;
	%rt28 = zext i32 %r11 to i64;
	%rt29 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt30 = load i8** %rt29;
	%rt31 = ptrtoint i8* %rt30 to i64;
	%rt32 = add i64 %rt28, %rt31;
	%rt33 = inttoptr i64 %rt32 to i32*;
	store i32 8, i32* %rt33, align 4;
	%r12 = bitcast i32 0 to i32;
	%rt34 = zext i32 %r12 to i64;
	%rt35 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt36 = load i8** %rt35;
	%rt37 = ptrtoint i8* %rt36 to i64;
	%rt38 = add i64 %rt34, %rt37;
	%rt39 = inttoptr i64 %rt38 to i32*;
	store i32 65536, i32* %rt39, align 4;
	br label %exit;
	ret void;
$BB_1_0002_external_out_handler_to_1_0004:
	%r13 = phi i64 [ %r2, %$BB_1_0002 ];
	%r14 = phi i32 [ %r6, %$BB_1_0002 ];
	%r15 = bitcast i32 8 to i32;
	%rt40 = zext i32 %r15 to i64;
	%rt41 = add i64 %rt40, 16;
	%rt42 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt43 = load i8** %rt42;
	%rt44 = ptrtoint i8* %rt43 to i64;
	%rt45 = add i64 %rt41, %rt44;
	%rt46 = inttoptr i64 %rt45 to i64*;
	store i64 %r13, i64* %rt46, align 8;
	%rt47 = zext i32 %r15 to i64;
	%rt48 = add i64 %rt47, 48;
	%rt49 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt50 = load i8** %rt49;
	%rt51 = ptrtoint i8* %rt50 to i64;
	%rt52 = add i64 %rt48, %rt51;
	%rt53 = inttoptr i64 %rt52 to i32*;
	store i32 %r14, i32* %rt53, align 4;
	%r16 = bitcast i32 4 to i32;
	%rt54 = zext i32 %r16 to i64;
	%rt55 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt56 = load i8** %rt55;
	%rt57 = ptrtoint i8* %rt56 to i64;
	%rt58 = add i64 %rt54, %rt57;
	%rt59 = inttoptr i64 %rt58 to i32*;
	store i32 8, i32* %rt59, align 4;
	%r17 = bitcast i32 0 to i32;
	%rt60 = zext i32 %r17 to i64;
	%rt61 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt62 = load i8** %rt61;
	%rt63 = ptrtoint i8* %rt62 to i64;
	%rt64 = add i64 %rt60, %rt63;
	%rt65 = inttoptr i64 %rt64 to i32*;
	store i32 131072, i32* %rt65, align 4;
	br label %exit;
	ret void;
exit:
	ret void;

}

(0.007678) DynamicTranslationCache.cpp:1141:   translating subkernel _subkernel_sequence_1
(0.007698) DynamicTranslationCache.cpp:1154:   Converting from PTX IR to LLVM IR.
(0.007987) DynamicTranslationCache.cpp:1171: translated PTX to LLVM
(0.007994) DynamicTranslationCache.cpp:1172: ; Code assembled by Ocelot LLVMKernel 2.1.1677


%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* };

%Dimension = type { i32, i32, i32 };
define default void @_Z_ocelotTranslated__subkernel_sequence_1( %LLVMContext* %__ctaContext ) nounwind align 1;
{
$BB_1_0003_external_in_handler__from_1_0002:
	br label %$BB_1_0003;
$BB_1_0003:
	br label %$BB_1_0003_external_out_handler_to_;
$BB_1_0003_external_out_handler_to_:
	%r0 = bitcast i32 4 to i32;
	%rt0 = zext i32 %r0 to i64;
	%rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt2 = load i8** %rt1;
	%rt3 = ptrtoint i8* %rt2 to i64;
	%rt4 = add i64 %rt0, %rt3;
	%rt5 = inttoptr i64 %rt4 to i32*;
	store i32 6, i32* %rt5, align 4;
	%r1 = bitcast i32 0 to i32;
	%rt6 = zext i32 %r1 to i64;
	%rt7 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt8 = load i8** %rt7;
	%rt9 = ptrtoint i8* %rt8 to i64;
	%rt10 = add i64 %rt6, %rt9;
	%rt11 = inttoptr i64 %rt10 to i32*;
	store i32 0, i32* %rt11, align 4;
	br label %exit;
	ret void;
exit:
	ret void;

}

(0.008134) DynamicTranslationCache.cpp:1141:   translating subkernel _subkernel_sequence_2
(0.008154) DynamicTranslationCache.cpp:1154:   Converting from PTX IR to LLVM IR.
(0.008679) DynamicTranslationCache.cpp:1171: translated PTX to LLVM
(0.008687) DynamicTranslationCache.cpp:1172: ; Code assembled by Ocelot LLVMKernel 2.1.1677


%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* };

%Dimension = type { i32, i32, i32 };
define default void @_Z_ocelotTranslated__subkernel_sequence_2( %LLVMContext* %__ctaContext ) nounwind align 1;
{
$BB_1_0004_external_in_handler__from_1_0002:
	%r0 = bitcast i32 8 to i32;
	%rt0 = zext i32 %r0 to i64;
	%rt1 = add i64 %rt0, 16;
	%rt2 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt3 = load i8** %rt2;
	%rt4 = ptrtoint i8* %rt3 to i64;
	%rt5 = add i64 %rt1, %rt4;
	%rt6 = inttoptr i64 %rt5 to i64*;
	%r1 = load i64* %rt6, align 8;
	%rt7 = zext i32 %r0 to i64;
	%rt8 = add i64 %rt7, 48;
	%rt9 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt10 = load i8** %rt9;
	%rt11 = ptrtoint i8* %rt10 to i64;
	%rt12 = add i64 %rt8, %rt11;
	%rt13 = inttoptr i64 %rt12 to i32*;
	%r2 = load i32* %rt13, align 4;
	br label %$BB_1_0004;
$BB_1_0004:
	%r3 = phi i64 [ %r1, %$BB_1_0004_external_in_handler__from_1_0002 ];
	%r4 = phi i32 [ %r2, %$BB_1_0004_external_in_handler__from_1_0002 ];
	%r5 = shl i32 %r4, 1;
	%rt14 = sext i32 %r4 to i64;
	%r6 = mul i64 %rt14, 4;
	%r7 = add i64 %r3, %r6;
	%rt15 = inttoptr i64 %r7 to i32*;
	store i32 %r5, i32* %rt15, align 4;
	br label %$BB_1_0004_external_out_handler_to_;
$BB_1_0004_external_out_handler_to_:
	%r8 = bitcast i32 4 to i32;
	%rt16 = zext i32 %r8 to i64;
	%rt17 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt18 = load i8** %rt17;
	%rt19 = ptrtoint i8* %rt18 to i64;
	%rt20 = add i64 %rt16, %rt19;
	%rt21 = inttoptr i64 %rt20 to i32*;
	store i32 6, i32* %rt21, align 4;
	%r9 = bitcast i32 0 to i32;
	%rt22 = zext i32 %r9 to i64;
	%rt23 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt24 = load i8** %rt23;
	%rt25 = ptrtoint i8* %rt24 to i64;
	%rt26 = add i64 %rt22, %rt25;
	%rt27 = inttoptr i64 %rt26 to i32*;
	store i32 0, i32* %rt27, align 4;
	br label %exit;
	ret void;
exit:
	ret void;

}

(0.008903) DynamicTranslationCache.cpp:1220:  _translateKernel('sequence') complete for 3 subkernels
(0.008911) DynamicTranslationCache.cpp:148:    registered new kernel
(0.008927) DynamicTranslationCache.cpp:1231: _specializeTranslation()
(0.008934) DynamicTranslationCache.cpp:1241:   cloning and optimizing
(0.010537) LLVMUniformVectorization.cpp:112:  LLVMUniformVectorization() on kernel sequence
(0.010551) DynamicTranslationCache.cpp:1004: Overriding optimization level
(0.010918) LLVMUniformVectorization.cpp:195:  Translation(_subkernel_sequence_0_opt0_ws2) on subkernel with warp size 2
(0.010930) LLVMUniformVectorization.cpp:210:  Scalar Preprocessing step
(0.010940) LLVMUniformVectorization.cpp:237:     adding mapping entry
(0.010951) LLVMUniformVectorization.cpp:237:     adding mapping exit
(0.010958) LLVMUniformVectorization.cpp:237:     adding mapping $BB_1_0002
(0.010965) LLVMUniformVectorization.cpp:237:     adding mapping $BB_1_0002_external_out_handler_to_1_0003
(0.010973) LLVMUniformVectorization.cpp:237:     adding mapping $BB_1_0002_external_out_handler_to_1_0004
(0.010988) LLVMUniformVectorization.cpp:256:    failed to find label '' in Ocelot block mapping
(0.010996) LLVMUniformVectorization.cpp:256:    failed to find label '' in Ocelot block mapping
(0.011008) LLVMUniformVectorization.cpp:284:   Initializing scheduler entry block
(0.011015) LLVMUniformVectorization.cpp:287:   creating scheduler block
(0.011024) LLVMUniformVectorization.cpp:292:     extracting thread-local arguments
(0.011032) LLVMUniformVectorization.cpp:376:    _loadThreadLocal(thread 0)
(0.011038) LLVMUniformVectorization.cpp:382:    Loading thread-local arguments for thread 0
(0.011045) LLVMUniformVectorization.cpp:383:    inserting into block SchedulerEntry
(0.011155) LLVMUniformVectorization.cpp:227:  Scalar Preprocessing step complete
(0.011164) LLVMUniformVectorization.cpp:557:  Transform Warp Synchronous begin
(0.011173) LLVMUniformVectorization.cpp:600:    packThreadLocal()
(0.011179) LLVMUniformVectorization.cpp:376:    _loadThreadLocal(thread 1)
(0.011185) LLVMUniformVectorization.cpp:382:    Loading thread-local arguments for thread 1
(0.011192) LLVMUniformVectorization.cpp:383:    inserting into block SchedulerEntry
(0.011268) LLVMUniformVectorization.cpp:570:    replicateInstructions()
(0.011433) LLVMUniformVectorization.cpp:670:     _resolveDependencies()
(0.011509) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %7 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 1
(0.011535) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %8 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 2
(0.011560) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %9 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 3, i32 0
(0.011585) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %10 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 3, i32 1
(0.011627) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 0
(0.011652) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 1
(0.011676) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %2 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 2
(0.011700) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %3 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 0
(0.011725) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 1
(0.011749) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %5 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 2
(0.011773) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %6 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 0
(0.011797) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %11 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 3, i32 2
(0.011819) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %localPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
(0.011841) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %sharedPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 5
(0.011863) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %constPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 6
(0.011884) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %paramPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 7
(0.011906) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %argumentPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
(0.011928) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %metadataPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 9
(0.011936) LLVMUniformVectorization.cpp:746:       _vectorizeReplicated()
(0.011998) LLVMUniformVectorization.cpp:566:  Transform Warp Synchronous complete
(0.012005) LLVMUniformVectorization.cpp:199:  Translation(_subkernel_sequence_0_opt0_ws2, ws 2) complete
(0.012151) LLVMUniformVectorization.cpp:200:   LLVM function:

define internal void @_subkernel_sequence_0_opt0_ws2(%LLVMContext* %__ctaContext) nounwind align 1 {
SchedulerEntry:
  %0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 0
  %threadId.x.t0 = load i32* %0
  %insert.threadId.x.t0.vec = insertelement <2 x i32> undef, i32 %threadId.x.t0, i32 0
  %1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 1
  %threadId.y.t0 = load i32* %1
  %2 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 2
  %threadId.z.t0 = load i32* %2
  %3 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 0
  %blockDim.x.t0 = load i32* %3
  %insert.blockDim.x.t0.vec = insertelement <2 x i32> undef, i32 %blockDim.x.t0, i32 0
  %4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 1
  %blockDim.y.t0 = load i32* %4
  %5 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 2
  %blockDim.z.t0 = load i32* %5
  %6 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 0
  %blockId.x.t0 = load i32* %6
  %insert.blockId.x.t0.vec = insertelement <2 x i32> undef, i32 %blockId.x.t0, i32 0
  %7 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 1
  %blockId.y.t0 = load i32* %7
  %8 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 2
  %blockId.z.t0 = load i32* %8
  %9 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 3, i32 0
  %gridDim.x.t0 = load i32* %9
  %10 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 3, i32 1
  %gridDim.y.t0 = load i32* %10
  %11 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 3, i32 2
  %gridDim.z.t0 = load i32* %11
  %localPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %localPtr.t0 = load i8** %localPtrPtr.t0
  %sharedPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 5
  %sharedPtr.t0 = load i8** %sharedPtrPtr.t0
  %constPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 6
  %constPtr.t0 = load i8** %constPtrPtr.t0
  %paramPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 7
  %paramPtr.t0 = load i8** %paramPtrPtr.t0
  %argumentPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %argumentPtr.t0 = load i8** %argumentPtrPtr.t0
  %metadataPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 9
  %metadataPtr.t0 = load i8** %metadataPtrPtr.t0
  %bitcast = bitcast i8* %localPtr.t0 to i32*
  %resumePoint = load i32* %bitcast
  %12 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 0, i32 0
  %threadId.x.t1 = load i32* %12
  %insert.threadId.x.t1.vec = insertelement <2 x i32> %insert.threadId.x.t0.vec, i32 %threadId.x.t1, i32 1
  %13 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 0, i32 1
  %threadId.y.t1 = load i32* %13
  %14 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 0, i32 2
  %threadId.z.t1 = load i32* %14
  %15 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 1, i32 0
  %blockDim.x.t1 = load i32* %15
  %insert.blockDim.x.t1.vec = insertelement <2 x i32> %insert.blockDim.x.t0.vec, i32 %blockDim.x.t1, i32 1
  %16 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 1, i32 1
  %blockDim.y.t1 = load i32* %16
  %17 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 1, i32 2
  %blockDim.z.t1 = load i32* %17
  %18 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 2, i32 0
  %blockId.x.t1 = load i32* %18
  %insert.blockId.x.t1.vec = insertelement <2 x i32> %insert.blockId.x.t0.vec, i32 %blockId.x.t1, i32 1
  %19 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 2, i32 1
  %blockId.y.t1 = load i32* %19
  %20 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 2, i32 2
  %blockId.z.t1 = load i32* %20
  %21 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 3, i32 0
  %gridDim.x.t1 = load i32* %21
  %22 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 3, i32 1
  %gridDim.y.t1 = load i32* %22
  %23 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 3, i32 2
  %gridDim.z.t1 = load i32* %23
  %localPtrPtr.t1 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 4
  %localPtr.t1 = load i8** %localPtrPtr.t1
  %sharedPtrPtr.t1 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 5
  %sharedPtr.t1 = load i8** %sharedPtrPtr.t1
  %constPtrPtr.t1 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 6
  %constPtr.t1 = load i8** %constPtrPtr.t1
  %paramPtrPtr.t1 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 7
  %paramPtr.t1 = load i8** %paramPtrPtr.t1
  %argumentPtrPtr.t1 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 8
  %argumentPtr.t1 = load i8** %argumentPtrPtr.t1
  %metadataPtrPtr.t1 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 9
  %metadataPtr.t1 = load i8** %metadataPtrPtr.t1
  switch i32 %resumePoint, label %"$BB_1_0002" [
  ]

"$BB_1_0002":                                     ; preds = %SchedulerEntry
  %rt2 = bitcast i8* %argumentPtr.t0 to i64*
  %rt2.t1 = bitcast i8* %argumentPtr.t1 to i64*
  %r0 = load i64* %rt2, align 8
  %r0.t1 = load i64* %rt2.t1, align 8
  %rt3 = getelementptr i8* %argumentPtr.t0, i32 8
  %rt3.t1 = getelementptr i8* %argumentPtr.t1, i32 8
  %rt6 = bitcast i8* %rt3 to i32*
  %rt6.t1 = bitcast i8* %rt3.t1 to i32*
  %r1 = load i32* %rt6, align 4
  %r1.t1 = load i32* %rt6.t1, align 4
  %rt13.vec = mul <2 x i32> %insert.blockDim.x.t1.vec, %insert.blockId.x.t1.vec
  %r6.vec = add <2 x i32> %insert.threadId.x.t1.vec, %rt13.vec
  %r6.extracted2 = extractelement <2 x i32> %r6.vec, i32 1
  %r6.extracted = extractelement <2 x i32> %r6.vec, i32 0
  %r7 = icmp slt i32 %r6.extracted, %r1
  %r7.t1 = icmp slt i32 %r6.extracted2, %r1.t1
  br i1 %r7, label %"$BB_1_0002_external_out_handler_to_1_0004", label %"$BB_1_0002_external_out_handler_to_1_0003"

"$BB_1_0002_external_out_handler_to_1_0003":      ; preds = %"$BB_1_0002"
  %r8 = phi i64 [ %r0, %"$BB_1_0002" ]
  %r8.t1 = phi i64 [ %r0.t1, %"$BB_1_0002" ]
  %r9 = phi i32 [ %r6.extracted, %"$BB_1_0002" ]
  %r9.t1 = phi i32 [ %r6.extracted2, %"$BB_1_0002" ]
  %rt14 = zext i32 8 to i64
  %rt14.t1 = zext i32 8 to i64
  %rt15 = add i64 %rt14, 16
  %rt15.t1 = add i64 %rt14.t1, 16
  %rt18 = ptrtoint i8* %localPtr.t0 to i64
  %rt18.t1 = ptrtoint i8* %localPtr.t1 to i64
  %rt19 = add i64 %rt15, %rt18
  %rt19.t1 = add i64 %rt15.t1, %rt18.t1
  %rt20 = inttoptr i64 %rt19 to i64*
  %rt20.t1 = inttoptr i64 %rt19.t1 to i64*
  store i64 %r8, i64* %rt20, align 8
  store i64 %r8.t1, i64* %rt20.t1, align 8
  %rt21 = zext i32 8 to i64
  %rt21.t1 = zext i32 8 to i64
  %rt22 = add i64 %rt21, 48
  %rt22.t1 = add i64 %rt21.t1, 48
  %rt25 = ptrtoint i8* %localPtr.t0 to i64
  %rt25.t1 = ptrtoint i8* %localPtr.t1 to i64
  %rt26 = add i64 %rt22, %rt25
  %rt26.t1 = add i64 %rt22.t1, %rt25.t1
  %rt27 = inttoptr i64 %rt26 to i32*
  %rt27.t1 = inttoptr i64 %rt26.t1 to i32*
  store i32 %r9, i32* %rt27, align 4
  store i32 %r9.t1, i32* %rt27.t1, align 4
  %rt28 = zext i32 4 to i64
  %rt28.t1 = zext i32 4 to i64
  %rt31 = ptrtoint i8* %localPtr.t0 to i64
  %rt31.t1 = ptrtoint i8* %localPtr.t1 to i64
  %rt32 = add i64 %rt28, %rt31
  %rt32.t1 = add i64 %rt28.t1, %rt31.t1
  %rt33 = inttoptr i64 %rt32 to i32*
  %rt33.t1 = inttoptr i64 %rt32.t1 to i32*
  store i32 8, i32* %rt33, align 4
  store i32 8, i32* %rt33.t1, align 4
  %rt34 = zext i32 0 to i64
  %rt34.t1 = zext i32 0 to i64
  %rt37 = ptrtoint i8* %localPtr.t0 to i64
  %rt37.t1 = ptrtoint i8* %localPtr.t1 to i64
  %rt38 = add i64 %rt34, %rt37
  %rt38.t1 = add i64 %rt34.t1, %rt37.t1
  %rt39 = inttoptr i64 %rt38 to i32*
  %rt39.t1 = inttoptr i64 %rt38.t1 to i32*
  store i32 65536, i32* %rt39, align 4
  store i32 65536, i32* %rt39.t1, align 4
  br label %exit
                                                  ; No predecessors!
  ret void

"$BB_1_0002_external_out_handler_to_1_0004":      ; preds = %"$BB_1_0002"
  %r13 = phi i64 [ %r0, %"$BB_1_0002" ]
  %r13.t1 = phi i64 [ %r0.t1, %"$BB_1_0002" ]
  %r14 = phi i32 [ %r6.extracted, %"$BB_1_0002" ]
  %r14.t1 = phi i32 [ %r6.extracted2, %"$BB_1_0002" ]
  %rt40 = zext i32 8 to i64
  %rt40.t1 = zext i32 8 to i64
  %rt41 = add i64 %rt40, 16
  %rt41.t1 = add i64 %rt40.t1, 16
  %rt44 = ptrtoint i8* %localPtr.t0 to i64
  %rt44.t1 = ptrtoint i8* %localPtr.t1 to i64
  %rt45 = add i64 %rt41, %rt44
  %rt45.t1 = add i64 %rt41.t1, %rt44.t1
  %rt46 = inttoptr i64 %rt45 to i64*
  %rt46.t1 = inttoptr i64 %rt45.t1 to i64*
  store i64 %r13, i64* %rt46, align 8
  store i64 %r13.t1, i64* %rt46.t1, align 8
  %rt47 = zext i32 8 to i64
  %rt47.t1 = zext i32 8 to i64
  %rt48 = add i64 %rt47, 48
  %rt48.t1 = add i64 %rt47.t1, 48
  %rt51 = ptrtoint i8* %localPtr.t0 to i64
  %rt51.t1 = ptrtoint i8* %localPtr.t1 to i64
  %rt52 = add i64 %rt48, %rt51
  %rt52.t1 = add i64 %rt48.t1, %rt51.t1
  %rt53 = inttoptr i64 %rt52 to i32*
  %rt53.t1 = inttoptr i64 %rt52.t1 to i32*
  store i32 %r14, i32* %rt53, align 4
  store i32 %r14.t1, i32* %rt53.t1, align 4
  %rt54 = zext i32 4 to i64
  %rt54.t1 = zext i32 4 to i64
  %rt57 = ptrtoint i8* %localPtr.t0 to i64
  %rt57.t1 = ptrtoint i8* %localPtr.t1 to i64
  %rt58 = add i64 %rt54, %rt57
  %rt58.t1 = add i64 %rt54.t1, %rt57.t1
  %rt59 = inttoptr i64 %rt58 to i32*
  %rt59.t1 = inttoptr i64 %rt58.t1 to i32*
  store i32 8, i32* %rt59, align 4
  store i32 8, i32* %rt59.t1, align 4
  %rt60 = zext i32 0 to i64
  %rt60.t1 = zext i32 0 to i64
  %rt63 = ptrtoint i8* %localPtr.t0 to i64
  %rt63.t1 = ptrtoint i8* %localPtr.t1 to i64
  %rt64 = add i64 %rt60, %rt63
  %rt64.t1 = add i64 %rt60.t1, %rt63.t1
  %rt65 = inttoptr i64 %rt64 to i32*
  %rt65.t1 = inttoptr i64 %rt64.t1 to i32*
  store i32 131072, i32* %rt65, align 4
  store i32 131072, i32* %rt65.t1, align 4
  br label %exit
                                                  ; No predecessors!
  ret void

exit:                                             ; preds = %"$BB_1_0002_external_out_handler_to_1_0004", %"$BB_1_0002_external_out_handler_to_1_0003"
  ret void
}

(0.013659) DynamicTranslationCache.cpp:1086: performed transformations
(0.013719) DynamicTranslationCache.cpp:1250:   JIT compiling
(0.016371) DynamicTranslationCache.cpp:1261:   verifying
(0.016583) DynamicTranslationCache.cpp:1276:   updating translation cache data structures
(0.016600) DynamicTranslationCache.cpp:1288:   _specializeTranslation() complete
(0.016614) DynamicTranslationCache.cpp:1231: _specializeTranslation()
(0.016621) DynamicTranslationCache.cpp:1241:   cloning and optimizing
(0.016781) LLVMUniformVectorization.cpp:112:  LLVMUniformVectorization() on kernel sequence
(0.016792) DynamicTranslationCache.cpp:1004: Overriding optimization level
(0.016953) LLVMUniformVectorization.cpp:195:  Translation(_subkernel_sequence_0_opt0_ws1) on subkernel with warp size 1
(0.016963) LLVMUniformVectorization.cpp:210:  Scalar Preprocessing step
(0.016970) LLVMUniformVectorization.cpp:237:     adding mapping entry
(0.016978) LLVMUniformVectorization.cpp:237:     adding mapping exit
(0.016985) LLVMUniformVectorization.cpp:237:     adding mapping $BB_1_0002
(0.016991) LLVMUniformVectorization.cpp:237:     adding mapping $BB_1_0002_external_out_handler_to_1_0003
(0.016998) LLVMUniformVectorization.cpp:237:     adding mapping $BB_1_0002_external_out_handler_to_1_0004
(0.017008) LLVMUniformVectorization.cpp:256:    failed to find label '' in Ocelot block mapping
(0.017015) LLVMUniformVectorization.cpp:256:    failed to find label '' in Ocelot block mapping
(0.017024) LLVMUniformVectorization.cpp:284:   Initializing scheduler entry block
(0.017030) LLVMUniformVectorization.cpp:287:   creating scheduler block
(0.017038) LLVMUniformVectorization.cpp:292:     extracting thread-local arguments
(0.017044) LLVMUniformVectorization.cpp:376:    _loadThreadLocal(thread 0)
(0.017051) LLVMUniformVectorization.cpp:382:    Loading thread-local arguments for thread 0
(0.017057) LLVMUniformVectorization.cpp:383:    inserting into block SchedulerEntry
(0.017146) LLVMUniformVectorization.cpp:227:  Scalar Preprocessing step complete
(0.017154) LLVMUniformVectorization.cpp:557:  Transform Warp Synchronous begin
(0.017161) LLVMUniformVectorization.cpp:566:  Transform Warp Synchronous complete
(0.017167) LLVMUniformVectorization.cpp:199:  Translation(_subkernel_sequence_0_opt0_ws1, ws 1) complete
(0.017264) LLVMUniformVectorization.cpp:200:   LLVM function:

define internal void @_subkernel_sequence_0_opt0_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
SchedulerEntry:
  %0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 0
  %threadId.x.t0 = load i32* %0
  %1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 1
  %threadId.y.t0 = load i32* %1
  %2 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 2
  %threadId.z.t0 = load i32* %2
  %3 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 0
  %blockDim.x.t0 = load i32* %3
  %4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 1
  %blockDim.y.t0 = load i32* %4
  %5 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 2
  %blockDim.z.t0 = load i32* %5
  %6 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 0
  %blockId.x.t0 = load i32* %6
  %7 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 1
  %blockId.y.t0 = load i32* %7
  %8 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 2
  %blockId.z.t0 = load i32* %8
  %9 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 3, i32 0
  %gridDim.x.t0 = load i32* %9
  %10 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 3, i32 1
  %gridDim.y.t0 = load i32* %10
  %11 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 3, i32 2
  %gridDim.z.t0 = load i32* %11
  %localPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %localPtr.t0 = load i8** %localPtrPtr.t0
  %sharedPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 5
  %sharedPtr.t0 = load i8** %sharedPtrPtr.t0
  %constPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 6
  %constPtr.t0 = load i8** %constPtrPtr.t0
  %paramPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 7
  %paramPtr.t0 = load i8** %paramPtrPtr.t0
  %argumentPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %argumentPtr.t0 = load i8** %argumentPtrPtr.t0
  %metadataPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 9
  %metadataPtr.t0 = load i8** %metadataPtrPtr.t0
  %bitcast = bitcast i8* %localPtr.t0 to i32*
  %resumePoint = load i32* %bitcast
  switch i32 %resumePoint, label %"$BB_1_0002" [
  ]

"$BB_1_0002":                                     ; preds = %SchedulerEntry
  %rt2 = bitcast i8* %argumentPtr.t0 to i64*
  %r0 = load i64* %rt2, align 8
  %rt3 = getelementptr i8* %argumentPtr.t0, i32 8
  %rt6 = bitcast i8* %rt3 to i32*
  %r1 = load i32* %rt6, align 4
  %rt13 = mul i32 %blockDim.x.t0, %blockId.x.t0
  %r6 = add i32 %threadId.x.t0, %rt13
  %r7 = icmp slt i32 %r6, %r1
  br i1 %r7, label %"$BB_1_0002_external_out_handler_to_1_0004", label %"$BB_1_0002_external_out_handler_to_1_0003"

"$BB_1_0002_external_out_handler_to_1_0003":      ; preds = %"$BB_1_0002"
  %r8 = phi i64 [ %r0, %"$BB_1_0002" ]
  %r9 = phi i32 [ %r6, %"$BB_1_0002" ]
  %rt14 = zext i32 8 to i64
  %rt15 = add i64 %rt14, 16
  %rt18 = ptrtoint i8* %localPtr.t0 to i64
  %rt19 = add i64 %rt15, %rt18
  %rt20 = inttoptr i64 %rt19 to i64*
  store i64 %r8, i64* %rt20, align 8
  %rt21 = zext i32 8 to i64
  %rt22 = add i64 %rt21, 48
  %rt25 = ptrtoint i8* %localPtr.t0 to i64
  %rt26 = add i64 %rt22, %rt25
  %rt27 = inttoptr i64 %rt26 to i32*
  store i32 %r9, i32* %rt27, align 4
  %rt28 = zext i32 4 to i64
  %rt31 = ptrtoint i8* %localPtr.t0 to i64
  %rt32 = add i64 %rt28, %rt31
  %rt33 = inttoptr i64 %rt32 to i32*
  store i32 8, i32* %rt33, align 4
  %rt34 = zext i32 0 to i64
  %rt37 = ptrtoint i8* %localPtr.t0 to i64
  %rt38 = add i64 %rt34, %rt37
  %rt39 = inttoptr i64 %rt38 to i32*
  store i32 65536, i32* %rt39, align 4
  br label %exit
                                                  ; No predecessors!
  ret void

"$BB_1_0002_external_out_handler_to_1_0004":      ; preds = %"$BB_1_0002"
  %r13 = phi i64 [ %r0, %"$BB_1_0002" ]
  %r14 = phi i32 [ %r6, %"$BB_1_0002" ]
  %rt40 = zext i32 8 to i64
  %rt41 = add i64 %rt40, 16
  %rt44 = ptrtoint i8* %localPtr.t0 to i64
  %rt45 = add i64 %rt41, %rt44
  %rt46 = inttoptr i64 %rt45 to i64*
  store i64 %r13, i64* %rt46, align 8
  %rt47 = zext i32 8 to i64
  %rt48 = add i64 %rt47, 48
  %rt51 = ptrtoint i8* %localPtr.t0 to i64
  %rt52 = add i64 %rt48, %rt51
  %rt53 = inttoptr i64 %rt52 to i32*
  store i32 %r14, i32* %rt53, align 4
  %rt54 = zext i32 4 to i64
  %rt57 = ptrtoint i8* %localPtr.t0 to i64
  %rt58 = add i64 %rt54, %rt57
  %rt59 = inttoptr i64 %rt58 to i32*
  store i32 8, i32* %rt59, align 4
  %rt60 = zext i32 0 to i64
  %rt63 = ptrtoint i8* %localPtr.t0 to i64
  %rt64 = add i64 %rt60, %rt63
  %rt65 = inttoptr i64 %rt64 to i32*
  store i32 131072, i32* %rt65, align 4
  br label %exit
                                                  ; No predecessors!
  ret void

exit:                                             ; preds = %"$BB_1_0002_external_out_handler_to_1_0004", %"$BB_1_0002_external_out_handler_to_1_0003"
  ret void
}

(0.018033) DynamicTranslationCache.cpp:1086: performed transformations
(0.018079) DynamicTranslationCache.cpp:1250:   JIT compiling
(0.018806) DynamicTranslationCache.cpp:1261:   verifying
(0.018952) DynamicTranslationCache.cpp:1276:   updating translation cache data structures
(0.018961) DynamicTranslationCache.cpp:1288:   _specializeTranslation() complete
(0.018970) DynamicTranslationCache.cpp:1231: _specializeTranslation()
(0.018977) DynamicTranslationCache.cpp:1241:   cloning and optimizing
(0.019051) LLVMUniformVectorization.cpp:112:  LLVMUniformVectorization() on kernel sequence
(0.019061) DynamicTranslationCache.cpp:1004: Overriding optimization level
(0.019176) LLVMUniformVectorization.cpp:195:  Translation(_subkernel_sequence_2_opt0_ws1) on subkernel with warp size 1
(0.019197) LLVMUniformVectorization.cpp:210:  Scalar Preprocessing step
(0.019204) LLVMUniformVectorization.cpp:237:     adding mapping entry
(0.019211) LLVMUniformVectorization.cpp:237:     adding mapping exit
(0.019218) LLVMUniformVectorization.cpp:237:     adding mapping $BB_1_0004
(0.019224) LLVMUniformVectorization.cpp:237:     adding mapping $BB_1_0004_external_out_handler_to_
(0.019231) LLVMUniformVectorization.cpp:237:     adding mapping $BB_1_0004_external_in_handler__from_1_0002
(0.019241) LLVMUniformVectorization.cpp:256:    failed to find label '' in Ocelot block mapping
(0.019253) LLVMUniformVectorization.cpp:284:   Initializing scheduler entry block
(0.019259) LLVMUniformVectorization.cpp:287:   creating scheduler block
(0.019267) LLVMUniformVectorization.cpp:292:     extracting thread-local arguments
(0.019273) LLVMUniformVectorization.cpp:376:    _loadThreadLocal(thread 0)
(0.019279) LLVMUniformVectorization.cpp:382:    Loading thread-local arguments for thread 0
(0.019285) LLVMUniformVectorization.cpp:383:    inserting into block SchedulerEntry
(0.019365) LLVMUniformVectorization.cpp:227:  Scalar Preprocessing step complete
(0.019373) LLVMUniformVectorization.cpp:557:  Transform Warp Synchronous begin
(0.019380) LLVMUniformVectorization.cpp:566:  Transform Warp Synchronous complete
(0.019387) LLVMUniformVectorization.cpp:199:  Translation(_subkernel_sequence_2_opt0_ws1, ws 1) complete
(0.019455) LLVMUniformVectorization.cpp:200:   LLVM function:

define internal void @_subkernel_sequence_2_opt0_ws1(%LLVMContext.2* %__ctaContext) nounwind align 1 {
SchedulerEntry:
  %0 = getelementptr %LLVMContext.2* %__ctaContext, i32 0, i32 0, i32 0
  %threadId.x.t0 = load i32* %0
  %1 = getelementptr %LLVMContext.2* %__ctaContext, i32 0, i32 0, i32 1
  %threadId.y.t0 = load i32* %1
  %2 = getelementptr %LLVMContext.2* %__ctaContext, i32 0, i32 0, i32 2
  %threadId.z.t0 = load i32* %2
  %3 = getelementptr %LLVMContext.2* %__ctaContext, i32 0, i32 1, i32 0
  %blockDim.x.t0 = load i32* %3
  %4 = getelementptr %LLVMContext.2* %__ctaContext, i32 0, i32 1, i32 1
  %blockDim.y.t0 = load i32* %4
  %5 = getelementptr %LLVMContext.2* %__ctaContext, i32 0, i32 1, i32 2
  %blockDim.z.t0 = load i32* %5
  %6 = getelementptr %LLVMContext.2* %__ctaContext, i32 0, i32 2, i32 0
  %blockId.x.t0 = load i32* %6
  %7 = getelementptr %LLVMContext.2* %__ctaContext, i32 0, i32 2, i32 1
  %blockId.y.t0 = load i32* %7
  %8 = getelementptr %LLVMContext.2* %__ctaContext, i32 0, i32 2, i32 2
  %blockId.z.t0 = load i32* %8
  %9 = getelementptr %LLVMContext.2* %__ctaContext, i32 0, i32 3, i32 0
  %gridDim.x.t0 = load i32* %9
  %10 = getelementptr %LLVMContext.2* %__ctaContext, i32 0, i32 3, i32 1
  %gridDim.y.t0 = load i32* %10
  %11 = getelementptr %LLVMContext.2* %__ctaContext, i32 0, i32 3, i32 2
  %gridDim.z.t0 = load i32* %11
  %localPtrPtr.t0 = getelementptr %LLVMContext.2* %__ctaContext, i32 0, i32 4
  %localPtr.t0 = load i8** %localPtrPtr.t0
  %sharedPtrPtr.t0 = getelementptr %LLVMContext.2* %__ctaContext, i32 0, i32 5
  %sharedPtr.t0 = load i8** %sharedPtrPtr.t0
  %constPtrPtr.t0 = getelementptr %LLVMContext.2* %__ctaContext, i32 0, i32 6
  %constPtr.t0 = load i8** %constPtrPtr.t0
  %paramPtrPtr.t0 = getelementptr %LLVMContext.2* %__ctaContext, i32 0, i32 7
  %paramPtr.t0 = load i8** %paramPtrPtr.t0
  %argumentPtrPtr.t0 = getelementptr %LLVMContext.2* %__ctaContext, i32 0, i32 8
  %argumentPtr.t0 = load i8** %argumentPtrPtr.t0
  %metadataPtrPtr.t0 = getelementptr %LLVMContext.2* %__ctaContext, i32 0, i32 9
  %metadataPtr.t0 = load i8** %metadataPtrPtr.t0
  %bitcast = bitcast i8* %localPtr.t0 to i32*
  %resumePoint = load i32* %bitcast
  switch i32 131072, label %"$BB_1_0004_external_in_handler__from_1_0002" [
  ]

"$BB_1_0004_external_in_handler__from_1_0002":    ; preds = %SchedulerEntry
  %rt0 = zext i32 8 to i64
  %rt1 = add i64 %rt0, 16
  %rt4 = ptrtoint i8* %localPtr.t0 to i64
  %rt5 = add i64 %rt1, %rt4
  %rt6 = inttoptr i64 %rt5 to i64*
  %r1 = load i64* %rt6, align 8
  %rt7 = zext i32 8 to i64
  %rt8 = add i64 %rt7, 48
  %rt11 = ptrtoint i8* %localPtr.t0 to i64
  %rt12 = add i64 %rt8, %rt11
  %rt13 = inttoptr i64 %rt12 to i32*
  %r2 = load i32* %rt13, align 4
  br label %"$BB_1_0004"

"$BB_1_0004":                                     ; preds = %"$BB_1_0004_external_in_handler__from_1_0002"
  %r3 = phi i64 [ %r1, %"$BB_1_0004_external_in_handler__from_1_0002" ]
  %r4 = phi i32 [ %r2, %"$BB_1_0004_external_in_handler__from_1_0002" ]
  %r5 = shl i32 %r4, 1
  %rt14 = sext i32 %r4 to i64
  %r6 = mul i64 %rt14, 4
  %r7 = add i64 %r3, %r6
  %rt15 = inttoptr i64 %r7 to i32*
  store i32 %r5, i32* %rt15, align 4
  br label %"$BB_1_0004_external_out_handler_to_"

"$BB_1_0004_external_out_handler_to_":            ; preds = %"$BB_1_0004"
  %rt16 = zext i32 4 to i64
  %rt19 = ptrtoint i8* %localPtr.t0 to i64
  %rt20 = add i64 %rt16, %rt19
  %rt21 = inttoptr i64 %rt20 to i32*
  store i32 6, i32* %rt21, align 4
  %rt22 = zext i32 0 to i64
  %rt25 = ptrtoint i8* %localPtr.t0 to i64
  %rt26 = add i64 %rt22, %rt25
  %rt27 = inttoptr i64 %rt26 to i32*
  store i32 0, i32* %rt27, align 4
  br label %exit
                                                  ; No predecessors!
  ret void

exit:                                             ; preds = %"$BB_1_0004_external_out_handler_to_"
  ret void
}

(0.020029) DynamicTranslationCache.cpp:1086: performed transformations
(0.020071) DynamicTranslationCache.cpp:1250:   JIT compiling
(0.020587) DynamicTranslationCache.cpp:1261:   verifying
(0.020730) DynamicTranslationCache.cpp:1276:   updating translation cache data structures
(0.020739) DynamicTranslationCache.cpp:1288:   _specializeTranslation() complete
(0.020819) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(testShr)
(0.020827) KernelPartitioningPass.cpp:58:   partitioning blocks at barriers
(0.020835) KernelPartitioningPass.cpp:76:     barrier in block $BB_4_0002(instruction 11)
(0.020858) KernelPartitioningPass.cpp:92:     encountered 1 barriers
(0.020942) KernelPartitioningPass.cpp:110:  Partitioning kernel testShr
/*
* Ocelot Version : 2.1.1677
*/
.entry testShr(.param  .u64 testShr_param_0)
{
	.shared .align 4 .b8 __cuda_local_var_16224_30_non_const_storage[1024];

	.reg .s64 %r0;
	.reg .s64 %r1;
	.reg .s32 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .s64 %r7;
	.reg .s64 %r8;
	.reg .s64 %r9;
	.reg .s32 %r10;
	.reg .pred %p11;
	.reg .s32 %r12;
	.reg .s32 %r13;
	.reg .s64 %r14;
	.reg .s64 %r15;
	.reg .s32 %r16;
	.reg .s32 %r17;
	.reg .s32 %r18;
	.reg .s64 %r19;
	.reg .s64 %r20;
	$BB_4_0002:		/**/ 
		ld.param.u64 %r0, [testShr_param_0]; 
		cvta.to.global.u64 %r1, %r0; 
		mov.u32 %r2, %ntid.x; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %tid.x; 
		mad.lo.s32 %r5, %r2, %r3, %r4; 
		shl.b32 %r6, %r5, 1; 
		mul.wide.u32 %r7, %r4, 4; 
		mov.u64 %r8, __cuda_local_var_16224_30_non_const_storage; 
		add.s64 %r9, %r8, %r7; 
		st.shared.u32 [%r9], %r6; 
		bar.sync 0; 
	$BB_4_0002_bar:
		and.b32 %r10, %r5, 1; 
		setp.eq.s32 %p11, %r10, 0; 
		mov.u32 %r12, %tid.x; 
		xor.b32 %r13, %r12, 1; 
		mul.wide.u32 %r14, %r13, 4; 
		add.s64 %r15, %r8, %r14; 
		selp.b32 %r16, 13, 19, %p11; 
		ld.shared.u32 %r17, [%r15]; 
		mul.lo.s32 %r18, %r16, %r17; 
		mul.wide.s32 %r19, %r5, 4; 
		add.s64 %r20, %r1, %r19; 
		st.global.u32 [%r20], %r18; 
		exit; 
}
(0.021172) KernelPartitioningPass.cpp:253:    Spill region size is 160
(0.021181) KernelPartitioningPass.cpp:147:  KernelGraph::_partitionMinimumSize()
(0.021189) KernelPartitioningPass.cpp:314:  Subkernel::create(testShr)
(0.021195) KernelPartitioningPass.cpp:341:  Subkernel::_create(testShr)
(0.021211) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.021226) KernelPartitioningPass.cpp:440:   adding block $BB_4_0002
(0.021237) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_4_0002 -> $BB_4_0002_bar
(0.021245) KernelPartitioningPass.cpp:492:   ENTRY EDGE
(0.021253) KernelPartitioningPass.cpp:502:   creating internal edges
(0.021260) KernelPartitioningPass.cpp:506:   looking in block mapping: entry -> $BB_4_0002
(0.021266) KernelPartitioningPass.cpp:518:    adding internal edge: entry -> $BB_4_0002
(0.021291) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.021298) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.021305) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.021312) KernelPartitioningPass.cpp:383:    barrier in block $BB_4_0002
(0.021322) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_testShr_0(.param  .u64 testShr_param_0)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[160];
	.shared .align 4 .b8 __cuda_local_var_16224_30_non_const_storage[1024];

	.reg .s64 %r0;
	.reg .s64 %r1;
	.reg .s32 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .s64 %r7;
	.reg .s64 %r8;
	.reg .s64 %r9;
	$BB_4_0002:		/**/ 
		ld.param.u64 %r0, [testShr_param_0]; 
		cvta.to.global.u64 %r1, %r0; 
		mov.u32 %r2, %ntid.x; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %tid.x; 
		mad.lo.s32 %r5, %r2, %r3, %r4; 
		shl.b32 %r6, %r5, 1; 
		mul.wide.u32 %r7, %r4, 4; 
		mov.u64 %r8, __cuda_local_var_16224_30_non_const_storage; 
		add.s64 %r9, %r8, %r7; 
		st.shared.u32 [%r9], %r6; 
		bar.sync 0; 
	$BB_4_0002_external_out_handler_to_4_0002_bar_barrier_entry:
	$BB_4_0002_external_out_handler_to_4_0002_bar:
}
(0.021447) KernelPartitioningPass.cpp:314:  Subkernel::create(testShr)
(0.021454) KernelPartitioningPass.cpp:341:  Subkernel::_create(testShr)
(0.021466) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.021479) KernelPartitioningPass.cpp:440:   adding block $BB_4_0002_bar
(0.021490) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_4_0002_bar -> exit
(0.021499) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_4_0002 -> $BB_4_0002_bar
(0.021506) KernelPartitioningPass.cpp:502:   creating internal edges
(0.021512) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.021519) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.021526) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.021532) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_testShr_1(.param  .u64 testShr_param_0)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[160];
	.shared .align 4 .b8 __cuda_local_var_16224_30_non_const_storage[1024];

	.reg .s32 %r10;
	.reg .s32 %r5;
	.reg .pred %p11;
	.reg .s32 %r12;
	.reg .s32 %r13;
	.reg .s64 %r14;
	.reg .s64 %r15;
	.reg .s64 %r8;
	.reg .s32 %r16;
	.reg .s32 %r17;
	.reg .s32 %r18;
	.reg .s64 %r19;
	.reg .s64 %r20;
	.reg .s64 %r1;
	$BB_4_0002_bar_external_in_handler__from_4_0002:
	$BB_4_0002_bar:
		and.b32 %r10, %r5, 1; 
		setp.eq.s32 %p11, %r10, 0; 
		mov.u32 %r12, %tid.x; 
		xor.b32 %r13, %r12, 1; 
		mul.wide.u32 %r14, %r13, 4; 
		add.s64 %r15, %r8, %r14; 
		selp.b32 %r16, 13, 19, %p11; 
		ld.shared.u32 %r17, [%r15]; 
		mul.lo.s32 %r18, %r16, %r17; 
		mul.wide.s32 %r19, %r5, 4; 
		add.s64 %r20, %r1, %r19; 
		st.global.u32 [%r20], %r18; 
		exit; 
	$BB_4_0002_bar_external_out_handler_to_:
}
(0.021673) KernelPartitioningPass.cpp:169:  Linking external edges
(0.021680) KernelPartitioningPass.cpp:196:    linking $BB_4_0002_external_out_handler_to_4_0002_bar to $BB_4_0002_bar_external_in_handler__from_4_0002 (entry 65536)
(0.021687) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_4_0002_bar -> exit
(0.021729) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.021742) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.021749) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.021757) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_4_0002 -> $BB_4_0002_external_out_handler_to_4_0002_bar (3 live values
(0.021766) KernelPartitioningPass.cpp:853:        alive-out: 1 [type: s64]
(0.021780) KernelPartitioningPass.cpp:853:        alive-out: 5 [type: s32]
(0.021790) KernelPartitioningPass.cpp:853:        alive-out: 8 [type: s64]
(0.021816) KernelPartitioningPass.cpp:984:    creating exit in block $BB_4_0002_external_out_handler_to_4_0002_bar
(0.021831) KernelPartitioningPass.cpp:809:    adding $BB_4_0002 to frontierExitBlocks
(0.021840) KernelPartitioningPass.cpp:813:  Barrier exits
(0.021846) KernelPartitioningPass.cpp:818:    barrier exit: $BB_4_0002
(0.021852) KernelPartitioningPass.cpp:824:      0 live values at barrier
(0.021863) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.021874) KernelPartitioningPass.cpp:899:   block $BB_4_0002 (1 external edges) terminator: bar.sync 0
(0.021882) KernelPartitioningPass.cpp:916:   I forget what I wanted here. there are this many edges: 1
(0.021888) KernelPartitioningPass.cpp:917:      block: $BB_4_0002
(0.021897) KernelPartitioningPass.cpp:984:    creating exit in block $BB_4_0002
(0.021913) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.021922) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.021928) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_testShr_0(.param  .u64 testShr_param_0)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[160];
	.shared .align 4 .b8 __cuda_local_var_16224_30_non_const_storage[1024];

	.reg .s64 %r0;
	.reg .s64 %r1;
	.reg .s32 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .s64 %r7;
	.reg .s64 %r8;
	.reg .s64 %r9;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r10;
	.reg .u32 %r11;
	.reg .u32 %r12;
	$BB_4_0002:		/**/ 
		ld.param.u64 %r0, [testShr_param_0]; 
		cvta.to.global.u64 %r1, %r0; 
		mov.u32 %r2, %ntid.x; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %tid.x; 
		mad.lo.s32 %r5, %r2, %r3, %r4; 
		shl.b32 %r6, %r5, 1; 
		mul.wide.u32 %r7, %r4, 4; 
		mov.u64 %r8, __cuda_local_var_16224_30_non_const_storage; 
		add.s64 %r9, %r8, %r7; 
		st.shared.u32 [%r9], %r6; 
		mov.s32 %r13, _Zocelot_resume_status; 
		st.local.u32 [%r13], 5; 
		mov.s32 %r14, _Zocelot_resume_point; 
		st.local.u32 [%r14], 65536; 
		exit; 
	$BB_4_0002_external_out_handler_to_4_0002_bar_barrier_entry:
	$BB_4_0002_external_out_handler_to_4_0002_bar:		// 3 live-out values 
		mov.s32 %r10, _Zocelot_spill_area; 
		st.local.s64 [%r10 + 8], %r1; 
		st.local.s32 [%r10 + 40], %r5; 
		st.local.s64 [%r10 + 64], %r8; 
		mov.s32 %r11, _Zocelot_resume_status; 
		st.local.u32 [%r11], 8; 
		mov.s32 %r12, _Zocelot_resume_point; 
		st.local.u32 [%r12], 65536; 
		exit; 
}
(0.022154) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.022170) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.022177) KernelPartitioningPass.cpp:773:      IN-edge: $BB_4_0002_bar_external_in_handler__from_4_0002 -> $BB_4_0002_bar (3 live values
(0.022186) KernelPartitioningPass.cpp:853:        alive-out: 1 [type: s64]
(0.022198) KernelPartitioningPass.cpp:853:        alive-out: 5 [type: s32]
(0.022208) KernelPartitioningPass.cpp:853:        alive-out: 8 [type: s64]
(0.022219) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.022227) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_4_0002_bar -> $BB_4_0002_bar_external_out_handler_to_ (0 live values
(0.022235) KernelPartitioningPass.cpp:984:    creating exit in block $BB_4_0002_bar_external_out_handler_to_
(0.022248) KernelPartitioningPass.cpp:809:    adding $BB_4_0002_bar to frontierExitBlocks
(0.022256) KernelPartitioningPass.cpp:813:  Barrier exits
(0.022262) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.022270) KernelPartitioningPass.cpp:899:   block $BB_4_0002_bar (1 external edges) terminator: exit
(0.022277) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.022286) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.022292) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_testShr_1(.param  .u64 testShr_param_0)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[160];
	.shared .align 4 .b8 __cuda_local_var_16224_30_non_const_storage[1024];

	.reg .s32 %r10;
	.reg .s32 %r5;
	.reg .pred %p11;
	.reg .s32 %r12;
	.reg .s32 %r13;
	.reg .s64 %r14;
	.reg .s64 %r15;
	.reg .s64 %r8;
	.reg .s32 %r16;
	.reg .s32 %r17;
	.reg .s32 %r18;
	.reg .s64 %r19;
	.reg .s64 %r20;
	.reg .s64 %r1;
	.reg .u32 %r22;
	.reg .u32 %r23;
	.reg .u32 %r21;
	$BB_4_0002_bar_external_in_handler__from_4_0002:		// 3 live-in values 
		mov.s32 %r21, _Zocelot_spill_area; 
		ld.local.s64 %r1, [%r21 + 8]; 
		ld.local.s32 %r5, [%r21 + 40]; 
		ld.local.s64 %r8, [%r21 + 64]; 
		bra $BB_4_0002_bar; 
	$BB_4_0002_bar:
		and.b32 %r10, %r5, 1; 
		setp.eq.s32 %p11, %r10, 0; 
		mov.u32 %r12, %tid.x; 
		xor.b32 %r13, %r12, 1; 
		mul.wide.u32 %r14, %r13, 4; 
		add.s64 %r15, %r8, %r14; 
		selp.b32 %r16, 13, 19, %p11; 
		ld.shared.u32 %r17, [%r15]; 
		mul.lo.s32 %r18, %r16, %r17; 
		mul.wide.s32 %r19, %r5, 4; 
		add.s64 %r20, %r1, %r19; 
		st.global.u32 [%r20], %r18; 
		bra $BB_4_0002_bar_external_out_handler_to_; 
	$BB_4_0002_bar_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r22, _Zocelot_resume_status; 
		st.local.u32 [%r22], 6; 
		mov.s32 %r23, _Zocelot_resume_point; 
		st.local.u32 [%r23], 0; 
		exit; 
}
(0.022503) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(ocelot/cuda/test/kernels/sequence.cu)
(0.022512) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(testShr)
(0.022528) DynamicTranslationCache.cpp:1120: __translateKernel()
(0.022535) DynamicTranslationCache.cpp:1141:   translating subkernel _subkernel_testShr_0
(0.022564) DynamicTranslationCache.cpp:1154:   Converting from PTX IR to LLVM IR.
(0.023663) DynamicTranslationCache.cpp:1171: translated PTX to LLVM
(0.023675) DynamicTranslationCache.cpp:1172: ; Code assembled by Ocelot LLVMKernel 2.1.1677


%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* };

%Dimension = type { i32, i32, i32 };
define default void @_Z_ocelotTranslated__subkernel_testShr_0( %LLVMContext* %__ctaContext ) nounwind align 1;
{
$OcelotRegisterInitializerBlock:
	%ri14 = bitcast i64 0 to i64;
	%ri13 = bitcast i32 0 to i32;
	%ri12 = bitcast i64 0 to i64;
	br label %$BB_4_0002;
$BB_4_0002:
	%rt0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8;
	%rt1 = load i8** %rt0;
	%rt2 = bitcast i8* %rt1 to i64*;
	%r0 = load i64* %rt2, align 8;
	%r1 = bitcast i64 %r0 to i64;
	%rt3 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 0;
	%rt4 = load i32* %rt3;
	%r2 = bitcast i32 %rt4 to i32;
	%rt5 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 0;
	%rt6 = load i32* %rt5;
	%r3 = bitcast i32 %rt6 to i32;
	%rt7 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 0;
	%rt8 = load i32* %rt7;
	%r4 = bitcast i32 %rt8 to i32;
	%rt9 = mul i32 %r2, %r3;
	%r5 = add i32 %r4, %rt9;
	%r6 = shl i32 %r5, 1;
	%rt10 = zext i32 %r4 to i64;
	%r7 = mul i64 %rt10, 4;
	%r8 = bitcast i64 0 to i64;
	%r9 = add i64 %r8, %r7;
	%rt11 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 5;
	%rt12 = load i8** %rt11;
	%rt13 = ptrtoint i8* %rt12 to i64;
	%rt14 = add i64 %r9, %rt13;
	%rt15 = inttoptr i64 %rt14 to i32*;
	store i32 %r6, i32* %rt15, align 4;
	%r10 = bitcast i32 4 to i32;
	%rt16 = zext i32 %r10 to i64;
	%rt17 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt18 = load i8** %rt17;
	%rt19 = ptrtoint i8* %rt18 to i64;
	%rt20 = add i64 %rt16, %rt19;
	%rt21 = inttoptr i64 %rt20 to i32*;
	store i32 5, i32* %rt21, align 4;
	%r11 = bitcast i32 0 to i32;
	%rt22 = zext i32 %r11 to i64;
	%rt23 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt24 = load i8** %rt23;
	%rt25 = ptrtoint i8* %rt24 to i64;
	%rt26 = add i64 %rt22, %rt25;
	%rt27 = inttoptr i64 %rt26 to i32*;
	store i32 65536, i32* %rt27, align 4;
	br label %exit;
$BB_4_0002_external_out_handler_to_4_0002_bar_barrier_entry:
	%r12 = phi i64 [ %ri12, %$OcelotRegisterInitializerBlock ];
	%r13 = phi i32 [ %ri13, %$OcelotRegisterInitializerBlock ];
	%r14 = phi i64 [ %ri14, %$OcelotRegisterIniterminate called after throwing an instance of 'hydrazine::Exception'
  what():  LLVM Parser failed: _subkernel_testShr_0: <string>:63:1: error: expected instruction opcode
$BB_4_0002_external_out_handler_to_4_0002_bar:
^

tializerBlock ];
$BB_4_0002_external_out_handler_to_4_0002_bar:
	%r15 = phi i64 [ %r12, %$BB_4_0002_external_out_handler_to_4_0002_bar_barrier_entry ];
	%r16 = phi i32 [ %r13, %$BB_4_0002_external_out_handler_to_4_0002_bar_barrier_entry ];
	%r17 = phi i64 [ %r14, %$BB_4_0002_external_out_handler_to_4_0002_bar_barrier_entry ];
	%r18 = bitcast i32 8 to i32;
	%rt28 = zext i32 %r18 to i64;
	%rt29 = add i64 %rt28, 8;
	%rt30 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt31 = load i8** %rt30;
	%rt32 = ptrtoint i8* %rt31 to i64;
	%rt33 = add i64 %rt29, %rt32;
	%rt34 = inttoptr i64 %rt33 to i64*;
	store i64 %r15, i64* %rt34, align 8;
	%rt35 = zext i32 %r18 to i64;
	%rt36 = add i64 %rt35, 40;
	%rt37 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt38 = load i8** %rt37;
	%rt39 = ptrtoint i8* %rt38 to i64;
	%rt40 = add i64 %rt36, %rt39;
	%rt41 = inttoptr i64 %rt40 to i32*;
	store i32 %r16, i32* %rt41, align 4;
	%rt42 = zext i32 %r18 to i64;
	%rt43 = add i64 %rt42, 64;
	%rt44 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt45 = load i8** %rt44;
	%rt46 = ptrtoint i8* %rt45 to i64;
	%rt47 = add i64 %rt43, %rt46;
	%rt48 = inttoptr i64 %rt47 to i64*;
	store i64 %r17, i64* %rt48, align 8;
	%r19 = bitcast i32 4 to i32;
	%rt49 = zext i32 %r19 to i64;
	%rt50 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt51 = load i8** %rt50;
	%rt52 = ptrtoint i8* %rt51 to i64;
	%rt53 = add i64 %rt49, %rt52;
	%rt54 = inttoptr i64 %rt53 to i32*;
	store i32 8, i32* %rt54, align 4;
	%r20 = bitcast i32 0 to i32;
	%rt55 = zext i32 %r20 to i64;
	%rt56 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt57 = load i8** %rt56;
	%rt58 = ptrtoint i8* %rt57 to i64;
	%rt59 = add i64 %rt55, %rt58;
	%rt60 = inttoptr i64 %rt59 to i32*;
	store i32 65536, i32* %rt60, align 4;
	br label %exit;
	ret void;
exit:
	ret void;

}


INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCalVectorScale 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestIndirectFunctionCall
INFO     Test completed in 0.0604710578918 seconds
INFO      It produced the following output:
(0.000571) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
(0.003198) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(kernelEntry)
(0.003208) KernelPartitioningPass.cpp:58:   partitioning blocks at barriers
(0.003215) KernelPartitioningPass.cpp:92:     encountered 0 barriers
(0.003371) KernelPartitioningPass.cpp:110:  Partitioning kernel kernelEntry
/*
* Ocelot Version : 2.1.1677
*/
.entry kernelEntry(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{

	.param  .b32 param0;
	.param  .b32 retval0;
	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .s32 %r7;
	.reg .s32 %r8;
	.reg .pred %p9;
	.reg .pred %p10;
	.reg .pred %p11;
	.reg .s64 %r12;
	.reg .s32 %r13;
	.reg .s64 %r14;
	.reg .s64 %r15;
	
	prototype_0: .callprototype (.param .b32 _) prototype_0 (.param .b32 _);
	
	$BB_5_0002:		/**/ 
		ld.param.u64 %r0, [kernelEntry_param_0]; 
		ld.param.u32 %r1, [kernelEntry_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %ntid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		add.s32 %r7, %r6, %r1; 
		and.b32 %r8, %r7, 3; 
		setp.eq.s32 %p9, %r8, 0; 
		@%p9 bra $BB_5_0008; 
	$BB_5_0003:		/**/ 
		setp.eq.s32 %p10, %r8, 1; 
		@%p10 bra $BB_5_0007; 
	$BB_5_0004:		/**/ 
		setp.eq.s32 %p11, %r8, 2; 
		@%p11 bra $BB_5_0006; 
	$BB_5_0005:		/**/ 
		mov.u64 %r12, funcPentuple; 
		bra.uni $BB_5_0009; 
	$BB_5_0008:		/*BB4_6*/ 
		mov.u64 %r12, funcDouble; 
	$BB_5_0009:		/*BB4_7*/ 
		st.param.b32 [param0], %r6; 
		call (retval0), %r12, (param0), prototype_0; 
		ld.param.b32 %r13, [retval0]; 
		mul.wide.s32 %r14, %r6, 4; 
		add.s64 %r15, %r2, %r14; 
		st.global.u32 [%r15], %r13; 
		exit; 
	$BB_5_0006:		/*BB4_4*/ 
		mov.u64 %r12, funcQuadruple; 
		bra.uni $BB_5_0009; 
	$BB_5_0007:		/*BB4_5*/ 
		mov.u64 %r12, funcTriple; 
		bra.uni $BB_5_0009; 
}
(0.003618) KernelPartitioningPass.cpp:253:    Spill region size is 120
(0.003630) KernelPartitioningPass.cpp:147:  KernelGraph::_partitionMinimumSize()
(0.003640) KernelPartitioningPass.cpp:314:  Subkernel::create(kernelEntry)
(0.003648) KernelPartitioningPass.cpp:341:  Subkernel::_create(kernelEntry)
(0.003662) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.003675) KernelPartitioningPass.cpp:440:   adding block $BB_5_0002
(0.003690) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_5_0002 -> $BB_5_0003
(0.003700) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_5_0002 -> $BB_5_0008
(0.003708) KernelPartitioningPass.cpp:492:   ENTRY EDGE
(0.003716) KernelPartitioningPass.cpp:502:   creating internal edges
(0.003722) KernelPartitioningPass.cpp:506:   looking in block mapping: entry -> $BB_5_0002
(0.003728) KernelPartitioningPass.cpp:518:    adding internal edge: entry -> $BB_5_0002
(0.003735) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.003741) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.003749) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.003757) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_kernelEntry_0(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .s32 %r7;
	.reg .s32 %r8;
	.reg .pred %p9;
	$BB_5_0002:		/**/ 
		ld.param.u64 %r0, [kernelEntry_param_0]; 
		ld.param.u32 %r1, [kernelEntry_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %ntid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		add.s32 %r7, %r6, %r1; 
		and.b32 %r8, %r7, 3; 
		setp.eq.s32 %p9, %r8, 0; 
		@%p9 bra $BB_5_0008; 
	$BB_5_0002_external_out_handler_to_5_0003:
	$BB_5_0002_external_out_handler_to_5_0008:
}
(0.003884) KernelPartitioningPass.cpp:314:  Subkernel::create(kernelEntry)
(0.003917) KernelPartitioningPass.cpp:341:  Subkernel::_create(kernelEntry)
(0.003930) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.003938) KernelPartitioningPass.cpp:440:   adding block $BB_5_0003
(0.003948) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_5_0003 -> $BB_5_0004
(0.003957) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_5_0003 -> $BB_5_0007
(0.003965) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_5_0002 -> $BB_5_0003
(0.003973) KernelPartitioningPass.cpp:502:   creating internal edges
(0.003979) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.003986) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.003993) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.004000) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_kernelEntry_1(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .pred %p10;
	.reg .s32 %r8;
	$BB_5_0003_external_in_handler__from_5_0002:
	$BB_5_0003:		/**/ 
		setp.eq.s32 %p10, %r8, 1; 
		@%p10 bra $BB_5_0007; 
	$BB_5_0003_external_out_handler_to_5_0004:
	$BB_5_0003_external_out_handler_to_5_0007:
}
(0.004058) KernelPartitioningPass.cpp:314:  Subkernel::create(kernelEntry)
(0.004065) KernelPartitioningPass.cpp:341:  Subkernel::_create(kernelEntry)
(0.004078) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.004086) KernelPartitioningPass.cpp:440:   adding block $BB_5_0004
(0.004095) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_5_0004 -> $BB_5_0005
(0.004104) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_5_0004 -> $BB_5_0006
(0.004112) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_5_0003 -> $BB_5_0004
(0.004120) KernelPartitioningPass.cpp:502:   creating internal edges
(0.004126) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.004133) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.004141) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.004147) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_kernelEntry_2(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .pred %p11;
	.reg .s32 %r8;
	$BB_5_0004_external_in_handler__from_5_0003:
	$BB_5_0004:		/**/ 
		setp.eq.s32 %p11, %r8, 2; 
		@%p11 bra $BB_5_0006; 
	$BB_5_0004_external_out_handler_to_5_0005:
	$BB_5_0004_external_out_handler_to_5_0006:
}
(0.004205) KernelPartitioningPass.cpp:314:  Subkernel::create(kernelEntry)
(0.004212) KernelPartitioningPass.cpp:341:  Subkernel::_create(kernelEntry)
(0.004224) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.004231) KernelPartitioningPass.cpp:440:   adding block $BB_5_0005
(0.004241) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_5_0005 -> $BB_5_0009
(0.004249) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_5_0004 -> $BB_5_0005
(0.004256) KernelPartitioningPass.cpp:502:   creating internal edges
(0.004262) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.004269) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.004276) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.004282) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_kernelEntry_3(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	$BB_5_0005_external_in_handler__from_5_0004:
	$BB_5_0005:		/**/ 
		mov.u64 %r12, funcPentuple; 
		bra.uni $BB_5_0009; 
	$BB_5_0005_external_out_handler_to_5_0009:
}
(0.004339) KernelPartitioningPass.cpp:314:  Subkernel::create(kernelEntry)
(0.004347) KernelPartitioningPass.cpp:341:  Subkernel::_create(kernelEntry)
(0.004359) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.004367) KernelPartitioningPass.cpp:440:   adding block $BB_5_0006
(0.004376) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_5_0006 -> $BB_5_0009
(0.004385) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_5_0004 -> $BB_5_0006
(0.004392) KernelPartitioningPass.cpp:502:   creating internal edges
(0.004398) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.004405) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.004412) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.004419) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_kernelEntry_4(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	$BB_5_0006_external_in_handler__from_5_0004:
	$BB_5_0006:		/*BB4_4*/ 
		mov.u64 %r12, funcQuadruple; 
		bra.uni $BB_5_0009; 
	$BB_5_0006_external_out_handler_to_5_0009:
}
(0.004469) KernelPartitioningPass.cpp:314:  Subkernel::create(kernelEntry)
(0.004477) KernelPartitioningPass.cpp:341:  Subkernel::_create(kernelEntry)
(0.004488) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.004496) KernelPartitioningPass.cpp:440:   adding block $BB_5_0007
(0.004505) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_5_0007 -> $BB_5_0009
(0.004514) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_5_0003 -> $BB_5_0007
(0.004521) KernelPartitioningPass.cpp:502:   creating internal edges
(0.004527) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.004534) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.004541) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.004547) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_kernelEntry_5(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	$BB_5_0007_external_in_handler__from_5_0003:
	$BB_5_0007:		/*BB4_5*/ 
		mov.u64 %r12, funcTriple; 
		bra.uni $BB_5_0009; 
	$BB_5_0007_external_out_handler_to_5_0009:
}
(0.004597) KernelPartitioningPass.cpp:314:  Subkernel::create(kernelEntry)
(0.004604) KernelPartitioningPass.cpp:341:  Subkernel::_create(kernelEntry)
(0.004616) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.004623) KernelPartitioningPass.cpp:440:   adding block $BB_5_0008
(0.004632) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_5_0008 -> $BB_5_0009
(0.004641) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_5_0002 -> $BB_5_0008
(0.004648) KernelPartitioningPass.cpp:502:   creating internal edges
(0.004654) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.004661) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.004668) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.004675) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_kernelEntry_6(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	$BB_5_0008_external_in_handler__from_5_0002:
	$BB_5_0008:		/*BB4_6*/ 
		mov.u64 %r12, funcDouble; 
	$BB_5_0008_external_out_handler_to_5_0009:
}
(0.004722) KernelPartitioningPass.cpp:314:  Subkernel::create(kernelEntry)
(0.004730) KernelPartitioningPass.cpp:341:  Subkernel::_create(kernelEntry)
(0.004750) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.004761) KernelPartitioningPass.cpp:440:   adding block $BB_5_0009
(0.004771) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_5_0009 -> exit
(0.004779) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_5_0008 -> $BB_5_0009
(0.004788) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_5_0005 -> $BB_5_0009
(0.004797) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_5_0006 -> $BB_5_0009
(0.004806) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_5_0007 -> $BB_5_0009
(0.004813) KernelPartitioningPass.cpp:502:   creating internal edges
(0.004819) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.004827) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.004834) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.004841) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_kernelEntry_7(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s32 %r6;
	.reg .s64 %r12;
	.reg .s32 %r13;
	.reg .s64 %r14;
	.reg .s64 %r15;
	.reg .s64 %r2;
	
	prototype_0: .callprototype (.param .b32 _) prototype_0 (.param .b32 _);
	
	$BB_5_0009_external_in_handler__from_5_0007:
	$BB_5_0009:		/*BB4_7*/ 
		st.param.b32 [param0], %r6; 
		call (retval0), %r12, (param0), prototype_0; 
		ld.param.b32 %r13, [retval0]; 
		mul.wide.s32 %r14, %r6, 4; 
		add.s64 %r15, %r2, %r14; 
		st.global.u32 [%r15], %r13; 
		exit; 
	$BB_5_0009_external_out_handler_to_:
	$BB_5_0009_external_in_handler__from_5_0006:
	$BB_5_0009_external_in_handler__from_5_0005:
	$BB_5_0009_external_in_handler__from_5_0008:
}
(0.004935) KernelPartitioningPass.cpp:169:  Linking external edges
(0.004943) KernelPartitioningPass.cpp:196:    linking $BB_5_0002_external_out_handler_to_5_0003 to $BB_5_0003_external_in_handler__from_5_0002 (entry 65536)
(0.004950) KernelPartitioningPass.cpp:196:    linking $BB_5_0002_external_out_handler_to_5_0008 to $BB_5_0008_external_in_handler__from_5_0002 (entry 393216)
(0.004957) KernelPartitioningPass.cpp:196:    linking $BB_5_0003_external_out_handler_to_5_0004 to $BB_5_0004_external_in_handler__from_5_0003 (entry 131072)
(0.004964) KernelPartitioningPass.cpp:196:    linking $BB_5_0003_external_out_handler_to_5_0007 to $BB_5_0007_external_in_handler__from_5_0003 (entry 327680)
(0.004970) KernelPartitioningPass.cpp:196:    linking $BB_5_0004_external_out_handler_to_5_0005 to $BB_5_0005_external_in_handler__from_5_0004 (entry 196608)
(0.004977) KernelPartitioningPass.cpp:196:    linking $BB_5_0004_external_out_handler_to_5_0006 to $BB_5_0006_external_in_handler__from_5_0004 (entry 262144)
(0.004984) KernelPartitioningPass.cpp:196:    linking $BB_5_0005_external_out_handler_to_5_0009 to $BB_5_0009_external_in_handler__from_5_0005 (entry 458753)
(0.004990) KernelPartitioningPass.cpp:196:    linking $BB_5_0006_external_out_handler_to_5_0009 to $BB_5_0009_external_in_handler__from_5_0006 (entry 458754)
(0.004997) KernelPartitioningPass.cpp:196:    linking $BB_5_0007_external_out_handler_to_5_0009 to $BB_5_0009_external_in_handler__from_5_0007 (entry 458755)
(0.005003) KernelPartitioningPass.cpp:196:    linking $BB_5_0008_external_out_handler_to_5_0009 to $BB_5_0009_external_in_handler__from_5_0008 (entry 458752)
(0.005010) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_5_0009 -> exit
(0.005054) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.005070) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.005077) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.005086) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_5_0002 -> $BB_5_0002_external_out_handler_to_5_0003 (3 live values
(0.005100) KernelPartitioningPass.cpp:853:        alive-out: 2 [type: s64]
(0.005115) KernelPartitioningPass.cpp:853:        alive-out: 6 [type: s32]
(0.005134) KernelPartitioningPass.cpp:853:        alive-out: 8 [type: s32]
(0.005145) KernelPartitioningPass.cpp:984:    creating exit in block $BB_5_0002_external_out_handler_to_5_0003
(0.005159) KernelPartitioningPass.cpp:809:    adding $BB_5_0002 to frontierExitBlocks
(0.005171) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_5_0002 -> $BB_5_0002_external_out_handler_to_5_0008 (3 live values
(0.005180) KernelPartitioningPass.cpp:853:        alive-out: 2 [type: s64]
(0.005191) KernelPartitioningPass.cpp:853:        alive-out: 6 [type: s32]
(0.005201) KernelPartitioningPass.cpp:853:        alive-out: 8 [type: s32]
(0.005212) KernelPartitioningPass.cpp:984:    creating exit in block $BB_5_0002_external_out_handler_to_5_0008
(0.005225) KernelPartitioningPass.cpp:809:    adding $BB_5_0002 to frontierExitBlocks
(0.005237) KernelPartitioningPass.cpp:813:  Barrier exits
(0.005245) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.005256) KernelPartitioningPass.cpp:899:   block $BB_5_0002 (2 external edges) terminator: @%p9 bra $BB_5_0008
(0.005264) KernelPartitioningPass.cpp:907:   1 external edge, modifying branch target to point to handler
(0.005271) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.005283) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.005290) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_kernelEntry_0(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .s32 %r7;
	.reg .s32 %r8;
	.reg .pred %p9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	.reg .u32 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r15;
	$BB_5_0002:		/**/ 
		ld.param.u64 %r0, [kernelEntry_param_0]; 
		ld.param.u32 %r1, [kernelEntry_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %ntid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		add.s32 %r7, %r6, %r1; 
		and.b32 %r8, %r7, 3; 
		setp.eq.s32 %p9, %r8, 0; 
		@%p9 bra $BB_5_0002_external_out_handler_to_5_0008; 
	$BB_5_0002_external_out_handler_to_5_0003:		// 3 live-out values 
		mov.s32 %r10, _Zocelot_spill_area; 
		st.local.s64 [%r10 + 16], %r2; 
		st.local.s32 [%r10 + 48], %r6; 
		st.local.s32 [%r10 + 64], %r8; 
		mov.s32 %r11, _Zocelot_resume_status; 
		st.local.u32 [%r11], 8; 
		mov.s32 %r12, _Zocelot_resume_point; 
		st.local.u32 [%r12], 65536; 
		exit; 
	$BB_5_0002_external_out_handler_to_5_0008:		// 3 live-out values 
		mov.s32 %r13, _Zocelot_spill_area; 
		st.local.s64 [%r13 + 16], %r2; 
		st.local.s32 [%r13 + 48], %r6; 
		st.local.s32 [%r13 + 64], %r8; 
		mov.s32 %r14, _Zocelot_resume_status; 
		st.local.u32 [%r14], 8; 
		mov.s32 %r15, _Zocelot_resume_point; 
		st.local.u32 [%r15], 393216; 
		exit; 
}
(0.005534) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.005548) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.005555) KernelPartitioningPass.cpp:773:      IN-edge: $BB_5_0003_external_in_handler__from_5_0002 -> $BB_5_0003 (3 live values
(0.005564) KernelPartitioningPass.cpp:853:        alive-out: 8 [type: s32]
(0.005576) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.005584) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_5_0003 -> $BB_5_0003_external_out_handler_to_5_0004 (3 live values
(0.005593) KernelPartitioningPass.cpp:853:        alive-out: 8 [type: s32]
(0.005603) KernelPartitioningPass.cpp:984:    creating exit in block $BB_5_0003_external_out_handler_to_5_0004
(0.005617) KernelPartitioningPass.cpp:809:    adding $BB_5_0003 to frontierExitBlocks
(0.005626) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_5_0003 -> $BB_5_0003_external_out_handler_to_5_0007 (3 live values
(0.005634) KernelPartitioningPass.cpp:853:        alive-out: 8 [type: s32]
(0.005644) KernelPartitioningPass.cpp:984:    creating exit in block $BB_5_0003_external_out_handler_to_5_0007
(0.005669) KernelPartitioningPass.cpp:809:    adding $BB_5_0003 to frontierExitBlocks
(0.005678) KernelPartitioningPass.cpp:813:  Barrier exits
(0.005684) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.005695) KernelPartitioningPass.cpp:899:   block $BB_5_0003 (2 external edges) terminator: @%p10 bra $BB_5_0007
(0.005703) KernelPartitioningPass.cpp:907:   1 external edge, modifying branch target to point to handler
(0.005709) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.005718) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.005724) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_kernelEntry_1(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .pred %p10;
	.reg .s32 %r8;
	.reg .u32 %r11;
	.reg .u32 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	$BB_5_0003_external_in_handler__from_5_0002:		// 3 live-in values 
		ld.local.s32 %r8, [%r0 + 64]; 
		bra $BB_5_0003; 
	$BB_5_0003:		/**/ 
		setp.eq.s32 %p10, %r8, 1; 
		@%p10 bra $BB_5_0003_external_out_handler_to_5_0007; 
	$BB_5_0003_external_out_handler_to_5_0004:		// 3 live-out values 
		st.local.s32 [%r0 + 64], %r8; 
		mov.s32 %r11, _Zocelot_resume_status; 
		st.local.u32 [%r11], 8; 
		mov.s32 %r12, _Zocelot_resume_point; 
		st.local.u32 [%r12], 131072; 
		exit; 
	$BB_5_0003_external_out_handler_to_5_0007:		// 3 live-out values 
		st.local.s32 [%r0 + 64], %r8; 
		mov.s32 %r13, _Zocelot_resume_status; 
		st.local.u32 [%r13], 8; 
		mov.s32 %r14, _Zocelot_resume_point; 
		st.local.u32 [%r14], 327680; 
		exit; 
}
(0.005876) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.005888) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.005896) KernelPartitioningPass.cpp:773:      IN-edge: $BB_5_0004_external_in_handler__from_5_0003 -> $BB_5_0004 (3 live values
(0.005905) KernelPartitioningPass.cpp:853:        alive-out: 8 [type: s32]
(0.005917) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.005925) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_5_0004 -> $BB_5_0004_external_out_handler_to_5_0005 (2 live values
(0.005933) KernelPartitioningPass.cpp:984:    creating exit in block $BB_5_0004_external_out_handler_to_5_0005
(0.005950) KernelPartitioningPass.cpp:809:    adding $BB_5_0004 to frontierExitBlocks
(0.005959) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_5_0004 -> $BB_5_0004_external_out_handler_to_5_0006 (2 live values
(0.005967) KernelPartitioningPass.cpp:984:    creating exit in block $BB_5_0004_external_out_handler_to_5_0006
(0.005981) KernelPartitioningPass.cpp:809:    adding $BB_5_0004 to frontierExitBlocks
(0.005988) KernelPartitioningPass.cpp:813:  Barrier exits
(0.005995) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.006006) KernelPartitioningPass.cpp:899:   block $BB_5_0004 (2 external edges) terminator: @%p11 bra $BB_5_0006
(0.006013) KernelPartitioningPass.cpp:907:   1 external edge, modifying branch target to point to handler
(0.006019) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.006028) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.006034) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_kernelEntry_2(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .pred %p11;
	.reg .s32 %r8;
	.reg .u32 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r15;
	$BB_5_0004_external_in_handler__from_5_0003:		// 3 live-in values 
		ld.local.s32 %r8, [%r0 + 64]; 
		bra $BB_5_0004; 
	$BB_5_0004:		/**/ 
		setp.eq.s32 %p11, %r8, 2; 
		@%p11 bra $BB_5_0004_external_out_handler_to_5_0006; 
	$BB_5_0004_external_out_handler_to_5_0005:		// 2 live-out values 
		mov.s32 %r12, _Zocelot_resume_status; 
		st.local.u32 [%r12], 8; 
		mov.s32 %r13, _Zocelot_resume_point; 
		st.local.u32 [%r13], 196608; 
		exit; 
	$BB_5_0004_external_out_handler_to_5_0006:		// 2 live-out values 
		mov.s32 %r14, _Zocelot_resume_status; 
		st.local.u32 [%r14], 8; 
		mov.s32 %r15, _Zocelot_resume_point; 
		st.local.u32 [%r15], 262144; 
		exit; 
}
(0.006180) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.006192) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.006199) KernelPartitioningPass.cpp:773:      IN-edge: $BB_5_0005_external_in_handler__from_5_0004 -> $BB_5_0005 (2 live values
(0.006210) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.006217) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_5_0005 -> $BB_5_0005_external_out_handler_to_5_0009 (3 live values
(0.006226) KernelPartitioningPass.cpp:853:        alive-out: 12 [type: s64]
(0.006238) KernelPartitioningPass.cpp:984:    creating exit in block $BB_5_0005_external_out_handler_to_5_0009
(0.006252) KernelPartitioningPass.cpp:809:    adding $BB_5_0005 to frontierExitBlocks
(0.006259) KernelPartitioningPass.cpp:813:  Barrier exits
(0.006266) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.006275) KernelPartitioningPass.cpp:899:   block $BB_5_0005 (1 external edges) terminator: bra.uni $BB_5_0009
(0.006282) KernelPartitioningPass.cpp:907:   1 external edge, modifying branch target to point to handler
(0.006288) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.006297) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.006304) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_kernelEntry_3(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r15;
	$BB_5_0005_external_in_handler__from_5_0004:		// 2 live-in values 
		bra $BB_5_0005; 
	$BB_5_0005:		/**/ 
		mov.u64 %r12, funcPentuple; 
		bra.uni $BB_5_0005_external_out_handler_to_5_0009; 
	$BB_5_0005_external_out_handler_to_5_0009:		// 3 live-out values 
		mov.s32 %r13, _Zocelot_spill_area; 
		st.local.s64 [%r13 + 96], %r12; 
		mov.s32 %r14, _Zocelot_resume_status; 
		st.local.u32 [%r14], 8; 
		mov.s32 %r15, _Zocelot_resume_point; 
		st.local.u32 [%r15], 458753; 
		exit; 
}
(0.006409) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.006421) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.006428) KernelPartitioningPass.cpp:773:      IN-edge: $BB_5_0006_external_in_handler__from_5_0004 -> $BB_5_0006 (2 live values
(0.006438) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.006446) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_5_0006 -> $BB_5_0006_external_out_handler_to_5_0009 (3 live values
(0.006454) KernelPartitioningPass.cpp:853:        alive-out: 12 [type: s64]
(0.006469) KernelPartitioningPass.cpp:984:    creating exit in block $BB_5_0006_external_out_handler_to_5_0009
(0.006483) KernelPartitioningPass.cpp:809:    adding $BB_5_0006 to frontierExitBlocks
(0.006491) KernelPartitioningPass.cpp:813:  Barrier exits
(0.006498) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.006507) KernelPartitioningPass.cpp:899:   block $BB_5_0006 (1 external edges) terminator: bra.uni $BB_5_0009
(0.006514) KernelPartitioningPass.cpp:907:   1 external edge, modifying branch target to point to handler
(0.006520) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.006530) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.006536) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_kernelEntry_4(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r15;
	$BB_5_0006_external_in_handler__from_5_0004:		// 2 live-in values 
		bra $BB_5_0006; 
	$BB_5_0006:		/*BB4_4*/ 
		mov.u64 %r12, funcQuadruple; 
		bra.uni $BB_5_0006_external_out_handler_to_5_0009; 
	$BB_5_0006_external_out_handler_to_5_0009:		// 3 live-out values 
		mov.s32 %r13, _Zocelot_spill_area; 
		st.local.s64 [%r13 + 96], %r12; 
		mov.s32 %r14, _Zocelot_resume_status; 
		st.local.u32 [%r14], 8; 
		mov.s32 %r15, _Zocelot_resume_point; 
		st.local.u32 [%r15], 458754; 
		exit; 
}
(0.006710) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.006721) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.006729) KernelPartitioningPass.cpp:773:      IN-edge: $BB_5_0007_external_in_handler__from_5_0003 -> $BB_5_0007 (3 live values
(0.006741) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.006748) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_5_0007 -> $BB_5_0007_external_out_handler_to_5_0009 (3 live values
(0.006757) KernelPartitioningPass.cpp:853:        alive-out: 12 [type: s64]
(0.006769) KernelPartitioningPass.cpp:984:    creating exit in block $BB_5_0007_external_out_handler_to_5_0009
(0.006787) KernelPartitioningPass.cpp:809:    adding $BB_5_0007 to frontierExitBlocks
(0.006795) KernelPartitioningPass.cpp:813:  Barrier exits
(0.006802) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.006811) KernelPartitioningPass.cpp:899:   block $BB_5_0007 (1 external edges) terminator: bra.uni $BB_5_0009
(0.006818) KernelPartitioningPass.cpp:907:   1 external edge, modifying branch target to point to handler
(0.006824) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.006834) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.006840) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_kernelEntry_5(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r15;
	$BB_5_0007_external_in_handler__from_5_0003:		// 3 live-in values 
		bra $BB_5_0007; 
	$BB_5_0007:		/*BB4_5*/ 
		mov.u64 %r12, funcTriple; 
		bra.uni $BB_5_0007_external_out_handler_to_5_0009; 
	$BB_5_0007_external_out_handler_to_5_0009:		// 3 live-out values 
		mov.s32 %r13, _Zocelot_spill_area; 
		st.local.s64 [%r13 + 96], %r12; 
		mov.s32 %r14, _Zocelot_resume_status; 
		st.local.u32 [%r14], 8; 
		mov.s32 %r15, _Zocelot_resume_point; 
		st.local.u32 [%r15], 458755; 
		exit; 
}
(0.006947) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.006959) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.006966) KernelPartitioningPass.cpp:773:      IN-edge: $BB_5_0008_external_in_handler__from_5_0002 -> $BB_5_0008 (3 live values
(0.006978) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.006985) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_5_0008 -> $BB_5_0008_external_out_handler_to_5_0009 (3 live values
(0.006994) KernelPartitioningPass.cpp:853:        alive-out: 12 [type: s64]
(0.007005) KernelPartitioningPass.cpp:984:    creating exit in block $BB_5_0008_external_out_handler_to_5_0009
(0.007023) KernelPartitioningPass.cpp:809:    adding $BB_5_0008 to frontierExitBlocks
(0.007031) KernelPartitioningPass.cpp:813:  Barrier exits
(0.007038) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.007049) KernelPartitioningPass.cpp:899:   block $BB_5_0008 (1 external edges) terminator: mov.u64 %r12, funcDouble
(0.007060) KernelPartitioningPass.cpp:939:   fall-through non-control-flow instruction to external edge: mov.u64 %r12, funcDouble
(0.007066) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.007075) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.007081) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_kernelEntry_6(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r15;
	$BB_5_0008_external_in_handler__from_5_0002:		// 3 live-in values 
		bra $BB_5_0008; 
	$BB_5_0008:		/*BB4_6*/ 
		mov.u64 %r12, funcDouble; 
	$BB_5_0008_external_out_handler_to_5_0009:		// 3 live-out values 
		mov.s32 %r13, _Zocelot_spill_area; 
		st.local.s64 [%r13 + 96], %r12; 
		mov.s32 %r14, _Zocelot_resume_status; 
		st.local.u32 [%r14], 8; 
		mov.s32 %r15, _Zocelot_resume_point; 
		st.local.u32 [%r15], 458752; 
		exit; 
}
(0.007223) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.007237) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.007245) KernelPartitioningPass.cpp:773:      IN-edge: $BB_5_0009_external_in_handler__from_5_0008 -> $BB_5_0009 (3 live values
(0.007254) KernelPartitioningPass.cpp:853:        alive-out: 12 [type: s64]
(0.007266) KernelPartitioningPass.cpp:853:        alive-out: 2 [type: s64]
(0.007277) KernelPartitioningPass.cpp:853:        alive-out: 6 [type: s32]
(0.007294) KernelPartitioningPass.cpp:773:      IN-edge: $BB_5_0009_external_in_handler__from_5_0005 -> $BB_5_0009 (3 live values
(0.007303) KernelPartitioningPass.cpp:853:        alive-out: 12 [type: s64]
(0.007315) KernelPartitioningPass.cpp:853:        alive-out: 2 [type: s64]
(0.007325) KernelPartitioningPass.cpp:853:        alive-out: 6 [type: s32]
(0.007341) KernelPartitioningPass.cpp:773:      IN-edge: $BB_5_0009_external_in_handler__from_5_0006 -> $BB_5_0009 (3 live values
(0.007350) KernelPartitioningPass.cpp:853:        alive-out: 12 [type: s64]
(0.007368) KernelPartitioningPass.cpp:853:        alive-out: 2 [type: s64]
(0.007379) KernelPartitioningPass.cpp:853:        alive-out: 6 [type: s32]
(0.007390) KernelPartitioningPass.cpp:773:      IN-edge: $BB_5_0009_external_in_handler__from_5_0007 -> $BB_5_0009 (3 live values
(0.007400) KernelPartitioningPass.cpp:853:        alive-out: 12 [type: s64]
(0.007414) KernelPartitioningPass.cpp:853:        alive-out: 2 [type: s64]
(0.007424) KernelPartitioningPass.cpp:853:        alive-out: 6 [type: s32]
(0.007436) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.007444) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_5_0009 -> $BB_5_0009_external_out_handler_to_ (0 live values
(0.007452) KernelPartitioningPass.cpp:984:    creating exit in block $BB_5_0009_external_out_handler_to_
(0.007469) KernelPartitioningPass.cpp:809:    adding $BB_5_0009 to frontierExitBlocks
(0.007477) KernelPartitioningPass.cpp:813:  Barrier exits
(0.007483) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.007492) KernelPartitioningPass.cpp:899:   block $BB_5_0009 (1 external edges) terminator: exit
(0.007499) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.007510) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.007516) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_kernelEntry_7(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s32 %r6;
	.reg .s64 %r12;
	.reg .s32 %r13;
	.reg .s64 %r14;
	.reg .s64 %r15;
	.reg .s64 %r2;
	.reg .u32 %r20;
	.reg .u32 %r21;
	.reg .u32 %r16;
	.reg .u32 %r17;
	.reg .u32 %r18;
	.reg .u32 %r19;
	
	prototype_0: .callprototype (.param .b32 _) prototype_0 (.param .b32 _);
	
	$BB_5_0009_external_in_handler__from_5_0007:		// 3 live-in values 
		mov.s32 %r19, _Zocelot_spill_area; 
		ld.local.s64 %r12, [%r19 + 96]; 
		ld.local.s64 %r2, [%r19 + 16]; 
		ld.local.s32 %r6, [%r19 + 48]; 
		bra $BB_5_0009; 
	$BB_5_0009:		/*BB4_7*/ 
		st.param.b32 [param0], %r6; 
		call (retval0), %r12, (param0), prototype_0; 
		ld.param.b32 %r13, [retval0]; 
		mul.wide.s32 %r14, %r6, 4; 
		add.s64 %r15, %r2, %r14; 
		st.global.u32 [%r15], %r13; 
		bra $BB_5_0009_external_out_handler_to_; 
	$BB_5_0009_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r20, _Zocelot_resume_status; 
		st.local.u32 [%r20], 6; 
		mov.s32 %r21, _Zocelot_resume_point; 
		st.local.u32 [%r21], 0; 
		exit; 
	$BB_5_0009_external_in_handler__from_5_0006:		// 3 live-in values 
		mov.s32 %r18, _Zocelot_spill_area; 
		ld.local.s64 %r12, [%r18 + 96]; 
		ld.local.s64 %r2, [%r18 + 16]; 
		ld.local.s32 %r6, [%r18 + 48]; 
		bra $BB_5_0009; 
	$BB_5_0009_external_in_handler__from_5_0005:		// 3 live-in values 
		mov.s32 %r17, _Zocelot_spill_area; 
		ld.local.s64 %r12, [%r17 + 96]; 
		ld.local.s64 %r2, [%r17 + 16]; 
		ld.local.s32 %r6, [%r17 + 48]; 
		bra $BB_5_0009; 
	$BB_5_0009_external_in_handler__from_5_0008:		// 3 live-in values 
		mov.s32 %r16, _Zocelot_spill_area; 
		ld.local.s64 %r12, [%r16 + 96]; 
		ld.local.s64 %r2, [%r16 + 16]; 
		ld.local.s32 %r6, [%r16 + 48]; 
		bra $BB_5_0009; 
}
(0.007791) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(ocelot/cuda/test/functions/indirectCall.cu)
(0.007817) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(kernelEntry)
(0.007834) DynamicTranslationCache.cpp:1120: __translateKernel()
(0.007844) DynamicTranslationCache.cpp:1141:   translating subkernel _subkernel_kernelEntry_0
(0.007883) DynamicTranslationCache.cpp:1154:   Converting from PTX IR to LLVM IR.
(0.009397) DynamicTranslationCache.cpp:1171: translated PTX to LLVM
(0.009411) DynamicTranslationCache.cpp:1172: ; Code assembled by Ocelot LLVMKernel 2.1.1677


%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* };

%Dimension = type { i32, i32, i32 };
define default void @_Z_ocelotTranslated__subkernel_kernelEntry_0( %LLVMContext* %__ctaContext ) nounwind align 1;
{
$BB_5_0002:
	%rt0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8;
	%rt1 = load i8** %rt0;
	%rt2 = bitcast i8* %rt1 to i64*;
	%r0 = load i64* %rt2, align 8;
	%rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8;
	%rt5 = load i8** %rt4;
	%rt3 = getelementptr i8* %rt5, i32 8;
	%rt6 = bitcast i8* %rt3 to i32*;
	%r1 = load i32* %rt6, align 4;
	%r2 = bitcast i64 %r0 to i64;
	%rt7 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 0;
	%rt8 = load i32* %rt7;
	%r3 = bitcast i32 %rt8 to i32;
	%rt9 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 0;
	%rt10 = load i32* %rt9;
	%r4 = bitcast i32 %rt10 to i32;
	%rt11 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 0;
	%rt12 = load i32* %rt11;
	%r5 = bitcast i32 %rt12 to i32;
	%rt13 = mul i32 %r3, %r4;
	%r6 = add i32 %r5, %rt13;
	%r7 = add i32 %r6, %r1;
	%r8 = and i32 %r7, 3;
	%r9 = icmp eq i32 %r8, 0;
	br i1 %r9, label %$BB_5_0002_external_out_handler_to_5_0008, label %$BB_5_0002_external_out_handler_to_5_0003;
$BB_5_0002_external_out_handler_to_5_0003:
	%r11 = phi i32 [ %r6, %$BB_5_0002 ];
	%r12 = phi i32 [ %r8, %$BB_5_0002 ];
	%r10 = phi i64 [ %r2, %$BB_5_0002 ];
	%r13 = bitcast i32 8 to i32;
	%rt14 = zext i32 %r13 to i64;
	%rt15 = add i64 %rt14, 16;
	%rt16 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt17 = load i8** %rt16;
	%rt18 = ptrtoint i8* %rt17 to i64;
	%rt19 = add i64 %rt15, %rt18;
	%rt20 = inttoptr i64 %rt19 to i64*;
	store i64 %r10, i64* %rt20, align 8;
	%rt21 = zext i32 %r13 to i64;
	%rt22 = add i64 %rt21, 48;
	%rt23 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt24 = load i8** %rt23;
	%rt25 = ptrtoint i8* %rt24 to i64;
	%rt26 = add i64 %rt22, %rt25;
	%rt27 = inttoptr i64 %rt26 to i32*;
	store i32 %r11, i32* %rt27, align 4;
	%rt28 = zext i32 %r13 to i64;
	%rt29 = add i64 %rt28, 64;
	%rt30 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt31 = load i8** %rt30;
	%rt32 = ptrtoint i8* %rt31 to i64;
	%rt33 = add i64 %rt29, %rt32;
	%rt34 = inttoptr i64 %rt33 to i32*;
	store i32 %r12, i32* %rt34, align 4;
	%r14 = bitcast i32 4 to i32;
	%rt35 = zext i32 %r14 to i64;
	%rt36 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt37 = load i8** %rt36;
	%rt38 = ptrtoint i8* %rt37 to i64;
	%rt39 = add i64 %rt35, %rt38;
	%rt40 = inttoptr i64 %rt39 to i32*;
	store i32 8, i32* %rt40, align 4;
	%r15 = bitcast i32 0 to i32;
	%rt41 = zext i32 %r15 to i64;
	%rt42 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt43 = load i8** %rt42;
	%rt44 = ptrtoint i8* %rt43 to i64;
	%rt45 = add i64 %rt41, %rt44;
	%rt46 = inttoptr i64 %rt45 to i32*;
	store i32 65536, i32* %rt46, align 4;
	br label %exit;
	ret void;
$BB_5_0002_external_out_handler_to_5_0008:
	%r16 = phi i64 [ %r2, %$BB_5_0002 ];
	%r17 = phi i32 [ %r6, %$BB_5_0002 ];
	%r18 = phi i32 [ %r8, %$BB_5_0002 ];
	%r19 = bitcast i32 8 to i32;
	%rt47 = zext i32 %r19 to i64;
	%rt48 = add i64 %rt47, 16;
	%rt49 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt50 = load i8** %rt49;
	%rt51 = ptrtoint i8* %rt50 to i64;
	%rt52 = add i64 %rt48, %rt51;
	%rt53 = inttoptr i64 %rt52 to i64*;
	store i64 %r16, i64* %rt53, align 8;
	%rt54 = zext i32 %r19 to i64;
	%rt55 = add i64 %rt54, 48;
	%rt56 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt57 = load i8** %rt56;
	%rt58 = ptrtoint i8* %rt57 to i64;
	%rt59 = add i64 %rt55, %rt58;
	%rt60 = inttoptr i64 %rt59 to i32*;
	store i32 %r17, i32* %rt60, align 4;
	%rt61 = zext i32 %r19 to i64;
	%rt62 = add i64 %rt61, 64;
	%rt63 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt64 = load i8** %rt63;
	%rt65 = ptrtoint i8* %rt64 to i64;
	%rt66 = add i64 %rt62, %rt65;
	%rt67 = inttoptr i64 %rt66 to i32*;
	store i32 %r18, i32* %rt67, align 4;
	%r20 = bitcast i32 4 to i32;
	%rt68 = zext i32 %r20 to i64;
	%rt69 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt70 = load i8** %rt69;
	%rt71 = ptrtoint i8* %rt70 to i64;
	%rt72 = add i64 %rt68, %rt71;
	%rt73 = inttoptr i64 %rt72 to i32*;
	store i32 8, i32* %rt73, align 4;
	%r21 = bitcast i32 0 to i32;
	%rt74 = zext i32 %r21 to i64;
	%rt75 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt76 = load i8** %rt75;
	%rt77 = ptrtoint i8* %rt76 to i64;
	%rt78 = add i64 %rt74, %rt77;
	%rt79 = inttoptr i64 %rt78 to i32*;
	store i32 393216, i32* %rt79, align 4;
	br label %exit;
	ret void;
exit:
	ret void;

}

(0.010207) DynamicTranslationCache.cpp:1141:   translating subkernel _subkernel_kernelEntry_1
(0.010237) DynamicTranslationCache.cpp:1154:   Converting from PTX IR to LLVM IR.
(0.010980) DynamicTranslationCache.cpp:1171: translated PTX to LLVM
(0.010988) DynamicTranslationCache.cpp:1172: ; Code assembled by Ocelot LLVMKernel 2.1.1677


%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* };

%Dimension = type { i32, i32, i32 };
define default void @_Z_ocelotTranslated__subkernel_kernelEntry_1( %LLVMContext* %__ctaContext ) nounwind align 1;
{
$OcelotRegisterInitializerBlock:
	%ri0 = bitcast i32 0 to i32;
	br label %$BB_5_0003_external_in_handler__from_5_0002;
$BB_5_0003_external_in_handler__from_5_0002:
	%r0 = phi i32 [ %ri0, %$OcelotRegisterInitializerBlock ];
	%rt0 = zext i32 %r0 to i64;
	%rt1 = add i64 %rt0, 64;
	%rt2 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt3 = load i8** %rt2;
	%rt4 = ptrtoint i8* %rt3 to i64;
	%rt5 = add i64 %rt1, %rt4;
	%rt6 = inttoptr i64 %rt5 to i32*;
	%r1 = load i32* %rt6, align 4;
	br label %$BB_5_0003;
$BB_5_0003:
	%r2 = phi i32 [ %r0, %$BB_5_0003_external_in_handler__from_5_0002 ];
	%r3 = phi i32 [ %r1, %$BB_5_0003_external_in_handler__from_5_0002 ];
	%r4 = icmp eq i32 %r3, 1;
	br i1 %r4, label %$BB_5_0003_external_out_handler_to_5_0007, label %$BB_5_0003_external_out_handler_to_5_0004;
$BB_5_0003_external_out_handler_to_5_0004:
	%r5 = phi i32 [ %r2, %$BB_5_0003 ];
	%r6 = phi i32 [ %r3, %$BB_5_0003 ];
	%rt7 = zext i32 %r5 to i64;
	%rt8 = add i64 %rt7, 64;
	%rt9 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt10 = load i8** %rt9;
	%rt11 = ptrtoint i8* %rt10 to i64;
	%rt12 = add i64 %rt8, %rt11;
	%rt13 = inttoptr i64 %rt12 to i32*;
	store i32 %r6, i32* %rt13, align 4;
	%r7 = bitcast i32 4 to i32;
	%rt14 = zext i32 %r7 to i64;
	%rt15 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt16 = load i8** %rt15;
	%rt17 = ptrtoint i8* %rt16 to i64;
	%rt18 = add i64 %rt14, %rt17;
	%rt19 = inttoptr i64 %rt18 to i32*;
	store i32 8, i32* %rt19, align 4;
	%r8 = bitcast i32 0 to i32;
	%rt20 = zext i32 %r8 to i64;
	%rt21 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt22 = load i8** %rt21;
	%rt23 = ptrtoint i8* %rt22 to i64;
	%rt24 = add i64 %rt20, %rt23;
	%rt25 = inttoptr i64 %rt24 to i32*;
	store i32 131072, i32* %rt25, align 4;
	br label %exit;
	ret void;
$BB_5_0003_external_out_handler_to_5_0007:
	%r9 = phi i32 [ %r2, %$BB_5_0003 ];
	%r10 = phi i32 [ %r3, %$BB_5_0003 ];
	%rt26 = zext i32 %r9 to i64;
	%rt27 = add i64 %rt26, 64;
	%rt28 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt29 = load i8** %rt28;
	%rt30 = ptrtoint i8* %rt29 to i64;
	%rt31 = add i64 %rt27, %rt30;
	%rt32 = inttoptr i64 %rt31 to i32*;
	store i32 %r10, i32* %rt32, align 4;
	%r11 = bitcast i32 4 to i32;
	%rt33 = zext i32 %r11 to i64;
	%rt34 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt35 = load i8** %rt34;
	%rt36 = ptrtoint i8* %rt35 to i64;
	%rt37 = add i64 %rt33, %rt36;
	%rt38 = inttoptr i64 %rt37 to i32*;
	store i32 8, i32* %rt38, align 4;
	%r12 = bitcast i32 0 to i32;
	%rt39 = zext i32 %r12 to i64;
	%rt40 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt41 = load i8** %rt40;
	%rt42 = ptrtoint i8* %rt41 to i64;
	%rt43 = add i64 %rt39, %rt42;
	%rt44 = inttoptr i64 %rt43 to i32*;
	store i32 327680, i32* %rt44, align 4;
	br label %exit;
	ret void;
exit:
	ret void;

}

(0.011314) DynamicTranslationCache.cpp:1141:   translating subkernel _subkernel_kernelEntry_2
(0.011340) DynamicTranslationCache.cpp:1154:   Converting from PTX IR to LLVM IR.
(0.011892) DynamicTranslationCache.cpp:1171: translated PTX to LLVM
(0.011900) DynamicTranslationCache.cpp:1172: ; Code assembled by Ocelot LLVMKernel 2.1.1677


%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* };

%Dimension = type { i32, i32, i32 };
define default void @_Z_ocelotTranslated__subkernel_kernelEntry_2( %LLVMContext* %__ctaContext ) nounwind align 1;
{
$OcelotRegisterInitializerBlock:
	%ri0 = bitcast i32 0 to i32;
	br label %$BB_5_0004_external_in_handler__from_5_0003;
$BB_5_0004_external_in_handler__from_5_0003:
	%r0 = phi i32 [ %ri0, %$OcelotRegisterInitializerBlock ];
	%rt0 = zext i32 %r0 to i64;
	%rt1 = add i64 %rt0, 64;
	%rt2 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt3 = load i8** %rt2;
	%rt4 = ptrtoint i8* %rt3 to i64;
	%rt5 = add i64 %rt1, %rt4;
	%rt6 = inttoptr i64 %rt5 to i32*;
	%r1 = load i32* %rt6, align 4;
	br label %$BB_5_0004;
$BB_5_0004:
	%r2 = phi i32 [ %r1, %$BB_5_0004_external_in_handler__from_5_0003 ];
	%r3 = icmp eq i32 %r2, 2;
	br i1 %r3, label %$BB_5_0004_external_out_handler_to_5_0006, label %$BB_5_0004_external_out_handler_to_5_0005;
$BB_5_0004_external_out_handler_to_5_0005:
	%r4 = bitcast i32 4 to i32;
	%rt7 = zext i32 %r4 to i64;
	%rt8 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt9 = load i8** %rt8;
	%rt10 = ptrtoint i8* %rt9 to i64;
	%rt11 = add i64 %rt7, %rt10;
	%rt12 = inttoptr i64 %rt11 to i32*;
	store i32 8, i32* %rt12, align 4;
	%r5 = bitcast i32 0 to i32;
	%rt13 = zext i32 %r5 to i64;
	%rt14 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt15 = load i8** %rt14;
	%rt16 = ptrtoint i8* %rt15 to i64;
	%rt17 = add i64 %rt13, %rt16;
	%rt18 = inttoptr i64 %rt17 to i32*;
	store i32 196608, i32* %rt18, align 4;
	br label %exit;
	ret void;
$BB_5_0004_external_out_handler_to_5_0006:
	%r6 = bitcast i32 4 to i32;
	%rt19 = zext i32 %r6 to i64;
	%rt20 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt21 = load i8** %rt20;
	%rt22 = ptrtoint i8* %rt21 to i64;
	%rt23 = add i64 %rt19, %rt22;
	%rt24 = inttoptr i64 %rt23 to i32*;
	store i32 8, i32* %rt24, align 4;
	%r7 = bitcast i32 0 to i32;
	%rt25 = zext i32 %r7 to i64;
	%rt26 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt27 = load i8** %rt26;
	%rt28 = ptrtoint i8* %rt27 to i64;
	%rt29 = add i64 %rt25, %rt28;
	%rt30 = inttoptr i64 %rt29 to i32*;
	store i32 262144, i32* %rt30, align 4;
	br label %exit;
	ret void;
exit:
	rTestIndirectFunctionCall: ocelot/executive/implementation/DynamicTranslationCache.cpp:885: void setupCallTargets(ir::PTXKernel&, const executive::DynamicTranslationCache&): Assertion `0 && "arbitrary function calls not yet supported"' failed.
et void;

}

(0.012148) DynamicTranslationCache.cpp:1141:   translating subkernel _subkernel_kernelEntry_3

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMKernels 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTextureArray
INFO     Test completed in 0.061742067337 seconds
INFO      It produced the following output:
(0.000497) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
cudaBindTextureToArray() - failed to bind texture: cudaErrorInvalidValue

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestParser -i ../tests/ptx 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestKernels
INFO     Test completed in 0.0644910335541 seconds
INFO      It produced the following output:
(0.010868) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
Pass/Fail : Pass


Name : TestKernels

Description: 


Test Seed : 1328039762
Test time : 0.0140061

Status : Test output:
looping kernel succeeded
matrix vector kernel succeeded



INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestExternalFunctions 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCalVectorScale
INFO     Test completed in 0.0566430091858 seconds
INFO      It produced the following output:
(0.000581) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
No CAL devices found
Pass/Fail : Pass

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaGlobals 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestParser
INFO     Test completed in 0.0597631931305 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestParser

Description: A test for the PTXParser class. Test Points: 1) Load a PTX file 
             and run it through the parser generating a module. Write the 
             module to an intermediate stream. Parse the stream again 
             generating a new module, compare both to make sure that they match.


Test Seed : 1328039762
Test time : 1.5974e-05

Status : 


INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaGlobals
INFO     Test completed in 0.0450730323792 seconds
INFO      It produced the following output:
(0.000503) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
Pass/Fail : Pass

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestEmulator 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXAssembly 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestExternalFunctions
INFO     Test completed in 0.0721440315247 seconds
INFO      It produced the following output:
(0.000903) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
(0.002579) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(kernel)
(0.002590) KernelPartitioningPass.cpp:58:   partitioning blocks at barriers
(0.002597) KernelPartitioningPass.cpp:92:     encountered 0 barriers
(0.002702) KernelPartitioningPass.cpp:110:  Partitioning kernel kernel
/*
* Ocelot Version : 2.1.1677
*/
.entry kernel(.param  .u64 result)
{

	.param  .u64 freeValue;
	.param  .u64 returned;
	.param  .u64 value;
	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u64 %r2;
	.reg .u64 %r3;
	$BB_1_0002:		/**/ 
		mov.u64 %r0, 8; 
		st.param.u64 [value], %r0; 
		call.uni (returned), malloc, (value); 
		ld.param.u64 %r1, [returned]; 
		st.global.u64 [%r1], %r0; 
		ld.global.u64 %r2, [%r1]; 
		ld.param.u64 %r3, [result]; 
		st.global.u64 [%r3], %r2; 
		st.param.u64 [freeValue], %r1; 
		call.uni free, (freeValue); 
		exit; 
}
(0.002849) KernelPartitioningPass.cpp:253:    Spill region size is 24
(0.002861) KernelPartitioningPass.cpp:147:  KernelGraph::_partitionMinimumSize()
(0.002872) KernelPartitioningPass.cpp:314:  Subkernel::create(kernel)
(0.002879) KernelPartitioningPass.cpp:341:  Subkernel::_create(kernel)
(0.002893) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.002907) KernelPartitioningPass.cpp:440:   adding block $BB_1_0002
(0.002922) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.002931) KernelPartitioningPass.cpp:492:   ENTRY EDGE
(0.002939) KernelPartitioningPass.cpp:502:   creating internal edges
(0.002946) KernelPartitioningPass.cpp:506:   looking in block mapping: entry -> $BB_1_0002
(0.002952) KernelPartitioningPass.cpp:518:    adding internal edge: entry -> $BB_1_0002
(0.002959) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.002966) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.002974) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.002982) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_kernel_0(.param  .u64 result)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[24];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u64 %r2;
	.reg .u64 %r3;
	$BB_1_0002:		/**/ 
		mov.u64 %r0, 8; 
		st.param.u64 [value], %r0; 
		call.uni (returned), malloc, (value); 
		ld.param.u64 %r1, [returned]; 
		st.global.u64 [%r1], %r0; 
		ld.global.u64 %r2, [%r1]; 
		ld.param.u64 %r3, [result]; 
		st.global.u64 [%r3], %r2; 
		st.param.u64 [freeValue], %r1; 
		call.uni free, (freeValue); 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.003097) KernelPartitioningPass.cpp:169:  Linking external edges
(0.003105) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_1_0002 -> exit
(0.003141) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.003156) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.003164) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.003173) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.003189) KernelPartitioningPass.cpp:984:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.003206) KernelPartitioningPass.cpp:809:    adding $BB_1_0002 to frontierExitBlocks
(0.003218) KernelPartitioningPass.cpp:813:  Barrier exits
(0.003226) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.003234) KernelPartitioningPass.cpp:899:   block $BB_1_0002 (1 external edges) terminator: exit
(0.003242) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.003254) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.003261) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_kernel_0(.param  .u64 result)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[24];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u64 %r2;
	.reTestExternalFunctions: ocelot/executive/implementation/DynamicTranslationCache.cpp:885: void setupCallTargets(ir::PTXKernel&, const executive::DynamicTranslationCache&): Assertion `0 && "arbitrary function calls not yet supported"' failed.
g .u64 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	$BB_1_0002:		/**/ 
		mov.u64 %r0, 8; 
		st.param.u64 [value], %r0; 
		call.uni (returned), malloc, (value); 
		ld.param.u64 %r1, [returned]; 
		st.global.u64 [%r1], %r0; 
		ld.global.u64 %r2, [%r1]; 
		ld.param.u64 %r3, [result]; 
		st.global.u64 [%r3], %r2; 
		st.param.u64 [freeValue], %r1; 
		call.uni free, (freeValue); 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r4, _Zocelot_resume_status; 
		st.local.u32 [%r4], 6; 
		mov.s32 %r5, _Zocelot_resume_point; 
		st.local.u32 [%r5], 0; 
		exit; 
}
(0.003450) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(someModule)
(0.003476) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(kernel)
(0.003492) DynamicTranslationCache.cpp:1120: __translateKernel()
(0.003502) DynamicTranslationCache.cpp:1141:   translating subkernel _subkernel_kernel_0

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaMalloc 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestEmulator
INFO     Test completed in 0.0521810054779 seconds
INFO      It produced the following output:
(0.003066) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
Pass/Fail : Pass


Name : TestEmulator

Description: 


Test Seed : 1328039762
Test time : 0.00349593

Status : Test output:
10 registers
Register test passed
Load test passed
Store test passed
no errors
Full kernel test passed



INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDataflowGraph -i ../tests/ptx 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMKernels
INFO     Test completed in 0.11865401268 seconds
INFO      It produced the following output:
(0.009981) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
Pass/Fail : Pass


Name : TestLLVMKernels

Description: A unit test for the LLVM executive runtime. Test Points: 1) 
             Execute a kernel with a loop. 2) Execute a matrix multiply kernel.


Test Seed : 1328039762
Test time : 0.0642467

Status : A = [
 1 0 0 0 0 0 0 0 ;
 0.5 1 0 0 0 0 0 0 ;
 0.333333 0.5 1 0 0 0 0 0 ;
 0.25 0.333333 0.5 1 0 0 0 0 ;
 0.2 0.25 0.333333 0.5 1 0 0 0 ;
 0.166667 0.2 0.25 0.333333 0.5 1 0 0 ;
 0.142857 0.166667 0.2 0.25 0.333333 0.5 1 0 ;
 0.125 0.142857 0.166667 0.2 0.25 0.333333 0.5 1 ;
];
V = [
 1 ;
 2 ;
 3 ;
 4 ;
 5 ;
 6 ;
 7 ;
 8 ;
];
R = [
 1 ;
 2.5 ;
 4.33333 ;
 6.41667 ;
 8.7 ;
 11.15 ;
 13.7429 ;
 16.4607 ;
];



INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXAssembly
INFO     Test completed in 0.0774939060211 seconds
INFO      It produced the following output:
(0.003328) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
(0.004740) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.004750) KernelPartitioningPass.cpp:58:   partitioning blocks at barriers
(0.004756) KernelPartitioningPass.cpp:92:     encountered 0 barriers
(0.004848) KernelPartitioningPass.cpp:110:  Partitioning kernel test
/*
* Ocelot Version : 2.1.1677
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
}
(0.004978) KernelPartitioningPass.cpp:253:    Spill region size is 72
(0.004990) KernelPartitioningPass.cpp:147:  KernelGraph::_partitionMinimumSize()
(0.005000) KernelPartitioningPass.cpp:314:  Subkernel::create(test)
(0.005008) KernelPartitioningPass.cpp:341:  Subkernel::_create(test)
(0.005024) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.005037) KernelPartitioningPass.cpp:440:   adding block $BB_1_0002
(0.005052) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.005061) KernelPartitioningPass.cpp:492:   ENTRY EDGE
(0.005069) KernelPartitioningPass.cpp:502:   creating internal edges
(0.005075) KernelPartitioningPass.cpp:506:   looking in block mapping: entry -> $BB_1_0002
(0.005082) KernelPartitioningPass.cpp:518:    adding internal edge: entry -> $BB_1_0002
(0.005089) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.005095) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.005103) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.005111) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.005231) KernelPartitioningPass.cpp:169:  Linking external edges
(0.005239) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_1_0002 -> exit
(0.005277) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.005292) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.005300) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.005308) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.005324) KernelPartitioningPass.cpp:984:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.005341) KernelPartitioningPass.cpp:809:    adding $BB_1_0002 to frontierExitBlocks
(0.005351) KernelPartitioningPass.cpp:813:  Barrier exits
(0.005359) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.005366) KernelPartitioningPass.cpp:899:   block $BB_1_0002 (1 external edges) terminator: exit
(0.005374) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.005417) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.005425) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r10, _Zocelot_resume_status; 
		st.local.u32 [%r10], 6; 
		mov.s32 %r11, _Zocelot_resume_point; 
		st.local.u32 [%r11], 0; 
		exit; 
}
(0.005610) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestVectorElements-u32)
(0.005631) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.005646) DynamicTranslationCache.cpp:1120: __translateKernel()
(0.005655) DynamicTranslationCache.cpp:1141:   translating subkernel _subkernel_test_0
(0.005683) DynamicTranslationCache.cpp:1154:   Converting from PTX IR to LLVM IR.
(0.006469) DynamicTranslationCache.cpp:1171: translated PTX to LLVM
(0.006477) DynamicTranslationCache.cpp:1172: ; Code assembled by Ocelot LLVMKernel 2.1.1677


%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* };

%Dimension = type { i32, i32, i32 };
define default void @_Z_ocelotTranslated__subkernel_test_0( %LLVMContext* %__ctaContext ) nounwind align 1;
{
$BB_1_0002:
	%rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8;
	%rt2 = load i8** %rt1;
	%rt0 = getelementptr i8* %rt2, i32 8;
	%rt3 = bitcast i8* %rt0 to i64*;
	%r0 = load i64* %rt3, align 8;
	%rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8;
	%rt5 = load i8** %rt4;
	%rt6 = bitcast i8* %rt5 to i64*;
	%r1 = load i64* %rt6, align 8;
	%rt8 = inttoptr i64 %r0 to < 4 x i32 >*;
	%rt7 = load < 4 x i32 >* %rt8, align 16;
	%r2 = extractelement < 4 x i32 > %rt7, i32 0;
	%r3 = extractelement < 4 x i32 > %rt7, i32 1;
	%r4 = extractelement < 4 x i32 > %rt7, i32 2;
	%r5 = extractelement < 4 x i32 > %rt7, i32 3;
	%r6 = bitcast i32 %r3 to i32;
	%r7 = bitcast i32 %r4 to i32;
	%r8 = bitcast i32 %r5 to i32;
	%r9 = bitcast i32 %r2 to i32;
	%rt9 = inttoptr i64 %r1 to < 4 x i32 >*;
	%rt10 = insertelement < 4 x i32 > < i32 0, i32 0, i32 0, i32 0 >, i32 %r6, i32 0;
	%rt11 = insertelement < 4 x i32 > %rt10, i32 %r7, i32 1;
	%rt12 = insertelement < 4 x i32 > %rt11, i32 %r8, i32 2;
	%rt13 = insertelement < 4 x i32 > %rt12, i32 %r9, i32 3;
	store < 4 x i32 > %rt13, < 4 x i32 >* %rt9, align 16;
	br label %$BB_1_0002_external_out_handler_to_;
	br label %$BB_1_0002_external_out_handler_to_;
$BB_1_0002_external_out_handler_to_:
	%r10 = bitcast i32 4 to i32;
	%rt14 = zext i32 %r10 to i64;
	%rt15 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt16 = load i8** %rt15;
	%rt17 = ptrtoint i8* %rt16 to i64;
	%rt18 = add i64 %rt14, %rt17;
	%rt19 = inttoptr i64 %rt18 to i32*;
	store i32 6, i32* %rt19, align 4;
	%r11 = bitcast i32 0 to i32;
	%rt20 = zext i32 %r11 to i64;
	%rt21 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt22 = load i8** %rt21;
	%rt23 = ptrtoint i8* %rt22 to i64;
	%rt24 = add i64 %rt20, %rt23;
	%rt25 = inttoptr i64 %rt24 to i32*;
	store i32 0, i32* %rt25, align 4;
	br label %exit;
	ret void;
exit:
	ret void;

}

(0.006933) DynamicTranslationCache.cpp:1220:  _translateKernel('test') complete for 1 subkernels
(0.006942) DynamicTranslationCache.cpp:148:    registered new kernel
(0.006957) DynamicTranslationCache.cpp:1231: _specializeTranslation()
(0.006964) DynamicTranslationCache.cpp:1241:   cloning and optimizing
(0.008317) LLVMUniformVectorization.cpp:112:  LLVMUniformVectorization() on kernel test
(0.008330) DynamicTranslationCache.cpp:1004: Overriding optimization level
(0.008678) LLVMUniformVectorization.cpp:195:  Translation(_subkernel_test_0_opt0_ws2) on subkernel with warp size 2
(0.008689) LLVMUniformVectorization.cpp:210:  Scalar Preprocessing step
(0.008698) LLVMUniformVectorization.cpp:237:     adding mapping entry
(0.008728) LLVMUniformVectorization.cpp:237:     adding mapping exit
(0.008735) LLVMUniformVectorization.cpp:237:     adding mapping $BB_1_0002
(0.008742) LLVMUniformVectorization.cpp:237:     adding mapping $BB_1_0002_external_out_handler_to_
(0.008757) LLVMUniformVectorization.cpp:256:    failed to find label '' in Ocelot block mapping
(0.008765) LLVMUniformVectorization.cpp:256:    failed to find label '' in Ocelot block mapping
(0.008776) LLVMUniformVectorization.cpp:284:   Initializing scheduler entry block
(0.008783) LLVMUniformVectorization.cpp:287:   creating scheduler block
(0.008791) LLVMUniformVectorization.cpp:292:     extracting thread-local arguments
(0.008799) LLVMUniformVectorization.cpp:376:    _loadThreadLocal(thread 0)
(0.008805) LLVMUniformVectorization.cpp:382:    Loading thread-local arguments for thread 0
(0.008811) LLVMUniformVectorization.cpp:383:    inserting into block SchedulerEntry
(0.008908) LLVMUniformVectorization.cpp:227:  Scalar Preprocessing step complete
(0.008916) LLVMUniformVectorization.cpp:557:  Transform Warp Synchronous begin
(0.008924) LLVMUniformVectorization.cpp:600:    packThreadLocal()
(0.008930) LLVMUniformVectorization.cpp:376:    _loadThreadLocal(thread 1)
(0.008937) LLVMUniformVectorization.cpp:382:    Loading thread-local arguments for thread 1
(0.008943) LLVMUniformVectorization.cpp:383:    inserting into block SchedulerEntry
(0.009016) LLVMUniformVectorization.cpp:570:    replicateInstructions()
(0.009109) LLVMUniformVectorization.cpp:670:     _resolveDependencies()
(0.009173) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %6 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 0
(0.009194) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %7 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 1
(0.009214) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 0
(0.009232) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 1
(0.009250) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %2 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 2
(0.009269) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %3 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 0
(0.009287) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 1
(0.009305) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %5 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 2
(0.009324) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %8 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 2
(0.009343) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %9 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 3, i32 0
(0.009361) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %10 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 3, i32 1
(0.009380) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %11 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 3, i32 2
(0.009397) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %localPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
(0.009413) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %sharedPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 5
(0.009430) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %constPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 6
(0.009446) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %paramPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 7
(0.009463) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %argumentPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
(0.009490) LLVMUniformVectorization.cpp:685:        operand 0 not in mapping:   %metadataPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 9
(0.009498) LLVMUniformVectorization.cpp:746:       _vectorizeReplicated()
(0.009509) LLVMUniformVectorization.cpp:566:  Transform Warp Synchronous complete
(0.009516) LLVMUniformVectorization.cpp:199:  Translation(_subkernel_test_0_opt0_ws2, ws 2) complete
(0.009622) LLVMUniformVectorization.cpp:200:   LLVM function:

define internal void @_subkernel_test_0_opt0_ws2(%LLVMContext* %__ctaContext) nounwind align 1 {
SchedulerEntry:
  %0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 0
  %threadId.x.t0 = load i32* %0
  %1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 1
  %threadId.y.t0 = load i32* %1
  %2 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 2
  %threadId.z.t0 = load i32* %2
  %3 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 0
  %blockDim.x.t0 = load i32* %3
  %4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 1
  %blockDim.y.t0 = load i32* %4
  %5 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 2
  %blockDim.z.t0 = load i32* %5
  %6 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 0
  %blockId.x.t0 = load i32* %6
  %7 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 1
  %blockId.y.t0 = load i32* %7
  %8 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 2
  %blockId.z.t0 = load i32* %8
  %9 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 3, i32 0
  %gridDim.x.t0 = load i32* %9
  %10 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 3, i32 1
  %gridDim.y.t0 = load i32* %10
  %11 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 3, i32 2
  %gridDim.z.t0 = load i32* %11
  %localPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %localPtr.t0 = load i8** %localPtrPtr.t0
  %sharedPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 5
  %sharedPtr.t0 = load i8** %sharedPtrPtr.t0
  %constPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 6
  %constPtr.t0 = load i8** %constPtrPtr.t0
  %paramPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 7
  %paramPtr.t0 = load i8** %paramPtrPtr.t0
  %argumentPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %argumentPtr.t0 = load i8** %argumentPtrPtr.t0
  %metadataPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 9
  %metadataPtr.t0 = load i8** %metadataPtrPtr.t0
  %bitcast = bitcast i8* %localPtr.t0 to i32*
  %resumePoint = load i32* %bitcast
  %12 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 0, i32 0
  %threadId.x.t1 = load i32* %12
  %13 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 0, i32 1
  %threadId.y.t1 = load i32* %13
  %14 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 0, i32 2
  %threadId.z.t1 = load i32* %14
  %15 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 1, i32 0
  %blockDim.x.t1 = load i32* %15
  %16 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 1, i32 1
  %blockDim.y.t1 = load i32* %16
  %17 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 1, i32 2
  %blockDim.z.t1 = load i32* %17
  %18 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 2, i32 0
  %blockId.x.t1 = load i32* %18
  %19 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 2, i32 1
  %blockId.y.t1 = load i32* %19
  %20 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 2, i32 2
  %blockId.z.t1 = load i32* %20
  %21 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 3, i32 0
  %gridDim.x.t1 = load i32* %21
  %22 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 3, i32 1
  %gridDim.y.t1 = load i32* %22
  %23 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 3, i32 2
  %gridDim.z.t1 = load i32* %23
  %localPtrPtr.t1 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 4
  %localPtr.t1 = load i8** %localPtrPtr.t1
  %sharedPtrPtr.t1 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 5
  %sharedPtr.t1 = load i8** %sharedPtrPtr.t1
  %constPtrPtr.t1 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 6
  %constPtr.t1 = load i8** %constPtrPtr.t1
  %paramPtrPtr.t1 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 7
  %paramPtr.t1 = load i8** %paramPtrPtr.t1
  %argumentPtrPtr.t1 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 8
  %argumentPtr.t1 = load i8** %argumentPtrPtr.t1
  %metadataPtrPtr.t1 = getelementptr %LLVMContext* %__ctaContext, i32 1, i32 9
  %metadataPtr.t1 = load i8** %metadataPtrPtr.t1
  switch i32 %resumePoint, label %"$BB_1_0002" [
  ]

"$BB_1_0002":                                     ; preds = %SchedulerEntry
  %rt0 = getelementptr i8* %argumentPtr.t0, i32 8
  %rt0.t1 = getelementptr i8* %argumentPtr.t1, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %rt3.t1 = bitcast i8* %rt0.t1 to i64*
  %r0 = load i64* %rt3, align 8
  %r0.t1 = load i64* %rt3.t1, align 8
  %rt6 = bitcast i8* %argumentPtr.t0 to i64*
  %rt6.t1 = bitcast i8* %argumentPtr.t1 to i64*
  %r1 = load i64* %rt6, align 8
  %r1.t1 = load i64* %rt6.t1, align 8
  %rt8 = inttoptr i64 %r0 to <4 x i32>*
  %rt8.t1 = inttoptr i64 %r0.t1 to <4 x i32>*
  %rt7 = load <4 x i32>* %rt8, align 16
  %rt7.t1 = load <4 x i32>* %rt8.t1, align 16
  %r2 = extractelement <4 x i32> %rt7, i32 0
  %r2.t1 = extractelement <4 x i32> %rt7.t1, i32 0
  %r3 = extractelement <4 x i32> %rt7, i32 1
  %r3.t1 = extractelement <4 x i32> %rt7.t1, i32 1
  %r4 = extractelement <4 x i32> %rt7, i32 2
  %r4.t1 = extractelement <4 x i32> %rt7.t1, i32 2
  %r5 = extractelement <4 x i32> %rt7, i32 3
  %r5.t1 = extractelement <4 x i32> %rt7.t1, i32 3
  %rt9 = inttoptr i64 %r1 to <4 x i32>*
  %rt9.t1 = inttoptr i64 %r1.t1 to <4 x i32>*
  %rt10 = insertelement <4 x i32> zeroinitializer, i32 %r3, i32 0
  %rt10.t1 = insertelement <4 x i32> zeroinitializer, i32 %r3.t1, i32 0
  %rt11 = insertelement <4 x i32> %rt10, i32 %r4, i32 1
  %rt11.t1 = insertelement <4 x i32> %rt10.t1, i32 %r4.t1, i32 1
  %rt12 = insertelement <4 x i32> %rt11, i32 %r5, i32 2
  %rt12.t1 = insertelement <4 x i32> %rt11.t1, i32 %r5.t1, i32 2
  %rt13 = insertelement <4 x i32> %rt12, i32 %r2, i32 3
  %rt13.t1 = insertelement <4 x i32> %rt12.t1, i32 %r2.t1, i32 3
  store <4 x i32> %rt13, <4 x i32>* %rt9, align 16
  store <4 x i32> %rt13.t1, <4 x i32>* %rt9.t1, align 16
  br label %"$BB_1_0002_external_out_handler_to_"
                                                  ; No predecessors!
  br label %"$BB_1_0002_external_out_handler_to_"

"$BB_1_0002_external_out_handler_to_":            ; preds = %24, %"$BB_1_0002"
  %rt14 = zext i32 4 to i64
  %rt14.t1 = zext i32 4 to i64
  %rt17 = ptrtoint i8* %localPtr.t0 to i64
  %rt17.t1 = ptrtoint i8* %localPtr.t1 to i64
  %rt18 = add i64 %rt14, %rt17
  %rt18.t1 = add i64 %rt14.t1, %rt17.t1
  %rt19 = inttoptr i64 %rt18 to i32*
  %rt19.t1 = inttoptr i64 %rt18.t1 to i32*
  store i32 6, i32* %rt19, align 4
  store i32 6, i32* %rt19.t1, align 4
  %rt20 = zext i32 0 to i64
  %rt20.t1 = zext i32 0 to i64
  %rt23 = ptrtoint i8* %localPtr.t0 to i64
  %rt23.t1 = ptrtoint i8* %localPtr.t1 to i64
  %rt24 = add i64 %rt20, %rt23
  %rt24.t1 = add i64 %rt20.t1, %rt23.t1
  %rt25 = inttoptr i64 %rt24 to i32*
  %rt25.t1 = inttoptr i64 %rt24.t1 to i32*
  store i32 0, i32* %rt25, align 4
  store i32 0, i32* %rt25.t1, align 4
  br label %exit
                                                  ; No predecessors!
  ret void

exit:                                             ; preds = %"$BB_1_0002_external_out_handler_to_"
  ret void
}

(0.010485) DynamicTranslationCache.cpp:1086: performed transformations
(0.010540) DynamicTranslationCache.cpp:1250:   JIT compiling
(0.011974) DynamicTranslationCache.cpp:1261:   verifying
(0.012087) DynamicTranslationCache.cpp:1276:   updating translation cache data structures
(0.012102) DynamicTranslationCache.cpp:1288:   _specializeTranslation() complete
(0.012112) DynamicTranslationCache.cpp:1231: _specializeTranslation()
(0.012119) DynamicTranslationCache.cpp:1241:   cloning and optimizing
(0.012200) LLVMUniformVectorization.cpp:112:  LLVMUniformVectorization() on kernel test
(0.012230) DynamicTranslationCache.cpp:1004: Overriding optimization level
(0.012386) LLVMUniformVectorization.cpp:195:  Translation(_subkernel_test_0_opt0_ws1) on subkernel with warp size 1
(0.012402) LLVMUniformVectorization.cpp:210:  Scalar Preprocessing step
(0.012408) LLVMUniformVectorization.cpp:237:     adding mapping entry
(0.012416) LLVMUniformVectorization.cpp:237:     adding mapping exit
(0.012423) LLVMUniformVectorization.cpp:237:     adding mapping $BB_1_0002
(0.012429) LLVMUniformVectorization.cpp:237:     adding mapping $BB_1_0002_external_out_handler_to_
(0.012438) LLVMUniformVectorization.cpp:256:    failed to find label '' in Ocelot block mapping
(0.012445) LLVMUniformVectorization.cpp:256:    failed to find label '' in Ocelot block mapping
(0.012453) LLVMUniformVectorization.cpp:284:   Initializing scheduler entry block
(0.012459) LLVMUniformVectorization.cpp:287:   creating scheduler block
(0.012467) LLVMUniformVectorization.cpp:292:     extracting thread-local arguments
(0.012473) LLVMUniformVectorization.cpp:376:    _loadThreadLocal(thread 0)
(0.012479) LLVMUniformVectorization.cpp:382:    Loading thread-local arguments for thread 0
(0.012485) LLVMUniformVectorization.cpp:383:    inserting into block SchedulerEntry
(0.012563) LLVMUniformVectorization.cpp:227:  Scalar Preprocessing step complete
(0.012570) LLVMUniformVectorization.cpp:557:  Transform Warp Synchronous begin
(0.012577) LLVMUniformVectorization.cpp:566:  Transform Warp Synchronous complete
(0.012583) LLVMUniformVectorization.cpp:199:  Translation(_subkernel_test_0_opt0_ws1, ws 1) complete
(0.012658) LLVMUniformVectorization.cpp:200:   LLVM function:

define internal void @_subkernel_test_0_opt0_ws1(%LLVMContext* %__ctaContext) nounwind align 1 {
SchedulerEntry:
  %0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 0
  %threadId.x.t0 = load i32* %0
  %1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 1
  %threadId.y.t0 = load i32* %1
  %2 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 0, i32 2
  %threadId.z.t0 = load i32* %2
  %3 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 0
  %blockDim.x.t0 = load i32* %3
  %4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 1
  %blockDim.y.t0 = load i32* %4
  %5 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 1, i32 2
  %blockDim.z.t0 = load i32* %5
  %6 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 0
  %blockId.x.t0 = load i32* %6
  %7 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 1
  %blockId.y.t0 = load i32* %7
  %8 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 2, i32 2
  %blockId.z.t0 = load i32* %8
  %9 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 3, i32 0
  %gridDim.x.t0 = load i32* %9
  %10 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 3, i32 1
  %gridDim.y.t0 = load i32* %10
  %11 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 3, i32 2
  %gridDim.z.t0 = load i32* %11
  %localPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4
  %localPtr.t0 = load i8** %localPtrPtr.t0
  %sharedPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 5
  %sharedPtr.t0 = load i8** %sharedPtrPtr.t0
  %constPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 6
  %constPtr.t0 = load i8** %constPtrPtr.t0
  %paramPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 7
  %paramPtr.t0 = load i8** %paramPtrPtr.t0
  %argumentPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8
  %argumentPtr.t0 = load i8** %argumentPtrPtr.t0
  %metadataPtrPtr.t0 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 9
  %metadataPtr.t0 = load i8** %metadataPtrPtr.t0
  %bitcast = bitcast i8* %localPtr.t0 to i32*
  %resumePoint = load i32* %bitcast
  switch i32 %resumePoint, label %"$BB_1_0002" [
  ]

"$BB_1_0002":                                     ; preds = %SchedulerEntry
  %rt0 = getelementptr i8* %argumentPtr.t0, i32 8
  %rt3 = bitcast i8* %rt0 to i64*
  %r0 = load i64* %rt3, align 8
  %rt6 = bitcast i8* %argumentPtr.t0 to i64*
  %r1 = load i64* %rt6, align 8
  %rt8 = inttoptr i64 %r0 to <4 x i32>*
  %rt7 = load <4 x i32>* %rt8, align 16
  %r2 = extractelement <4 x i32> %rt7, i32 0
  %r3 = extractelement <4 x i32> %rt7, i32 1
  %r4 = extractelement <4 x i32> %rt7, i32 2
  %r5 = extractelement <4 x i32> %rt7, i32 3
  %rt9 = inttoptr i64 %r1 to <4 x i32>*
  %rt10 = insertelement <4 x i32> zeroinitializer, i32 %r3, i32 0
  %rt11 = insertelement <4 x i32> %rt10, i32 %r4, i32 1
  %rt12 = insertelement <4 x i32> %rt11, i32 %r5, i32 2
  %rt13 = insertelement <4 x i32> %rt12, i32 %r2, i32 3
  store <4 x i32> %rt13, <4 x i32>* %rt9, align 16
  br label %"$BB_1_0002_external_out_handler_to_"
                                                  ; No predecessors!
  br label %"$BB_1_0002_external_out_handler_to_"

"$BB_1_0002_external_out_handler_to_":            ; preds = %12, %"$BB_1_0002"
  %rt14 = zext i32 4 to i64
  %rt17 = ptrtoint i8* %localPtr.t0 to i64
  %rt18 = add i64 %rt14, %rt17
  %rt19 = inttoptr i64 %rt18 to i32*
  store i32 6, i32* %rt19, align 4
  %rt20 = zext i32 0 to i64
  %rt23 = ptrtoint i8* %localPtr.t0 to i64
  %rt24 = add i64 %rt20, %rt23
  %rt25 = inttoptr i64 %rt24 to i32*
  store i32 0, i32* %rt25, align 4
  br label %exit
                                                  ; No predecessors!
  ret void

exit:                                             ; preds = %"$BB_1_0002_external_out_handler_to_"
  ret void
}

(0.013110) DynamicTranslationCache.cpp:1086: performed transformations
(0.013153) DynamicTranslationCache.cpp:1250:   JIT compiling
(0.013680) DynamicTranslationCache.cpp:1261:   verifying
(0.013772) DynamicTranslationCache.cpp:1276:   updating translation cache data structures
(0.013781) DynamicTranslationCache.cpp:1288:   _specializeTranslation() complete
(0.014609) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.014618) KernelPartitioningPass.cpp:58:   partitioning blocks at barriers
(0.014624) KernelPartitioningPass.cpp:92:     encountered 0 barriers
(0.014672) KernelPartitioningPass.cpp:110:  Partitioning kernel test
/*
* Ocelot Version : 2.1.1677
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
}
(0.014773) KernelPartitioningPass.cpp:253:    Spill region size is 72
(0.014781) KernelPartitioningPass.cpp:147:  KernelGraph::_partitionMinimumSize()
(0.014788) KernelPartitioningPass.cpp:314:  Subkernel::create(test)
(0.014795) KernelPartitioningPass.cpp:341:  Subkernel::_create(test)
(0.014807) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.014819) KernelPartitioningPass.cpp:440:   adding block $BB_1_0002
(0.014830) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.014837) KernelPartitioningPass.cpp:492:   ENTRY EDGE
(0.014844) KernelPartitioningPass.cpp:502:   creating internal edges
(0.014850) KernelPartitioningPass.cpp:506:   looking in block mapping: entry -> $BB_1_0002
(0.014857) KernelPartitioningPass.cpp:518:    adding internal edge: entry -> $BB_1_0002
(0.014864) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.014870) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.014877) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.014883) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.015006) KernelPartitioningPass.cpp:169:  Linking external edges
(0.015014) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_1_0002 -> exit
(0.015049) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.015062) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.015069) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.015076) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.015086) KernelPartitioningPass.cpp:984:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.015100) KernelPartitioningPass.cpp:809:    adding $BB_1_0002 to frontierExitBlocks
(0.015109) KernelPartitioningPass.cpp:813:  Barrier exits
(0.015115) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.015123) KernelPartitioningPass.cpp:899:   block $BB_1_0002 (1 external edges) terminator: exit
(0.015130) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.015138) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.015144) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r10, _Zocelot_resume_status; 
		st.local.u32 [%r10], 6; 
		mov.s32 %r11, _Zocelot_resume_point; 
		st.local.u32 [%r11], 0; 
		exit; 
}
(0.015280) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestVectorElements-u32)
(0.015288) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.015295) DynamicTranslationCache.cpp:152:    kernel already registered
(0.016068) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.016077) KernelPartitioningPass.cpp:58:   partitioning blocks at barriers
(0.016083) KernelPartitioningPass.cpp:92:     encountered 0 barriers
(0.016119) KernelPartitioningPass.cpp:110:  Partitioning kernel test
/*
* Ocelot Version : 2.1.1677
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
}
(0.016211) KernelPartitioningPass.cpp:253:    Spill region size is 72
(0.016219) KernelPartitioningPass.cpp:147:  KernelGraph::_partitionMinimumSize()
(0.016226) KernelPartitioningPass.cpp:314:  Subkernel::create(test)
(0.016232) KernelPartitioningPass.cpp:341:  Subkernel::_create(test)
(0.016244) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.016255) KernelPartitioningPass.cpp:440:   adding block $BB_1_0002
(0.016266) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.016273) KernelPartitioningPass.cpp:492:   ENTRY EDGE
(0.016279) KernelPartitioningPass.cpp:502:   creating internal edges
(0.016299) KernelPartitioningPass.cpp:506:   looking in block mapping: entry -> $BB_1_0002
(0.016306) KernelPartitioningPass.cpp:518:    adding internal edge: entry -> $BB_1_0002
(0.016313) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.016319) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.016326) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.016332) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.016436) KernelPartitioningPass.cpp:169:  Linking external edges
(0.016443) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_1_0002 -> exit
(0.016477) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.016489) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.016495) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.016502) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.016511) KernelPartitioningPass.cpp:984:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.016525) KernelPartitioningPass.cpp:809:    adding $BB_1_0002 to frontierExitBlocks
(0.016533) KernelPartitioningPass.cpp:813:  Barrier exits
(0.016540) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.016547) KernelPartitioningPass.cpp:899:   block $BB_1_0002 (1 external edges) terminator: exit
(0.016554) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.016562) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.016568) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r10, _Zocelot_resume_status; 
		st.local.u32 [%r10], 6; 
		mov.s32 %r11, _Zocelot_resume_point; 
		st.local.u32 [%r11], 0; 
		exit; 
}
(0.016700) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestVectorElements-u32)
(0.016708) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.016714) DynamicTranslationCache.cpp:152:    kernel already registered
(0.017427) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.017435) KernelPartitioningPass.cpp:58:   partitioning blocks at barriers
(0.017442) KernelPartitioningPass.cpp:92:     encountered 0 barriers
(0.017478) KernelPartitioningPass.cpp:110:  Partitioning kernel test
/*
* Ocelot Version : 2.1.1677
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
}
(0.017581) KernelPartitioningPass.cpp:253:    Spill region size is 72
(0.017589) KernelPartitioningPass.cpp:147:  KernelGraph::_partitionMinimumSize()
(0.017596) KernelPartitioningPass.cpp:314:  Subkernel::create(test)
(0.017602) KernelPartitioningPass.cpp:341:  Subkernel::_create(test)
(0.017614) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.017625) KernelPartitioningPass.cpp:440:   adding block $BB_1_0002
(0.017636) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.017643) KernelPartitioningPass.cpp:492:   ENTRY EDGE
(0.017649) KernelPartitioningPass.cpp:502:   creating internal edges
(0.017655) KernelPartitioningPass.cpp:506:   looking in block mapping: entry -> $BB_1_0002
(0.017662) KernelPartitioningPass.cpp:518:    adding internal edge: entry -> $BB_1_0002
(0.017668) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.017675) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.017682) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.017689) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.017793) KernelPartitioningPass.cpp:169:  Linking external edges
(0.017800) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_1_0002 -> exit
(0.017834) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.017846) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.017853) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.017859) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.017868) KernelPartitioningPass.cpp:984:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.017882) KernelPartitioningPass.cpp:809:    adding $BB_1_0002 to frontierExitBlocks
(0.017890) KernelPartitioningPass.cpp:813:  Barrier exits
(0.017896) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.017903) KernelPartitioningPass.cpp:899:   block $BB_1_0002 (1 external edges) terminator: exit
(0.017910) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.017919) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.017925) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r10, _Zocelot_resume_status; 
		st.local.u32 [%r10], 6; 
		mov.s32 %r11, _Zocelot_resume_point; 
		st.local.u32 [%r11], 0; 
		exit; 
}
(0.018070) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestVectorElements-u32)
(0.018078) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.018085) DynamicTranslationCache.cpp:152:    kernel already registered
(0.018780) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.018788) KernelPartitioningPass.cpp:58:   partitioning blocks at barriers
(0.018795) KernelPartitioningPass.cpp:92:     encountered 0 barriers
(0.018831) KernelPartitioningPass.cpp:110:  Partitioning kernel test
/*
* Ocelot Version : 2.1.1677
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
}
(0.018921) KernelPartitioningPass.cpp:253:    Spill region size is 72
(0.018929) KernelPartitioningPass.cpp:147:  KernelGraph::_partitionMinimumSize()
(0.018935) KernelPartitioningPass.cpp:314:  Subkernel::create(test)
(0.018942) KernelPartitioningPass.cpp:341:  Subkernel::_create(test)
(0.018953) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.018965) KernelPartitioningPass.cpp:440:   adding block $BB_1_0002
(0.018975) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.018982) KernelPartitioningPass.cpp:492:   ENTRY EDGE
(0.018989) KernelPartitioningPass.cpp:502:   creating internal edges
(0.018995) KernelPartitioningPass.cpp:506:   looking in block mapping: entry -> $BB_1_0002
(0.019001) KernelPartitioningPass.cpp:518:    adding internal edge: entry -> $BB_1_0002
(0.019008) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.019014) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.019021) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.019027) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.019129) KernelPartitioningPass.cpp:169:  Linking external edges
(0.019136) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_1_0002 -> exit
(0.019171) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.019182) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.019188) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.019195) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.019203) KernelPartitioningPass.cpp:984:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.019217) KernelPartitioningPass.cpp:809:    adding $BB_1_0002 to frontierExitBlocks
(0.019225) KernelPartitioningPass.cpp:813:  Barrier exits
(0.019231) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.019238) KernelPartitioningPass.cpp:899:   block $BB_1_0002 (1 external edges) terminator: exit
(0.019245) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.019254) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.019260) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r10, _Zocelot_resume_status; 
		st.local.u32 [%r10], 6; 
		mov.s32 %r11, _Zocelot_resume_point; 
		st.local.u32 [%r11], 0; 
		exit; 
}
(0.019401) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestVectorElements-u32)
(0.019409) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.019415) DynamicTranslationCache.cpp:152:    kernel already registered
(0.020105) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.020113) KernelPartitioningPass.cpp:58:   partitioning blocks at barriers
(0.020119) KernelPartitioningPass.cpp:92:     encountered 0 barriers
(0.020156) KernelPartitioningPass.cpp:110:  Partitioning kernel test
/*
* Ocelot Version : 2.1.1677
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
}
(0.020247) KernelPartitioningPass.cpp:253:    Spill region size is 72
(0.020255) KernelPartitioningPass.cpp:147:  KernelGraph::_partitionMinimumSize()
(0.020261) KernelPartitioningPass.cpp:314:  Subkernel::create(test)
(0.020267) KernelPartitioningPass.cpp:341:  Subkernel::_create(test)
(0.020280) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.020292) KernelPartitioningPass.cpp:440:   adding block $BB_1_0002
(0.020302) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.020309) KernelPartitioningPass.cpp:492:   ENTRY EDGE
(0.020316) KernelPartitioningPass.cpp:502:   creating internal edges
(0.020322) KernelPartitioningPass.cpp:506:   looking in block mapping: entry -> $BB_1_0002
(0.020329) KernelPartitioningPass.cpp:518:    adding internal edge: entry -> $BB_1_0002
(0.020336) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.020342) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.020349) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.020355) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.020458) KernelPartitioningPass.cpp:169:  Linking external edges
(0.020466) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_1_0002 -> exit
(0.020501) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.020513) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.020520) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.020537) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.020547) KernelPartitioningPass.cpp:984:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.020561) KernelPartitioningPass.cpp:809:    adding $BB_1_0002 to frontierExitBlocks
(0.020569) KernelPartitioningPass.cpp:813:  Barrier exits
(0.020575) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.020582) KernelPartitioningPass.cpp:899:   block $BB_1_0002 (1 external edges) terminator: exit
(0.020590) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.020598) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.020604) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r10, _Zocelot_resume_status; 
		st.local.u32 [%r10], 6; 
		mov.s32 %r11, _Zocelot_resume_point; 
		st.local.u32 [%r11], 0; 
		exit; 
}
(0.020738) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestVectorElements-u32)
(0.020746) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.020753) DynamicTranslationCache.cpp:152:    kernel already registered
(0.021461) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.021469) KernelPartitioningPass.cpp:58:   partitioning blocks at barriers
(0.021476) KernelPartitioningPass.cpp:92:     encountered 0 barriers
(0.021513) KernelPartitioningPass.cpp:110:  Partitioning kernel test
/*
* Ocelot Version : 2.1.1677
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
}
(0.021606) KernelPartitioningPass.cpp:253:    Spill region size is 72
(0.021614) KernelPartitioningPass.cpp:147:  KernelGraph::_partitionMinimumSize()
(0.021621) KernelPartitioningPass.cpp:314:  Subkernel::create(test)
(0.021627) KernelPartitioningPass.cpp:341:  Subkernel::_create(test)
(0.021642) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.021653) KernelPartitioningPass.cpp:440:   adding block $BB_1_0002
(0.021664) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.021671) KernelPartitioningPass.cpp:492:   ENTRY EDGE
(0.021678) KernelPartitioningPass.cpp:502:   creating internal edges
(0.021684) KernelPartitioningPass.cpp:506:   looking in block mapping: entry -> $BB_1_0002
(0.021690) KernelPartitioningPass.cpp:518:    adding internal edge: entry -> $BB_1_0002
(0.021697) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.021703) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.021710) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.021717) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.021836) KernelPartitioningPass.cpp:169:  Linking external edges
(0.021843) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_1_0002 -> exit
(0.021878) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.021890) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.021897) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.021903) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.021913) KernelPartitioningPass.cpp:984:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.021927) KernelPartitioningPass.cpp:809:    adding $BB_1_0002 to frontierExitBlocks
(0.021935) KernelPartitioningPass.cpp:813:  Barrier exits
(0.021941) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.021949) KernelPartitioningPass.cpp:899:   block $BB_1_0002 (1 external edges) terminator: exit
(0.021956) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.021965) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.021971) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r10, _Zocelot_resume_status; 
		st.local.u32 [%r10], 6; 
		mov.s32 %r11, _Zocelot_resume_point; 
		st.local.u32 [%r11], 0; 
		exit; 
}
(0.022107) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestVectorElements-u32)
(0.022115) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.022122) DynamicTranslationCache.cpp:152:    kernel already registered
(0.022893) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.022902) KernelPartitioningPass.cpp:58:   partitioning blocks at barriers
(0.022909) KernelPartitioningPass.cpp:92:     encountered 0 barriers
(0.022951) KernelPartitioningPass.cpp:110:  Partitioning kernel test
/*
* Ocelot Version : 2.1.1677
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
}
(0.023044) KernelPartitioningPass.cpp:253:    Spill region size is 72
(0.023052) KernelPartitioningPass.cpp:147:  KernelGraph::_partitionMinimumSize()
(0.023060) KernelPartitioningPass.cpp:314:  Subkernel::create(test)
(0.023066) KernelPartitioningPass.cpp:341:  Subkernel::_create(test)
(0.023078) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.023090) KernelPartitioningPass.cpp:440:   adding block $BB_1_0002
(0.023100) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.023129) KernelPartitioningPass.cpp:492:   ENTRY EDGE
(0.023137) KernelPartitioningPass.cpp:502:   creating internal edges
(0.023143) KernelPartitioningPass.cpp:506:   looking in block mapping: entry -> $BB_1_0002
(0.023149) KernelPartitioningPass.cpp:518:    adding internal edge: entry -> $BB_1_0002
(0.023156) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.023163) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.023170) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.023176) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.023280) KernelPartitioningPass.cpp:169:  Linking external edges
(0.023287) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_1_0002 -> exit
(0.023321) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.023333) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.023340) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.023346) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.023355) KernelPartitioningPass.cpp:984:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.023369) KernelPartitioningPass.cpp:809:    adding $BB_1_0002 to frontierExitBlocks
(0.023377) KernelPartitioningPass.cpp:813:  Barrier exits
(0.023384) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.023391) KernelPartitioningPass.cpp:899:   block $BB_1_0002 (1 external edges) terminator: exit
(0.023398) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.023406) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.023412) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r10, _Zocelot_resume_status; 
		st.local.u32 [%r10], 6; 
		mov.s32 %r11, _Zocelot_resume_point; 
		st.local.u32 [%r11], 0; 
		exit; 
}
(0.023542) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestVectorElements-u32)
(0.023550) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.023556) DynamicTranslationCache.cpp:152:    kernel already registered
(0.024253) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.024261) KernelPartitioningPass.cpp:58:   partitioning blocks at barriers
(0.024268) KernelPartitioningPass.cpp:92:     encountered 0 barriers
(0.024305) KernelPartitioningPass.cpp:110:  Partitioning kernel test
/*
* Ocelot Version : 2.1.1677
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
}
(0.024403) KernelPartitioningPass.cpp:253:    Spill region size is 72
(0.024412) KernelPartitioningPass.cpp:147:  KernelGraph::_partitionMinimumSize()
(0.024419) KernelPartitioningPass.cpp:314:  Subkernel::create(test)
(0.024425) KernelPartitioningPass.cpp:341:  Subkernel::_create(test)
(0.024437) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.024449) KernelPartitioningPass.cpp:440:   adding block $BB_1_0002
(0.024459) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.024466) KernelPartitioningPass.cpp:492:   ENTRY EDGE
(0.024473) KernelPartitioningPass.cpp:502:   creating internal edges
(0.024479) KernelPartitioningPass.cpp:506:   looking in block mapping: entry -> $BB_1_0002
(0.024485) KernelPartitioningPass.cpp:518:    adding internal edge: entry -> $BB_1_0002
(0.024492) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.024498) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.024505) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.024511) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.024613) KernelPartitioningPass.cpp:169:  Linking external edges
(0.024620) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_1_0002 -> exit
(0.024654) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.024665) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.024672) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.024679) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.024687) KernelPartitioningPass.cpp:984:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.024701) KernelPartitioningPass.cpp:809:    adding $BB_1_0002 to frontierExitBlocks
(0.024708) KernelPartitioningPass.cpp:813:  Barrier exits
(0.024714) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.024722) KernelPartitioningPass.cpp:899:   block $BB_1_0002 (1 external edges) terminator: exit
(0.024729) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.024737) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.024743) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r10, _Zocelot_resume_status; 
		st.local.u32 [%r10], 6; 
		mov.s32 %r11, _Zocelot_resume_point; 
		st.local.u32 [%r11], 0; 
		exit; 
}
(0.024883) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestVectorElements-u32)
(0.024891) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.024897) DynamicTranslationCache.cpp:152:    kernel already registered
(0.025647) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.025656) KernelPartitioningPass.cpp:58:   partitioning blocks at barriers
(0.025662) KernelPartitioningPass.cpp:92:     encountered 0 barriers
(0.025701) KernelPartitioningPass.cpp:110:  Partitioning kernel test
/*
* Ocelot Version : 2.1.1677
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
}
(0.025793) KernelPartitioningPass.cpp:253:    Spill region size is 72
(0.025801) KernelPartitioningPass.cpp:147:  KernelGraph::_partitionMinimumSize()
(0.025808) KernelPartitioningPass.cpp:314:  Subkernel::create(test)
(0.025815) KernelPartitioningPass.cpp:341:  Subkernel::_create(test)
(0.025827) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.025839) KernelPartitioningPass.cpp:440:   adding block $BB_1_0002
(0.025849) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.025856) KernelPartitioningPass.cpp:492:   ENTRY EDGE
(0.025863) KernelPartitioningPass.cpp:502:   creating internal edges
(0.025869) KernelPartitioningPass.cpp:506:   looking in block mapping: entry -> $BB_1_0002
(0.025876) KernelPartitioningPass.cpp:518:    adding internal edge: entry -> $BB_1_0002
(0.025883) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.025889) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.025896) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.025903) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.026007) KernelPartitioningPass.cpp:169:  Linking external edges
(0.026014) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_1_0002 -> exit
(0.026049) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.026061) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.026068) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.026075) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.026084) KernelPartitioningPass.cpp:984:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.026098) KernelPartitioningPass.cpp:809:    adding $BB_1_0002 to frontierExitBlocks
(0.026106) KernelPartitioningPass.cpp:813:  Barrier exits
(0.026113) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.026120) KernelPartitioningPass.cpp:899:   block $BB_1_0002 (1 external edges) terminator: exit
(0.026127) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.026136) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.026159) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r10, _Zocelot_resume_status; 
		st.local.u32 [%r10], 6; 
		mov.s32 %r11, _Zocelot_resume_point; 
		st.local.u32 [%r11], 0; 
		exit; 
}
(0.026296) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestVectorElements-u32)
(0.026304) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.026311) DynamicTranslationCache.cpp:152:    kernel already registered
(0.027072) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.027081) KernelPartitioningPass.cpp:58:   partitioning blocks at barriers
(0.027088) KernelPartitioningPass.cpp:92:     encountered 0 barriers
(0.027124) KernelPartitioningPass.cpp:110:  Partitioning kernel test
/*
* Ocelot Version : 2.1.1677
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u16 %r2;
	.reg .u16 %r3;
	.reg .u16 %r4;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.u16 %r2, [%r0]; 
		ld.global.u16 %r3, [%r0 + 2]; 
		add.u16 %r4, %r2, %r3; 
		st.global.u16 [%r1], %r4; 
		exit; 
}
(0.027201) KernelPartitioningPass.cpp:253:    Spill region size is 32
(0.027210) KernelPartitioningPass.cpp:147:  KernelGraph::_partitionMinimumSize()
(0.027217) KernelPartitioningPass.cpp:314:  Subkernel::create(test)
(0.027224) KernelPartitioningPass.cpp:341:  Subkernel::_create(test)
(0.027236) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.027247) KernelPartitioningPass.cpp:440:   adding block $BB_1_0002
(0.027257) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.027265) KernelPartitioningPass.cpp:492:   ENTRY EDGE
(0.027272) KernelPartitioningPass.cpp:502:   creating internal edges
(0.027278) KernelPartitioningPass.cpp:506:   looking in block mapping: entry -> $BB_1_0002
(0.027284) KernelPartitioningPass.cpp:518:    adding internal edge: entry -> $BB_1_0002
(0.027291) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.027298) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.027305) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.027311) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[32];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u16 %r2;
	.reg .u16 %r3;
	.reg .u16 %r4;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.u16 %r2, [%r0]; 
		ld.global.u16 %r3, [%r0 + 2]; 
		add.u16 %r4, %r2, %r3; 
		st.global.u16 [%r1], %r4; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.027395) KernelPartitioningPass.cpp:169:  Linking external edges
(0.027403) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_1_0002 -> exit
(0.027434) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.027446) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.027452) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.027459) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.027491) KernelPartitioningPass.cpp:984:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.027507) KernelPartitioningPass.cpp:809:    adding $BB_1_0002 to frontierExitBlocks
(0.027515) KernelPartitioningPass.cpp:813:  Barrier exits
(0.027522) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.027530) KernelPartitioningPass.cpp:899:   block $BB_1_0002 (1 external edges) terminator: exit
(0.027537) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.027545) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.027552) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1677
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[32];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u16 %r2;
	.reg .u16 %r3;
	.reg .u16 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.u16 %r2, [%r0]; 
		ld.global.u16 %r3, [%r0 + 2]; 
		add.u16 %r4, %r2, %r3; 
		st.global.u16 [%r1], %r4; 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r5, _Zocelot_resume_status; 
		st.local.u32 [%r5], 6; 
		mov.s32 %r6, _Zocelot_resume_point; 
		st.local.u32 [%r6], 0; 
		exit; 
}
(0.027666) DynamicTranslationCache.cpp:160:  DynamicTranslationCache::loadModule(TestAdd-u16)
(0.027678) DynamicTranslationCache.cpp:134:  DynamicTranslationCache::registerKernel(test)
(0.027693) DynamicTranslationCache.cpp:1120: __translateKernel()
(0.027701) DynamicTranslationCache.cpp:1141:   translating subkernel _subkernel_test_0
(0.027724) DynamicTranslationCache.cpp:1154:   Converting from PTX IR to LLVM IR.
(0.028275) DynamicTranslationCache.cpp:1171: translated PTX to LLVM
(0.028285) DynamicTranslationCache.cpp:1172: ; Code assembled by Ocelot LLVMKernel 2.1.1677


%LLVMContext = type { %Dimension, %Dimension, %Dimension, %Dimension, i8*, i8*, i8*, i8*, i8*, i8* };

%Dimension = type { i32, i32, i32 };
define default void @_Z_ocelotTranslated__subkernel_test_0( %LLVMContext* %__ctaContext ) nounwind align 1;
{
$BB_1_0002:
	%rt1 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8;
	%rt2 = load i8** %rt1;
	%rt0 = getelementptr i8* %rt2, i32 8;
	%rt3 = bitcast i8* %rt0 to i64*;
	%r0 = load i64* %rt3, align 8;
	%rt4 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 8;
	%rt5 = load i8** %rt4;
	%rt6 = bitcast i8* %rt5 to i64*;
	%r1 = load i64* %rt6, align 8;
	%rt7 = inttoptr i64 %r0 to i16*;
	%r2 = load i16* %rt7, align 2;
	%rt8 = add i64 %r0, 2;
	%rt9 = inttoptr i64 %rt8 to i16*;
	%r3 = load i16* %rt9, align 2;
	%r4 = add i16 %r2, %r3;
	%rt10 = inttoptr i64 %r1 to i16*;
	store i16 %r4, i16* %rt10, align 2;
	br label %$BB_1_0002_external_out_handler_to_;
	br label %$BB_1_0002_external_out_handler_to_;
$BB_1_0002_external_out_handler_to_:
	%r5 = bitcast i32 4 to i32;
	%rt11 = zext i32 %r5 to i64;
	%rt12 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt13 = load i8** %rt12;
	%rt14 = ptrtoint i8* %rt13 to i64;
	%rt15 = add i64 %rt11, %rt14;
	%rt16 = inttoptr i64 %rt15 to i32*;
	store i32 6, i32* %rt16, align 4;
	%r6 = bitcast i32 0 to i32;
	%rt17 = zext i32 %r6 to i64;
	%rt18 = getelementptr %LLVMContext* %__ctaContext, i32 0, i32 4;
	%rt19 = load i8** %rt18;
	%rt20 = ptrtoint i8* %rt19 to i64;
	%rt21 = add i64 %rt17, %rt20;
	%rt22 = inttoptr i64 %rt21 to i32*;
	store i32 0, i32* %rt22, align 4;
	br label %exit;
	ret void;
exit:
	ret void;

}

(0.028549) DynamicTranslationCache.cpp:1220:  _translateKernel('test') complete for 1 subkernels
(0.028558) DynamicTranslationCache.cpp:148:    registered new kernel
Pass/Fail : Fail


Name : TestPTXAssembly

Description: A unit test framework for PTX. Runs random inputs through unit 
             tests on all available devices until a timer expires.


Test Seed : 1328039762
Test time : 0.0281556

Status : Ran 'TestVectorElements-u32' for 10 iterations.
 Output parameter 0 (I16) computed value - 9004 does not match reference value - -23649
  On device - 0 - 'Ocelot Dynamic Multicore CPU'
Test 'TestAdd-u16' seed '1328039762' failed.



INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaMalloc
INFO     Test completed in 0.0839519500732 seconds
INFO      It produced the following output:
(0.000564) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
test_malloc(256, 128)
PASSED
test_mallocArray(256, 128)
checking results from last cudaMemcpyFromArray
PASSED
[1] mallocing pitch
[2] memcpying2d
[3] memcpying
[4] checking for errors
[5] mallocing
[6] memcpying
[7] memcpying
[8] final free
Pass/Fail : Pass

INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDataflowGraph
INFO     Test completed in 0.054447889328 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestDataflowGraph

Description: A test for the DataflowGraph class. Test Points: 1) 
             Generic: load PTX files, convert them into dataflow graphs, verify that 
             all live ranges spanning blocks are consistent. 2) SSA: convert to 
             ssa form, verify that no register is declared more than once. 3) 
             reverse SSA: convert to ssa then out of ssa, verify that all live 
             ranges spanning blocks are consistent.


Test Seed : 1328039762
Test time : 1.66893e-05

Status : Testing Generic Dataflow
 Test Passed
Testing SSA Dataflow
 Test Passed
Testing SSA then back Dataflow
 Test Passed



INFO     
Passing tests:
 (0.054s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDataflowGraph : Passed
 (0.119s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMKernels : Passed
 (0.045s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaGlobals : Passed
 (0.066s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLexer : Passed
 (0.063s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXToLLVMTranslator : Passed
 (0.084s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaMalloc : Passed
 (0.052s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestEmulator : Passed
 (0.060s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestParser : Passed
 (0.054s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDeviceSwitching : Passed
 (0.063s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestInstructions : Passed
 (0.060s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMInstructions : Passed
 (0.057s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCalVectorScale : Passed
 (0.064s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestKernels : Passed

Failing tests:
 (0.071s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaSequence : Did not complete.
 (0.058s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTexture2D : Did not complete.
 (0.060s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestIndirectFunctionCall : Did not complete.
 (0.062s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTextureArray : Did not complete.
 (0.072s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestExternalFunctions : Did not complete.
 (0.077s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXAssembly : Failed
 (0.055s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestFunctionCall : Did not complete.

