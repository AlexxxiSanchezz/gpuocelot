INFO     Reading in test file /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/regression/full.level
INFO      Found the following tests:
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLexer
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestParser
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestEmulator
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestInstructions
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestKernels
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDataflowGraph
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMInstructions
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXToLLVMTranslator
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMKernels
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaMalloc
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTexture2D
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTextureArray
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaGlobals
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDeviceSwitching
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaSequence
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCalVectorScale
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXAssembly
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestFunctionCall
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestIndirectFunctionCall
INFO       /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestExternalFunctions
INFO     ==== INDIVIDUAL TEST RESULTS ====

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDeviceSwitching 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMInstructions 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestFunctionCall 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTexture2D 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestFunctionCall
INFO     Test completed in 0.0511050224304 seconds
INFO      It produced the following output:
(0.000533) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
(0.002472) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(kernel)
(0.002481) KernelPartitioningPass.cpp:58:   partitioning blocks at barriers
(0.002488) KernelPartitioningPass.cpp:92:     encountered 0 barriers
(0.002594) KernelPartitioningPass.cpp:110:  Partitioning kernel kernel
/*
* Ocelot Version : 2.1.1658
*/
.entry kernel(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{

	.param  .b32 param0;
	.param  .b32 retval0;
	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .pred %p7;
	.reg .s64 %r8;
	.reg .s64 %r9;
	.reg .f32 %r10;
	.reg .f32 %r11;
	$BB_2_0002:		/**/ 
		ld.param.u64 %r0, [kernel_param_0]; 
		ld.param.u32 %r1, [kernel_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %ntid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		setp.lt.s32 %p7, %r6, %r1; 
		@%p7 bra $BB_2_0004; 
	$BB_2_0003:		/**/ 
		exit; 
	$BB_2_0004:		/*BB1_2*/ 
		mul.wide.s32 %r8, %r6, 4; 
		add.s64 %r9, %r2, %r8; 
		ld.global.f32 %r10, [%r9]; 
		st.param.f32 [param0], %r10; 
		call.uni (retval0), square, (param0); 
		ld.param.f32 %r11, [retval0]; 
		st.global.f32 [%r9], %r11; 
		exit; 
}
(0.002778) KernelPartitioningPass.cpp:253:    Spill region size is 88
(0.002789) KernelPartitioningPass.cpp:147:  KernelGraph::_partitionMinimumSize()
(0.002800) KernelPartitioningPass.cpp:314:  Subkernel::create(kernel)
(0.002808) KernelPartitioningPass.cpp:341:  Subkernel::_create(kernel)
(0.002821) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.002834) KernelPartitioningPass.cpp:440:   adding block $BB_2_0002
(0.002848) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_2_0002 -> $BB_2_0003
(0.002858) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_2_0002 -> $BB_2_0004
(0.002866) KernelPartitioningPass.cpp:492:   ENTRY EDGE
(0.002874) KernelPartitioningPass.cpp:502:   creating internal edges
(0.002880) KernelPartitioningPass.cpp:506:   looking in block mapping: entry -> $BB_2_0002
(0.002886) KernelPartitioningPass.cpp:518:    adding internal edge: entry -> $BB_2_0002
(0.002893) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.002900) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.002908) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.002916) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_kernel_0(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[88];

	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .pred %p7;
	$BB_2_0002:		/**/ 
		ld.param.u64 %r0, [kernel_param_0]; 
		ld.param.u32 %r1, [kernel_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %ntid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		setp.lt.s32 %p7, %r6, %r1; 
		@%p7 bra $BB_2_0004; 
	$BB_2_0002_external_out_handler_to_2_0003:
	$BB_2_0002_external_out_handler_to_2_0004:
}
(0.003027) KernelPartitioningPass.cpp:314:  Subkernel::create(kernel)
(0.003035) KernelPartitioningPass.cpp:341:  Subkernel::_create(kernel)
(0.003047) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.003055) KernelPartitioningPass.cpp:440:   adding block $BB_2_0003
(0.003063) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_2_0003 -> exit
(0.003072) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_2_0002 -> $BB_2_0003
(0.003079) KernelPartitioningPass.cpp:502:   creating internal edges
(0.003085) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.003092) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.003099) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.003105) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_kernel_1(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[88];

	$BB_2_0003_external_in_handler__from_2_0002:
	$BB_2_0003:		/**/ 
		exit; 
	$BB_2_0003_external_out_handler_to_:
}
(0.003176) KernelPartitioningPass.cpp:314:  Subkernel::create(kernel)
(0.003183) KernelPartitioningPass.cpp:341:  Subkernel::_create(kernel)
(0.003195) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.003205) KernelPartitioningPass.cpp:440:   adding block $BB_2_0004
(0.003215) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_2_0004 -> exit
(0.003223) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_2_0002 -> $BB_2_0004
(0.003231) KernelPartitioningPass.cpp:502:   creating internal edges
(0.003237) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.003244) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.003251) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.003258) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_kernel_2(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[88];

	.reg .s64 %r8;
	.reg .s32 %r6;
	.reg .s64 %r9;
	.reg .s64 %r2;
	.reg .f32 %r10;
	.reg .f32 %r11;
	$BB_2_0004_external_in_handler__from_2_0002:
	$BB_2_0004:		/*BB1_2*/ 
		mul.wide.s32 %r8, %r6, 4; 
		add.s64 %r9, %r2, %r8; 
		ld.global.f32 %r10, [%r9]; 
		st.param.f32 [param0], %r10; 
		call.uni (retval0), square, (param0); 
		ld.param.f32 %r11, [retval0]; 
		st.global.f32 [%r9], %r11; 
		exit; 
	$BB_2_0004_external_out_handler_to_:
}
(0.003350) KernelPartitioningPass.cpp:169:  Linking external edges
(0.003358) KernelPartitioningPass.cpp:196:    linking $BB_2_0002_external_out_handler_to_2_0003 to $BB_2_0003_external_in_handler__from_2_0002 (entry 65536)
(0.003365) KernelPartitioningPass.cpp:196:    linking $BB_2_0002_external_out_handler_to_2_0004 to $BB_2_0004_external_in_handler__from_2_0002 (entry 131072)
(0.003372) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_2_0003 -> exit
(0.003379) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_2_0004 -> exit
(0.003419) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.003435) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.003442) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.003450) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_2_0002 -> $BB_2_0002_external_out_handler_to_2_0003 (2 live values
(0.003465) KernelPartitioningPass.cpp:853:        alive-out: 2 [type: s64]
(0.003480) KernelPartitioningPass.cpp:853:        alive-out: 6 [type: s32]
(0.003491) KernelPartitioningPass.cpp:984:    creating exit in block $BB_2_0002_external_out_handler_to_2_0003
(0.003505) KernelPartitioningPass.cpp:809:    adding $BB_2_0002 to frontierExitBlocks
(0.003516) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_2_0002 -> $BB_2_0002_external_out_handler_to_2_0004 (2 live values
(0.003525) KernelPartitioningPass.cpp:853:        alive-out: 2 [type: s64]
(0.003536) KernelPartitioningPass.cpp:853:        alive-out: 6 [type: s32]
(0.003545) KernelPartitioningPass.cpp:984:    creating exit in block $BB_2_0002_external_out_handler_to_2_0004
(0.003559) KernelPartitioningPass.cpp:809:    adding $BB_2_0002 to frontierExitBlocks
(0.003566) KernelPartitioningPass.cpp:813:  Barrier exits
(0.003573) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.003584) KernelPartitioningPass.cpp:899:   block $BB_2_0002 (2 external edges) terminator: @%p7 bra $BB_2_0004
(0.003592) KernelPartitioningPass.cpp:907:   1 external edge, modifying branch target to point to handler
(0.003598) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.003619) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.003627) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_kernel_0(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[88];

	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .pred %p7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	.reg .u32 %r12;
	.reg .u32 %r13;
	$BB_2_0002:		/**/ 
		ld.param.u64 %r0, [kernel_param_0]; 
		ld.param.u32 %r1, [kernel_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %ntid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		setp.lt.s32 %p7, %r6, %r1; 
		@%p7 bra $BB_2_0002_external_out_handler_to_2_0004; 
	$BB_2_0002_external_out_handler_to_2_0003:		// 2 live-out values 
		mov.s32 %r8, _Zocelot_spill_area; 
		st.local.s64 [%r8 + 16], %r2; 
		st.local.s32 [%r8 + 48], %r6; 
		mov.s32 %r9, _Zocelot_resume_status; 
		st.local.u32 [%r9], 8; 
		mov.s32 %r10, _Zocelot_resume_point; 
		st.local.u32 [%r10], 65536; 
		exit; 
	$BB_2_0002_external_out_handler_to_2_0004:		// 2 live-out values 
		mov.s32 %r11, _Zocelot_spill_area; 
		st.local.s64 [%r11 + 16], %r2; 
		st.local.s32 [%r11 + 48], %r6; 
		mov.s32 %r12, _Zocelot_resume_status; 
		st.local.u32 [%r12], 8; 
		mov.s32 %r13, _Zocelot_resume_point; 
		st.local.u32 [%r13], 131072; 
		exit; 
}
(0.003823) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.003834) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.003841) KernelPartitioningPass.cpp:773:      IN-edge: $BB_2_0003_external_in_handler__from_2_0002 -> $BB_2_0003 (2 live values
(0.003852) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.003860) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_2_0003 -> $BB_2_0003_external_out_handler_to_ (0 live values
(0.003868) KernelPartitioningPass.cpp:984:    creating exit in block $BB_2_0003_external_out_handler_to_
(0.003881) KernelPartitioningPass.cpp:809:    adding $BB_2_0003 to frontierExitBlocks
(0.003889) KernelPartitioningPass.cpp:813:  Barrier exits
(0.003895) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.003902) KernelPartitioningPass.cpp:899:   block $BB_2_0003 (1 external edges) terminator: exit
(0.003910) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.003918) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.003924) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_kernel_1(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[88];

	.reg .u32 %r1;
	.reg .u32 %r2;
	$BB_2_0003_external_in_handler__from_2_0002:		// 2 live-in values 
		bra $BB_2_0003; 
	$BB_2_0003:		/**/ 
		bra $BB_2_0003_external_out_handler_to_; 
	$BB_2_0003_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r1, _Zocelot_resume_status; 
		st.local.u32 [%r1], 6; 
		mov.s32 %r2, _Zocelot_resume_point; 
		st.local.u32 [%r2], 0; 
		exit; 
}
(0.004016) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.004028) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.004035) KernelPartitioningPass.cpp:773:      IN-edge: $BB_2_0004_external_in_handler__from_2_0002 -> $BB_2_0004 (2 live values
(0.004044) KernelPartitioningPass.cpp:853:        alive-out: 2 [type: s64]
(0.004055) KernelPartitioningPass.cpp:853:        alive-out: 6 [type: s32]
(0.004066) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.004074) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_2_0004 -> $BB_2_0004_external_out_handler_to_ (0 live values
(0.004082) KernelPartitioningPass.cpp:984:    creating exit in block $BB_2_0004_external_out_handler_to_
(0.004096) KernelPartitioningPass.cpp:809:    addiTestFunctionCall: ocelot/executive/implementation/DynamicTranslationCache.cpp:886: void setupCallTargets(ir::PTXKernel&, const executive::DynamicTranslationCache&): Assertion `0 && "arbitrary function calls not yet supported"' failed.
ng $BB_2_0004 to frontierExitBlocks
(0.004112) KernelPartitioningPass.cpp:813:  Barrier exits
(0.004119) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.004127) KernelPartitioningPass.cpp:899:   block $BB_2_0004 (1 external edges) terminator: exit
(0.004135) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.004144) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.004151) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_kernel_2(.param  .u64 kernel_param_0,
		.param  .u32 kernel_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[88];

	.reg .s64 %r8;
	.reg .s32 %r6;
	.reg .s64 %r9;
	.reg .s64 %r2;
	.reg .f32 %r10;
	.reg .f32 %r11;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r12;
	$BB_2_0004_external_in_handler__from_2_0002:		// 2 live-in values 
		mov.s32 %r12, _Zocelot_spill_area; 
		ld.local.s64 %r2, [%r12 + 16]; 
		ld.local.s32 %r6, [%r12 + 48]; 
		bra $BB_2_0004; 
	$BB_2_0004:		/*BB1_2*/ 
		mul.wide.s32 %r8, %r6, 4; 
		add.s64 %r9, %r2, %r8; 
		ld.global.f32 %r10, [%r9]; 
		st.param.f32 [param0], %r10; 
		call.uni (retval0), square, (param0); 
		ld.param.f32 %r11, [retval0]; 
		st.global.f32 [%r9], %r11; 
		bra $BB_2_0004_external_out_handler_to_; 
	$BB_2_0004_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r13, _Zocelot_resume_status; 
		st.local.u32 [%r13], 6; 
		mov.s32 %r14, _Zocelot_resume_point; 
		st.local.u32 [%r14], 0; 
		exit; 
}
(0.004306) DynamicTranslationCache.cpp:161:  DynamicTranslationCache::loadModule(ocelot/cuda/test/functions/simpleFunc.cu)
(0.004327) DynamicTranslationCache.cpp:135:  DynamicTranslationCache::registerKernel(kernel)
(0.004342) DynamicTranslationCache.cpp:1121: __translateKernel()
(0.004351) DynamicTranslationCache.cpp:1142:   translating subkernel _subkernel_kernel_0
(0.004381) DynamicTranslationCache.cpp:1155:   Converting from PTX IR to LLVM IR.
(0.005620) DynamicTranslationCache.cpp:1172: translated PTX to LLVM
(0.006252) DynamicTranslationCache.cpp:1142:   translating subkernel _subkernel_kernel_1
(0.006271) DynamicTranslationCache.cpp:1155:   Converting from PTX IR to LLVM IR.
(0.006566) DynamicTranslationCache.cpp:1172: translated PTX to LLVM
(0.006775) DynamicTranslationCache.cpp:1142:   translating subkernel _subkernel_kernel_2

INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDeviceSwitching
INFO     Test completed in 0.0549919605255 seconds
INFO      It produced the following output:
(0.000762) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
Pass/Fail : Pass


Name : TestDeviceSwitching

Description: A unit test for the ability of the CUDA runtime to switch 
             between devices and use multiple threads Test Points: 1) In a single 
             threaded application, iterate across all devices launching the same 
             simple kernel each time 2) Test context migration support in 
             ocelot. Iterate across all devices, launching a simple kernel that 
             updates shared variable. Use the context switch mechanism to 
             migrate the shared data. 3) Test multi-threading support. Launch one 
             host thread to allocate memory, pass pointers to worker 
             threads, each of which should launch independent kernels in 
             parallel.


Test Seed : 1327430391
Test time : 0.000578403

Status : Test Point 1 Passed
Test Point 2 Passed
Test Point 3 Passed



INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMInstructions
INFO     Test completed in 0.0547950267792 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestLLVMInstructions

Description: A test for the assembly code generation and automatic 
             verfication of individual LLVM instructions. Test Points: 1) For each 
             instruction, generate several assembly strings using the 
             instruction's toString method, make sure that these pass the valid() 
             check, compare to references from the LLVM manual.


Test Seed : 1327430391
Test time : 0.00088954

Status :  Checked instruction "<result> = add i32 4, %var"
Add Instruction Passed
 Checked instruction "%ptr = alloca i32"
 Checked instruction "%ptr = alloca i32, i32 4"
 Checked instruction "%ptr = alloca i32, i32 4, align 1024"
 Checked instruction "%ptr = alloca i32, align 1024"
Alloca Instruction Passed
 Checked instruction "<result> = and i32 4, %var"
 Checked instruction "<result> = and i32 15, 40"
 Checked instruction "<result> = and i32 4, 8"
And Instruction Passed
 Checked instruction "<result> = ashr i32 4, 1"
 Checked instruction "<result> = ashr i8 -2, 1"
 Checked instruction "<result> = ashr < 2 x i32 > < i32 -2, i32 4 >, < i32 1, i32 3 >"
Ashr Instruction Passed
 Checked instruction "%X = bitcast i8 -1 to i8"
 Checked instruction "%Z = bitcast < 2 x i32 > %V to i64"
Bitcast Instruction Passed
 Checked instruction "br i1 %cond, label %IfEqual, label %IfUnequal"
Br Instruction Passed
 Checked instruction "%retval = call i32 @test(i32 %argc)"
 Checked instruction "call i32 (i8*, ...)* @printf(i8* %msg, i32 12, i8 42)"
 Checked instruction "%X = tail call i32 @foo()"
 Checked instruction "%Y = tail call fastcc i32 @foo()"
 Checked instruction "call void @foo(i8 97 signext)"
 Checked instruction "%r = call %struct.A @foo()"
 Checked instruction "call void @foo() noreturn"
 Checked instruction "%ZZ = call zeroext i32 @bar()"
Call Instruction Passed
 Checked instruction "%result = extractelement < 4 x i32 > %vec, i32 0"
Extractelement Instruction Passed
 Checked instruction "%result = extractvalue { i32, float } %agg, 0"
Extractvalue Instruction Passed
 Checked instruction "<result> = fadd float 0x4010000000000000, %var"
Fadd Instruction Passed
 Checked instruction "<result> = fcmp oeq float 0x4010000000000000, 0x4014000000000000"
 Checked instruction "<result> = fcmp one float 0x4010000000000000, 0x4014000000000000"
 Checked instruction "<result> = fcmp olt float 0x4010000000000000, 0x4014000000000000"
 Checked instruction "<result> = fcmp ueq float 0x3ff0000000000000, 0x4000000000000000"
Fcmp Instruction Passed
 Checked instruction "<result> = fdiv float 0x4010000000000000, %var"
Fdiv Instruction Passed
 Checked instruction "<result> = fmul float 0x4010000000000000, %var"
Fmul Instruction Passed
 Checked instruction "%X = fpext float 0x400921cac0000000 to double"
 Checked instruction "%Y = fpext float 0x3ff0000000000000 to float"
Fpext Instruction Passed
 Checked instruction "%X = fptosi double 0xc05ec00000000000 to i32"
Fptosi Instruction Passed
 Checked instruction "%X = fptoui double 0x405ec00000000000 to i32"
Fptoui Instruction Passed
 Checked instruction "%X = fptrunc double 0x405ec00000000000 to float"
Fptrunc Instruction Passed
 Checked instruction "free [ 4 x i8 ]* %array"
Free Instruction Passed
 Checked instruction "<result> = frem float 0x4010000000000000, %var"
Frem Instruction Passed
 Checked instruction "<result> = fsub float 0x0, %val"
Fsub Instruction Passed
 Checked instruction "%vptr = getelementptr { i32, < 2 x i8 > }* %svptr, i32 0, i32 1, i32 1"
 Checked instruction "%eptr = getelementptr [ 12 x i8 ]* %aptr, i32 0, i32 1"
Getelementptr Instruction Passed
 Checked instruction "<result> = icmp ne float* %X, %X"
Icmp Instruction Passed
 Checked instruction "%result = insertelement < 4 x i32 > %vec, i32 1, i32 0"
Insertelement Instruction Passed
 Checked instruction "%result = insertvalue { i32, float } %agg, i32 1, 0"
Insertvalue Instruction Passed
 Checked instruction "%Y = inttoptr i64 0 to i32*"
Inttoptr Instruction Passed
 Checked instruction "%retval = invoke i32 @Test(i32 15) to label %Continue unwind label %TestCleanup"
Invoke Instruction Passed
 Checked instruction "%val = load i32* %ptr"
Load Instruction Passed
 Checked instruction "<result> = lshr i8 -2, 1"
Lshr Instruction Passed
 Checked instruction "%array2 = malloc [ 12 x i8 ], i32 %size"
Malloc Instruction Passed
 Checked instruction "<result> = mul i32 4, %var"
Mul Instruction Passed
 Checked instruction "<result> = or i32 15, 40"
Or Instruction Passed
 Checked instruction "%indvar = phi i32 [ 0, %LoopHeader ], [ %nextindvar, %Loop ]"
Phi Instruction Passed
 Checked instruction "%Y = ptrtoint i32* %x to i64"
Prtoint Instruction Passed
 Checked instruction "ret void"
Ret Instruction Passed
 Checked instruction "<result> = sdiv i32 4, %var"
Sdiv Instruction Passed
 Checked instruction "%X = select i1 1, i8 17, i8 42"
Select Instruction Passed
 Checked instruction "%X = sext i8 -1 to i16"
Sext Instruction Passed
 Checked instruction "<result> = shl i32 1, 32"
Shl Instruction Passed
 Checked instruction "%result = shufflevector < 4 x i32 > %v1, < 4 x i32 > %v2, < 8 x i32 > < i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7 >"
ShuffleVector Instruction Passed
 Checked instruction "%X = sitofp i32 257 to float"
Sitofp Instruction Passed
 Checked instruction "<result> = srem i32 4, %var"
Srem Instruction Passed
 Checked instruction "store i32 3, i32* %ptr"
Store Instruction Passed
 Checked instruction "<result> = sub i32 4, %var"
Sub Instruction Passed
 Checked instruction "switch i32 %val, label %otherwise [ i32 0, label %onzero i32 1, label %onone i32 2, label %ontwo ]"
Switch Instruction Passed
 Checked instruction "%Y = trunc i32 123 to i1"
Trunc Instruction Passed
 Checked instruction "<result> = udiv i32 4, %var"
Udiv Instruction Passed
 Checked instruction "%Y = uitofp i8 -1 to double"
Uitofp Instruction Passed
 Checked instruction "unreachable"
Unreachable Instruction Passed
 Checked instruction "unwind"
Unwind Instruction Passed
 Checked instruction "<result> = urem i32 4, %var"
Urem Instruction Passed
 Checked instruction "%tmp = va_arg i8** %ap, i32"
VarArg Instruction Passed
 Checked instruction "<result> = xor i32 -1, %V"
Xor Instruction Passed
 Checked instruction "%X = zext i32 257 to i64"
Zext Instruction Passed



INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestInstructions 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaSequence 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTexture2D
INFO     Test completed in 0.0540578365326 seconds
INFO      It produced the following output:
(0.000430) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
failed to bind texture: cudaErrorInvalidValue

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXToLLVMTranslator -i ../tests/ptx 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLexer -i ../tests/ptx 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestInstructions
INFO     Test completed in 0.0525419712067 seconds
INFO      It produced the following output:
(0.003021) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
Pass/Fail : Pass


Name : TestInstructions

Description: 


Test Seed : 1327430391
Test time : 0.000606298

Status : Test output:
Accessors test passed.
pass: load and store instructions
Abs test passed.
pass: arithmetic instructions
pass: exotic arithmetic instructions
pass: floating-point instructions
pass: logical instructions
pass: comparison instructions
pass: predicated Add and Ld isntructions



INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestIndirectFunctionCall 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLexer
INFO     Test completed in 0.050950050354 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestLexer

Description: Tests for the PTX lexer. Test Point 1: Scan a PTX file and 
             write out a temp stream, scan the stream again and make sure that the 
             two sets of tokens match


Test Seed : 1327430391
Test time : 1.43051e-05

Status : 


INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTextureArray 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXToLLVMTranslator
INFO     Test completed in 0.0538740158081 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestPTXToLLVMTranslator

Description: This is a basic test that just tries to get through a 
             translation successfully of as many PTX programs as possible Test 
             Points: 1) Scan for all PTX files in a directory, try to 
             translate them.


Test Seed : 1327430391
Test time : 2.02656e-05

Status : 


INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestKernels 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaSequence
INFO     Test completed in 0.0889370441437 seconds
INFO      It produced the following output:
(0.000620) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
sequence() - A_gpu = 0x0fe3f00
(0.007687) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(sequence)
(0.007705) KernelPartitioningPass.cpp:58:   partitioning blocks at barriers
(0.007713) KernelPartitioningPass.cpp:92:     encountered 0 barriers
(0.007831) KernelPartitioningPass.cpp:110:  Partitioning kernel sequence
/*
* Ocelot Version : 2.1.1658
*/
.entry sequence(.param  .u64 sequence_param_0,
		.param  .u32 sequence_param_1)
{

	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .pred %p7;
	.reg .s32 %r8;
	.reg .s64 %r9;
	.reg .s64 %r10;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [sequence_param_0]; 
		ld.param.u32 %r1, [sequence_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ntid.x; 
		mov.u32 %r4, %ctaid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		setp.lt.s32 %p7, %r6, %r1; 
		@%p7 bra $BB_1_0004; 
	$BB_1_0003:		/**/ 
		exit; 
	$BB_1_0004:		/*BB0_2*/ 
		shl.b32 %r8, %r6, 1; 
		mul.wide.s32 %r9, %r6, 4; 
		add.s64 %r10, %r2, %r9; 
		st.global.u32 [%r10], %r8; 
		exit; 
}
(0.008008) KernelPartitioningPass.cpp:253:    Spill region size is 80
(0.008020) KernelPartitioningPass.cpp:147:  KernelGraph::_partitionMinimumSize()
(0.008032) KernelPartitioningPass.cpp:314:  Subkernel::create(sequence)
(0.008040) KernelPartitioningPass.cpp:341:  Subkernel::_create(sequence)
(0.008058) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.008071) KernelPartitioningPass.cpp:440:   adding block $BB_1_0002
(0.008091) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_1_0002 -> $BB_1_0003
(0.008102) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_1_0002 -> $BB_1_0004
(0.008109) KernelPartitioningPass.cpp:492:   ENTRY EDGE
(0.008118) KernelPartitioningPass.cpp:502:   creating internal edges
(0.008124) KernelPartitioningPass.cpp:506:   looking in block mapping: entry -> $BB_1_0002
(0.008131) KernelPartitioningPass.cpp:518:    adding internal edge: entry -> $BB_1_0002
(0.008139) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.008145) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.008154) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.008162) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_sequence_0(.param  .u64 sequence_param_0,
		.param  .u32 sequence_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[80];

	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .pred %p7;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [sequence_param_0]; 
		ld.param.u32 %r1, [sequence_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ntid.x; 
		mov.u32 %r4, %ctaid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		setp.lt.s32 %p7, %r6, %r1; 
		@%p7 bra $BB_1_0004; 
	$BB_1_0002_external_out_handler_to_1_0003:
	$BB_1_0002_external_out_handler_to_1_0004:
}
(0.008276) KernelPartitioningPass.cpp:314:  Subkernel::create(sequence)
(0.008285) KernelPartitioningPass.cpp:341:  Subkernel::_create(sequence)
(0.008297) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.008304) KernelPartitioningPass.cpp:440:   adding block $BB_1_0003
(0.008313) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_1_0003 -> exit
(0.008322) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_1_0002 -> $BB_1_0003
(0.008330) KernelPartitioningPass.cpp:502:   creating internal edges
(0.008336) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.008343) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.008349) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.008356) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_sequence_1(.param  .u64 sequence_param_0,
		.param  .u32 sequence_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[80];

	$BB_1_0003_external_in_handler__from_1_0002:
	$BB_1_0003:		/**/ 
		exit; 
	$BB_1_0003_external_out_handler_to_:
}
(0.008430) KernelPartitioningPass.cpp:314:  Subkernel::create(sequence)
(0.008437) KernelPartitioningPass.cpp:341:  Subkernel::_create(sequence)
(0.008450) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.008459) KernelPartitioningPass.cpp:440:   adding block $BB_1_0004
(0.008469) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_1_0004 -> exit
(0.008477) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_1_0002 -> $BB_1_0004
(0.008485) KernelPartitioningPass.cpp:502:   creating internal edges
(0.008491) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.008498) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.008505) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.008512) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_sequence_2(.param  .u64 sequence_param_0,
		.param  .u32 sequence_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[80];

	.reg .s32 %r8;
	.reg .s32 %r6;
	.reg .s64 %r9;
	.reg .s64 %r10;
	.reg .s64 %r2;
	$BB_1_0004_external_in_handler__from_1_0002:
	$BB_1_0004:		/*BB0_2*/ 
		shl.b32 %r8, %r6, 1; 
		mul.wide.s32 %r9, %r6, 4; 
		add.s64 %r10, %r2, %r9; 
		st.global.u32 [%r10], %r8; 
		exit; 
	$BB_1_0004_external_out_handler_to_:
}
(0.008587) KernelPartitioningPass.cpp:169:  Linking external edges
(0.008595) KernelPartitioningPass.cpp:196:    linking $BB_1_0002_external_out_handler_to_1_0003 to $BB_1_0003_external_in_handler__from_1_0002 (entry 65536)
(0.008602) KernelPartitioningPass.cpp:196:    linking $BB_1_0002_external_out_handler_to_1_0004 to $BB_1_0004_external_in_handler__from_1_0002 (entry 131072)
(0.008609) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_1_0003 -> exit
(0.008616) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_1_0004 -> exit
(0.008659) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.009580) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.009590) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.009600) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_1_0003 (2 live values
(0.009618) KernelPartitioningPass.cpp:853:        alive-out: 2 [type: s64]
(0.009635) KernelPartitioningPass.cpp:853:        alive-out: 6 [type: s32]
(0.009647) KernelPartitioningPass.cpp:984:    creating exit in block $BB_1_0002_external_out_handler_to_1_0003
(0.009662) KernelPartitioningPass.cpp:809:    adding $BB_1_0002 to frontierExitBlocks
(0.009674) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_1_0004 (2 live values
(0.009683) KernelPartitioningPass.cpp:853:        alive-out: 2 [type: s64]
(0.009695) KernelPartitioningPass.cpp:853:        alive-out: 6 [type: s32]
(0.009705) KernelPartitioningPass.cpp:984:    creating exit in block $BB_1_0002_external_out_handler_to_1_0004
(0.009719) KernelPartitioningPass.cpp:809:    adding $BB_1_0002 to frontierExitBlocks
(0.009727) KernelPartitioningPass.cpp:813:  Barrier exits
(0.009735) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.009747) KernelPartitioningPass.cpp:899:   block $BB_1_0002 (2 external edges) terminator: @%p7 bra $BB_1_0004
(0.009755) KernelPartitioningPass.cpp:907:   1 external edge, modifying branch target to point to handler
(0.009762) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.009775) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.009782) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_sequence_0(.param  .u64 sequence_param_0,
		.param  .u32 sequence_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[80];

	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .pred %p7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	.reg .u32 %r12;
	.reg .u32 %r13;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [sequence_param_0]; 
		ld.param.u32 %r1, [sequence_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ntid.x; 
		mov.u32 %r4, %ctaid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		setp.lt.s32 %p7, %r6, %r1; 
		@%p7 bra $BB_1_0002_external_out_handler_to_1_0004; 
	$BB_1_0002_external_out_handler_to_1_0003:		// 2 live-out values 
		mov.s32 %r8, _Zocelot_spill_area; 
		st.local.s64 [%r8 + 16], %r2; 
		st.local.s32 [%r8 + 48], %r6; 
		mov.s32 %r9, _Zocelot_resume_status; 
		st.local.u32 [%r9], 8; 
		mov.s32 %r10, _Zocelot_resume_point; 
		st.local.u32 [%r10], 65536; 
		exit; 
	$BB_1_0002_external_out_handler_to_1_0004:		// 2 live-out values 
		mov.s32 %r11, _Zocelot_spill_area; 
		st.local.s64 [%r11 + 16], %r2; 
		st.local.s32 [%r11 + 48], %r6; 
		mov.s32 %r12, _Zocelot_resume_status; 
		st.local.u32 [%r12], 8; 
		mov.s32 %r13, _Zocelot_resume_point; 
		st.local.u32 [%r13], 131072; 
		exit; 
}
(0.010003) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.010014) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.010021) KernelPartitioningPass.cpp:773:      IN-edge: $BB_1_0003_external_in_handler__from_1_0002 -> $BB_1_0003 (2 live values
(0.010034) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.010042) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_1_0003 -> $BB_1_0003_external_out_handler_to_ (0 live values
(0.010050) KernelPartitioningPass.cpp:984:    creating exit in block $BB_1_0003_external_out_handler_to_
(0.010064) KernelPartitioningPass.cpp:809:    adding $BB_1_0003 to frontierExitBlocks
(0.010072) KernelPartitioningPass.cpp:813:  Barrier exits
(0.010078) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.010086) KernelPartitioningPass.cpp:899:   block $BB_1_0003 (1 external edges) terminator: exit
(0.010093) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.010102) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.010108) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_sequence_1(.param  .u64 sequence_param_0,
		.param  .u32 sequence_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[80];

	.reg .u32 %r1;
	.reg .u32 %r2;
	$BB_1_0003_external_in_handler__from_1_0002:		// 2 live-in values 
		bra $BB_1_0003; 
	$BB_1_0003:		/**/ 
		bra $BB_1_0003_external_out_handler_to_; 
	$BB_1_0003_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r1, _Zocelot_resume_status; 
		st.local.u32 [%r1], 6; 
		mov.s32 %r2, _Zocelot_resume_point; 
		st.local.u32 [%r2], 0; 
		exit; 
}
(0.010205) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.010217) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.010225) KernelPartitioningPass.cpp:773:      IN-edge: $BB_1_0004_external_in_handler__from_1_0002 -> $BB_1_0004 (2 live values
(0.010234) KernelPartitioningPass.cpp:853:        alive-out: 2 [type: s64]
(0.010246) KernelPartitioningPass.cpp:853:        alive-out: 6 [type: s32]
(0.010257) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.010265) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_1_0004 -> $BB_1_0004_external_out_handler_to_ (0 live values
(0.010273) KernelPartitioningPass.cpp:984:    creating exit in block $BB_1_0004_external_out_handler_to_
(0.010287) KernelPartitioningPass.cpp:809:    adding $BB_1_0004 to frontierExitBlocks
(0.010295) KernelPartitioningPass.cpp:813:  Barrier exits
(0.010301) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.010309) KernelPartitioningPass.cpp:899:   bStack dump:
0.	Running pass 'Ocelot LLVM Uniform Vectorization' on function '@_subkernel_sequence_0_opt0_ws1'

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCalVectorScale 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTextureArray
INFO     Test completed in 0.0530729293823 seconds
INFO      It produced the following output:
(0.000647) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
cudaBindTextureToArray() - failed to bind texture: cudaErrorInvalidValue

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMKernels 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestIndirectFunctionCall
INFO     Test completed in 0.0547218322754 seconds
INFO      It produced the following output:
(0.000587) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
(0.003360) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(kernelEntry)
(0.003371) KernelPartitioningPass.cpp:58:   partitioning blocks at barriers
(0.003378) KernelPartitioningPass.cpp:92:     encountered 0 barriers
(0.003539) KernelPartitioningPass.cpp:110:  Partitioning kernel kernelEntry
/*
* Ocelot Version : 2.1.1658
*/
.entry kernelEntry(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{

	.param  .b32 param0;
	.param  .b32 retval0;
	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .s32 %r7;
	.reg .s32 %r8;
	.reg .pred %p9;
	.reg .pred %p10;
	.reg .pred %p11;
	.reg .s64 %r12;
	.reg .s32 %r13;
	.reg .s64 %r14;
	.reg .s64 %r15;
	
	prototype_0: .callprototype (.param .b32 _) prototype_0 (.param .b32 _);
	
	$BB_5_0002:		/**/ 
		ld.param.u64 %r0, [kernelEntry_param_0]; 
		ld.param.u32 %r1, [kernelEntry_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %ntid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		add.s32 %r7, %r6, %r1; 
		and.b32 %r8, %r7, 3; 
		setp.eq.s32 %p9, %r8, 0; 
		@%p9 bra $BB_5_0008; 
	$BB_5_0003:		/**/ 
		setp.eq.s32 %p10, %r8, 1; 
		@%p10 bra $BB_5_0007; 
	$BB_5_0004:		/**/ 
		setp.eq.s32 %p11, %r8, 2; 
		@%p11 bra $BB_5_0006; 
	$BB_5_0005:		/**/ 
		mov.u64 %r12, funcPentuple; 
		bra.uni $BB_5_0009; 
	$BB_5_0008:		/*BB4_6*/ 
		mov.u64 %r12, funcDouble; 
	$BB_5_0009:		/*BB4_7*/ 
		st.param.b32 [param0], %r6; 
		call (retval0), %r12, (param0), prototype_0; 
		ld.param.b32 %r13, [retval0]; 
		mul.wide.s32 %r14, %r6, 4; 
		add.s64 %r15, %r2, %r14; 
		st.global.u32 [%r15], %r13; 
		exit; 
	$BB_5_0006:		/*BB4_4*/ 
		mov.u64 %r12, funcQuadruple; 
		bra.uni $BB_5_0009; 
	$BB_5_0007:		/*BB4_5*/ 
		mov.u64 %r12, funcTriple; 
		bra.uni $BB_5_0009; 
}
(0.003793) KernelPartitioningPass.cpp:253:    Spill region size is 120
(0.003805) KernelPartitioningPass.cpp:147:  KernelGraph::_partitionMinimumSize()
(0.003816) KernelPartitioningPass.cpp:314:  Subkernel::create(kernelEntry)
(0.003824) KernelPartitioningPass.cpp:341:  Subkernel::_create(kernelEntry)
(0.003838) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.003851) KernelPartitioningPass.cpp:440:   adding block $BB_5_0002
(0.003866) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_5_0002 -> $BB_5_0003
(0.003877) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_5_0002 -> $BB_5_0008
(0.003884) KernelPartitioningPass.cpp:492:   ENTRY EDGE
(0.003892) KernelPartitioningPass.cpp:502:   creating internal edges
(0.003898) KernelPartitioningPass.cpp:506:   looking in block mapping: entry -> $BB_5_0002
(0.003904) KernelPartitioningPass.cpp:518:    adding internal edge: entry -> $BB_5_0002
(0.003911) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.003917) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.003926) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.003933) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_kernelEntry_0(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .s32 %r7;
	.reg .s32 %r8;
	.reg .pred %p9;
	$BB_5_0002:		/**/ 
		ld.param.u64 %r0, [kernelEntry_param_0]; 
		ld.param.u32 %r1, [kernelEntry_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %ntid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		add.s32 %r7, %r6, %r1; 
		and.b32 %r8, %r7, 3; 
		setp.eq.s32 %p9, %r8, 0; 
		@%p9 bra $BB_5_0008; 
	$BB_5_0002_external_out_handler_to_5_0003:
	$BB_5_0002_external_out_handler_to_5_0008:
}
(0.004060) KernelPartitioningPass.cpp:314:  Subkernel::create(kernelEntry)
(0.004100) KernelPartitioningPass.cpp:341:  Subkernel::_create(kernelEntry)
(0.004113) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.004121) KernelPartitioningPass.cpp:440:   adding block $BB_5_0003
(0.004130) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_5_0003 -> $BB_5_0004
(0.004139) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_5_0003 -> $BB_5_0007
(0.004148) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_5_0002 -> $BB_5_0003
(0.004155) KernelPartitioningPass.cpp:502:   creating internal edges
(0.004161) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.004168) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.004176) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.004182) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_kernelEntry_1(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .pred %p10;
	.reg .s32 %r8;
	$BB_5_0003_external_in_handler__from_5_0002:
	$BB_5_0003:		/**/ 
		setp.eq.s32 %p10, %r8, 1; 
		@%p10 bra $BB_5_0007; 
	$BB_5_0003_external_out_handler_to_5_0004:
	$BB_5_0003_external_out_handler_to_5_0007:
}
(0.004240) KernelPartitioningPass.cpp:314:  Subkernel::create(kernelEntry)
(0.004247) KernelPartitioningPass.cpp:341:  Subkernel::_create(kernelEntry)
(0.004259) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.004267) KernelPartitioningPass.cpp:440:   adding block $BB_5_0004
(0.004277) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_5_0004 -> $BB_5_0005
(0.004286) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_5_0004 -> $BB_5_0006
(0.004294) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_5_0003 -> $BB_5_0004
(0.004302) KernelPartitioningPass.cpp:502:   creating internal edges
(0.004308) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.004315) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.004323) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.004329) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_kernelEntry_2(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .pred %p11;
	.reg .s32 %r8;
	$BB_5_0004_external_in_handler__from_5_0003:
	$BB_5_0004:		/**/ 
		setp.eq.s32 %p11, %r8, 2; 
		@%p11 bra $BB_5_0006; 
	$BB_5_0004_external_out_handler_to_5_0005:
	$BB_5_0004_external_out_handler_to_5_0006:
}
(0.004386) KernelPartitioningPass.cpp:314:  Subkernel::create(kernelEntry)
(0.004394) KernelPartitioningPass.cpp:341:  Subkernel::_create(kernelEntry)
(0.004405) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.004413) KernelPartitioningPass.cpp:440:   adding block $BB_5_0005
(0.004422) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_5_0005 -> $BB_5_0009
(0.004431) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_5_0004 -> $BB_5_0005
(0.004438) KernelPartitioningPass.cpp:502:   creating internal edges
(0.004444) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.004452) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.004458) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.004465) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_kernelEntry_3(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	$BB_5_0005_external_in_handler__from_5_0004:
	$BB_5_0005:		/**/ 
		mov.u64 %r12, funcPentuple; 
		bra.uni $BB_5_0009; 
	$BB_5_0005_external_out_handler_to_5_0009:
}
(0.004523) KernelPartitioningPass.cpp:314:  Subkernel::create(kernelEntry)
(0.004530) KernelPartitioningPass.cpp:341:  Subkernel::_create(kernelEntry)
(0.004542) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.004550) KernelPartitioningPass.cpp:440:   adding block $BB_5_0006
(0.004559) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_5_0006 -> $BB_5_0009
(0.004568) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_5_0004 -> $BB_5_0006
(0.004575) KernelPartitioningPass.cpp:502:   creating internal edges
(0.004581) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.004589) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.004596) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.004603) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_kernelEntry_4(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	$BB_5_0006_external_in_handler__from_5_0004:
	$BB_5_0006:		/*BB4_4*/ 
		mov.u64 %r12, funcQuadruple; 
		bra.uni $BB_5_0009; 
	$BB_5_0006_external_out_handler_to_5_0009:
}
(0.004652) KernelPartitioningPass.cpp:314:  Subkernel::create(kernelEntry)
(0.004660) KernelPartitioningPass.cpp:341:  Subkernel::_create(kernelEntry)
(0.004672) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.004679) KernelPartitioningPass.cpp:440:   adding block $BB_5_0007
(0.004689) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_5_0007 -> $BB_5_0009
(0.004697) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_5_0003 -> $BB_5_0007
(0.004704) KernelPartitioningPass.cpp:502:   creating internal edges
(0.004711) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.004718) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.004725) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.004732) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_kernelEntry_5(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	$BB_5_0007_external_in_handler__from_5_0003:
	$BB_5_0007:		/*BB4_5*/ 
		mov.u64 %r12, funcTriple; 
		bra.uni $BB_5_0009; 
	$BB_5_0007_external_out_handler_to_5_0009:
}
(0.004780) KernelPartitioningPass.cpp:314:  Subkernel::create(kernelEntry)
(0.004788) KernelPartitioningPass.cpp:341:  Subkernel::_create(kernelEntry)
(0.004800) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.004807) KernelPartitioningPass.cpp:440:   adding block $BB_5_0008
(0.004817) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_5_0008 -> $BB_5_0009
(0.004825) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_5_0002 -> $BB_5_0008
(0.004832) KernelPartitioningPass.cpp:502:   creating internal edges
(0.004838) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.004846) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.004853) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.004860) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_kernelEntry_6(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	$BB_5_0008_external_in_handler__from_5_0002:
	$BB_5_0008:		/*BB4_6*/ 
		mov.u64 %r12, funcDouble; 
	$BB_5_0008_external_out_handler_to_5_0009:
}
(0.004907) KernelPartitioningPass.cpp:314:  Subkernel::create(kernelEntry)
(0.004915) KernelPartitioningPass.cpp:341:  Subkernel::_create(kernelEntry)
(0.004935) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.004945) KernelPartitioningPass.cpp:440:   adding block $BB_5_0009
(0.004955) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_5_0009 -> exit
(0.004964) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_5_0008 -> $BB_5_0009
(0.004973) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_5_0005 -> $BB_5_0009
(0.004981) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_5_0006 -> $BB_5_0009
(0.004989) KernelPartitioningPass.cpp:489:    adding EXTERNAL IN-Edge $BB_5_0007 -> $BB_5_0009
(0.004997) KernelPartitioningPass.cpp:502:   creating internal edges
(0.005003) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.005011) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.005018) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.005025) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_kernelEntry_7(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s32 %r6;
	.reg .s64 %r12;
	.reg .s32 %r13;
	.reg .s64 %r14;
	.reg .s64 %r15;
	.reg .s64 %r2;
	
	prototype_0: .callprototype (.param .b32 _) prototype_0 (.param .b32 _);
	
	$BB_5_0009_external_in_handler__from_5_0007:
	$BB_5_0009:		/*BB4_7*/ 
		st.param.b32 [param0], %r6; 
		call (retval0), %r12, (param0), prototype_0; 
		ld.param.b32 %r13, [retval0]; 
		mul.wide.s32 %r14, %r6, 4; 
		add.s64 %r15, %r2, %r14; 
		st.global.u32 [%r15], %r13; 
		exit; 
	$BB_5_0009_external_out_handler_to_:
	$BB_5_0009_external_in_handler__from_5_0006:
	$BB_5_0009_external_in_handler__from_5_0005:
	$BB_5_0009_external_in_handler__from_5_0008:
}
(0.005122) KernelPartitioningPass.cpp:169:  Linking external edges
(0.005130) KernelPartitioningPass.cpp:196:    linking $BB_5_0002_external_out_handler_to_5_0003 to $BB_5_0003_external_in_handler__from_5_0002 (entry 65536)
(0.005137) KernelPartitioningPass.cpp:196:    linking $BB_5_0002_external_out_handler_to_5_0008 to $BB_5_0008_external_in_handler__from_5_0002 (entry 393216)
(0.005144) KernelPartitioningPass.cpp:196:    linking $BB_5_0003_external_out_handler_to_5_0004 to $BB_5_0004_external_in_handler__from_5_0003 (entry 131072)
(0.005151) KernelPartitioningPass.cpp:196:    linking $BB_5_0003_external_out_handler_to_5_0007 to $BB_5_0007_external_in_handler__from_5_0003 (entry 327680)
(0.005158) KernelPartitioningPass.cpp:196:    linking $BB_5_0004_external_out_handler_to_5_0005 to $BB_5_0005_external_in_handler__from_5_0004 (entry 196608)
(0.005165) KernelPartitioningPass.cpp:196:    linking $BB_5_0004_external_out_handler_to_5_0006 to $BB_5_0006_external_in_handler__from_5_0004 (entry 262144)
(0.005172) KernelPartitioningPass.cpp:196:    linking $BB_5_0005_external_out_handler_to_5_0009 to $BB_5_0009_external_in_handler__from_5_0005 (entry 458753)
(0.005178) KernelPartitioningPass.cpp:196:    linking $BB_5_0006_external_out_handler_to_5_0009 to $BB_5_0009_external_in_handler__from_5_0006 (entry 458754)
(0.005185) KernelPartitioningPass.cpp:196:    linking $BB_5_0007_external_out_handler_to_5_0009 to $BB_5_0009_external_in_handler__from_5_0007 (entry 458755)
(0.005192) KernelPartitioningPass.cpp:196:    linking $BB_5_0008_external_out_handler_to_5_0009 to $BB_5_0009_external_in_handler__from_5_0008 (entry 458752)
(0.005199) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_5_0009 -> exit
(0.005244) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.005260) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.005268) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.005277) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_5_0002 -> $BB_5_0002_external_out_handler_to_5_0003 (3 live values
(0.005293) KernelPartitioningPass.cpp:853:        alive-out: 2 [type: s64]
(0.005308) KernelPartitioningPass.cpp:853:        alive-out: 6 [type: s32]
(0.005328) KernelPartitioningPass.cpp:853:        alive-out: 8 [type: s32]
(0.005339) KernelPartitioningPass.cpp:984:    creating exit in block $BB_5_0002_external_out_handler_to_5_0003
(0.005353) KernelPartitioningPass.cpp:809:    adding $BB_5_0002 to frontierExitBlocks
(0.005366) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_5_0002 -> $BB_5_0002_external_out_handler_to_5_0008 (3 live values
(0.005374) KernelPartitioningPass.cpp:853:        alive-out: 2 [type: s64]
(0.005386) KernelPartitioningPass.cpp:853:        alive-out: 6 [type: s32]
(0.005396) KernelPartitioningPass.cpp:853:        alive-out: 8 [type: s32]
(0.005406) KernelPartitioningPass.cpp:984:    creating exit in block $BB_5_0002_external_out_handler_to_5_0008
(0.005424) KernelPartitioningPass.cpp:809:    adding $BB_5_0002 to frontierExitBlocks
(0.005432) KernelPartitioningPass.cpp:813:  Barrier exits
(0.005440) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.005452) KernelPartitioningPass.cpp:899:   block $BB_5_0002 (2 external edges) terminator: @%p9 bra $BB_5_0008
(0.005460) KernelPartitioningPass.cpp:907:   1 external edge, modifying branch target to point to handler
(0.005467) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.005479) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.005486) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_kernelEntry_0(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r0;
	.reg .s32 %r1;
	.reg .s64 %r2;
	.reg .s32 %r3;
	.reg .s32 %r4;
	.reg .s32 %r5;
	.reg .s32 %r6;
	.reg .s32 %r7;
	.reg .s32 %r8;
	.reg .pred %p9;
	.reg .u32 %r10;
	.reg .u32 %r11;
	.reg .u32 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r15;
	$BB_5_0002:		/**/ 
		ld.param.u64 %r0, [kernelEntry_param_0]; 
		ld.param.u32 %r1, [kernelEntry_param_1]; 
		cvta.to.global.u64 %r2, %r0; 
		mov.u32 %r3, %ctaid.x; 
		mov.u32 %r4, %ntid.x; 
		mov.u32 %r5, %tid.x; 
		mad.lo.s32 %r6, %r3, %r4, %r5; 
		add.s32 %r7, %r6, %r1; 
		and.b32 %r8, %r7, 3; 
		setp.eq.s32 %p9, %r8, 0; 
		@%p9 bra $BB_5_0002_external_out_handler_to_5_0008; 
	$BB_5_0002_external_out_handler_to_5_0003:		// 3 live-out values 
		mov.s32 %r10, _Zocelot_spill_area; 
		st.local.s64 [%r10 + 16], %r2; 
		st.local.s32 [%r10 + 48], %r6; 
		st.local.s32 [%r10 + 64], %r8; 
		mov.s32 %r11, _Zocelot_resume_status; 
		st.local.u32 [%r11], 8; 
		mov.s32 %r12, _Zocelot_resume_point; 
		st.local.u32 [%r12], 65536; 
		exit; 
	$BB_5_0002_external_out_handler_to_5_0008:		// 3 live-out values 
		mov.s32 %r13, _Zocelot_spill_area; 
		st.local.s64 [%r13 + 16], %r2; 
		st.local.s32 [%r13 + 48], %r6; 
		st.local.s32 [%r13 + 64], %r8; 
		mov.s32 %r14, _Zocelot_resume_status; 
		st.local.u32 [%r14], 8; 
		mov.s32 %r15, _Zocelot_resume_point; 
		st.local.u32 [%r15], 393216; 
		exit; 
}
(0.005729) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.005742) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.005749) KernelPartitioningPass.cpp:773:      IN-edge: $BB_5_0003_external_in_handler__from_5_0002 -> $BB_5_0003 (3 live values
(0.005759) KernelPartitioningPass.cpp:853:        alive-out: 8 [type: s32]
(0.005771) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.005779) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_5_0003 -> $BB_5_0003_external_out_handler_to_5_0004 (3 live values
(0.005787) KernelPartitioningPass.cpp:853:        alive-out: 8 [type: s32]
(0.005797) KernelPartitioningPass.cpp:984:    creating exit in block $BB_5_0003_external_out_handler_to_5_0004
(0.005811) KernelPartitioningPass.cpp:809:    adding $BB_5_0003 to frontierExitBlocks
(0.005820) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_5_0003 -> $BB_5_0003_external_out_handler_to_5_0007 (3 live values
(0.005828) KernelPartitioningPass.cpp:853:        alive-out: 8 [type: s32]
(0.005838) KernelPartitioningPass.cpp:984:    creating exit in block $BB_5_0003_external_out_handler_to_5_0007
(0.005864) KernelPartitioningPass.cpp:809:    adding $BB_5_0003 to frontierExitBlocks
(0.005872) KernelPartitioningPass.cpp:813:  Barrier exits
(0.005879) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.005890) KernelPartitioningPass.cpp:899:   block $BB_5_0003 (2 external edges) terminator: @%p10 bra $BB_5_0007
(0.005897) KernelPartitioningPass.cpp:907:   1 external edge, modifying branch target to point to handler
(0.005904) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.005913) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.005919) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_kernelEntry_1(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .pred %p10;
	.reg .s32 %r8;
	.reg .u32 %r11;
	.reg .u32 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	$BB_5_0003_external_in_handler__from_5_0002:		// 3 live-in values 
		ld.local.s32 %r8, [%r0 + 64]; 
		bra $BB_5_0003; 
	$BB_5_0003:		/**/ 
		setp.eq.s32 %p10, %r8, 1; 
		@%p10 bra $BB_5_0003_external_out_handler_to_5_0007; 
	$BB_5_0003_external_out_handler_to_5_0004:		// 3 live-out values 
		st.local.s32 [%r0 + 64], %r8; 
		mov.s32 %r11, _Zocelot_resume_status; 
		st.local.u32 [%r11], 8; 
		mov.s32 %r12, _Zocelot_resume_point; 
		st.local.u32 [%r12], 131072; 
		exit; 
	$BB_5_0003_external_out_handler_to_5_0007:		// 3 live-out values 
		st.local.s32 [%r0 + 64], %r8; 
		mov.s32 %r13, _Zocelot_resume_status; 
		st.local.u32 [%r13], 8; 
		mov.s32 %r14, _Zocelot_resume_point; 
		st.local.u32 [%r14], 327680; 
		exit; 
}
(0.006070) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.006083) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.006090) KernelPartitioningPass.cpp:773:      IN-edge: $BB_5_0004_external_in_handler__from_5_0003 -> $BB_5_0004 (3 live values
(0.006099) KernelPartitioningPass.cpp:853:        alive-out: 8 [type: s32]
(0.006111) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.006119) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_5_0004 -> $BB_5_0004_external_out_handler_to_5_0005 (2 live values
(0.006127) KernelPartitioningPass.cpp:984:    creating exit in block $BB_5_0004_external_out_handler_to_5_0005
(0.006145) KernelPartitioningPass.cpp:809:    adding $BB_5_0004 to frontierExitBlocks
(0.006153) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_5_0004 -> $BB_5_0004_external_out_handler_to_5_0006 (2 live values
(0.006162) KernelPartitioningPass.cpp:984:    creating exit in block $BB_5_0004_external_out_handler_to_5_0006
(0.006175) KernelPartitioningPass.cpp:809:    adding $BB_5_0004 to frontierExitBlocks
(0.006182) KernelPartitioningPass.cpp:813:  Barrier exits
(0.006189) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.006203) KernelPartitioningPass.cpp:899:   block $BB_5_0004 (2 external edges) terminator: @%p11 bra $BB_5_0006
(0.006211) KernelPartitioningPass.cpp:907:   1 external edge, modifying branch target to point to handler
(0.006217) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.006227) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.006233) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_kernelEntry_2(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .pred %p11;
	.reg .s32 %r8;
	.reg .u32 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r15;
	$BB_5_0004_external_in_handler__from_5_0003:		// 3 live-in values 
		ld.local.s32 %r8, [%r0 + 64]; 
		bra $BB_5_0004; 
	$BB_5_0004:		/**/ 
		setp.eq.s32 %p11, %r8, 2; 
		@%p11 bra $BB_5_0004_external_out_handler_to_5_0006; 
	$BB_5_0004_external_out_handler_to_5_0005:		// 2 live-out values 
		mov.s32 %r12, _Zocelot_resume_status; 
		st.local.u32 [%r12], 8; 
		mov.s32 %r13, _Zocelot_resume_point; 
		st.local.u32 [%r13], 196608; 
		exit; 
	$BB_5_0004_external_out_handler_to_5_0006:		// 2 live-out values 
		mov.s32 %r14, _Zocelot_resume_status; 
		st.local.u32 [%r14], 8; 
		mov.s32 %r15, _Zocelot_resume_point; 
		st.local.u32 [%r15], 262144; 
		exit; 
}
(0.006374) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.006387) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.006394) KernelPartitioningPass.cpp:773:      IN-edge: $BB_5_0005_external_in_handler__from_5_0004 -> $BB_5_0005 (2 live values
(0.006405) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.006413) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_5_0005 -> $BB_5_0005_external_out_handler_to_5_0009 (3 live values
(0.006422) KernelPartitioningPass.cpp:853:        alive-out: 12 [type: s64]
(0.006433) KernelPartitioningPass.cpp:984:    creating exit in block $BB_5_0005_external_out_handler_to_5_0009
(0.006447) KernelPartitioningPass.cpp:809:    adding $BB_5_0005 to frontierExitBlocks
(0.006455) KernelPartitioningPass.cpp:813:  Barrier exits
(0.006461) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.006470) KernelPartitioningPass.cpp:899:   block $BB_5_0005 (1 external edges) terminator: bra.uni $BB_5_0009
(0.006477) KernelPartitioningPass.cpp:907:   1 external edge, modifying branch target to point to handler
(0.006484) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.006493) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.006500) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_kernelEntry_3(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r15;
	$BB_5_0005_external_in_handler__from_5_0004:		// 2 live-in values 
		bra $BB_5_0005; 
	$BB_5_0005:		/**/ 
		mov.u64 %r12, funcPentuple; 
		bra.uni $BB_5_0005_external_out_handler_to_5_0009; 
	$BB_5_0005_external_out_handler_to_5_0009:		// 3 live-out values 
		mov.s32 %r13, _Zocelot_spill_area; 
		st.local.s64 [%r13 + 96], %r12; 
		mov.s32 %r14, _Zocelot_resume_status; 
		st.local.u32 [%r14], 8; 
		mov.s32 %r15, _Zocelot_resume_point; 
		st.local.u32 [%r15], 458753; 
		exit; 
}
(0.006603) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.006615) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.006622) KernelPartitioningPass.cpp:773:      IN-edge: $BB_5_0006_external_in_handler__from_5_0004 -> $BB_5_0006 (2 live values
(0.006633) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.006641) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_5_0006 -> $BB_5_0006_external_out_handler_to_5_0009 (3 live values
(0.006649) KernelPartitioningPass.cpp:853:        alive-out: 12 [type: s64]
(0.006664) KernelPartitioningPass.cpp:984:    creating exit in block $BB_5_0006_external_out_handler_to_5_0009
(0.006679) KernelPartitioningPass.cpp:809:    adding $BB_5_0006 to frontierExitBlocks
(0.006686) KernelPartitioningPass.cpp:813:  Barrier exits
(0.006693) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.006701) KernelPartitioningPass.cpp:899:   block $BB_5_0006 (1 external edges) terminator: bra.uni $BB_5_0009
(0.006708) KernelPartitioningPass.cpp:907:   1 external edge, modifying branch target to point to handler
(0.006715) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.006724) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.006731) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_kernelEntry_4(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r15;
	$BB_5_0006_external_in_handler__from_5_0004:		// 2 live-in values 
		bra $BB_5_0006; 
	$BB_5_0006:		/*BB4_4*/ 
		mov.u64 %r12, funcQuadruple; 
		bra.uni $BB_5_0006_external_out_handler_to_5_0009; 
	$BB_5_0006_external_out_handler_to_5_0009:		// 3 live-out values 
		mov.s32 %r13, _Zocelot_spill_area; 
		st.local.s64 [%r13 + 96], %r12; 
		mov.s32 %r14, _Zocelot_resume_status; 
		st.local.u32 [%r14], 8; 
		mov.s32 %r15, _Zocelot_resume_point; 
		st.local.u32 [%r15], 458754; 
		exit; 
}
(0.006842) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.006855) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.006862) KernelPartitioningPass.cpp:773:      IN-edge: $BB_5_0007_external_in_handler__from_5_0003 -> $BB_5_0007 (3 live values
(0.006873) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.006881) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_5_0007 -> $BB_5_0007_external_out_handler_to_5_0009 (3 live values
(0.006890) KernelPartitioningPass.cpp:853:        alive-out: 12 [type: s64]
(0.006904) KernelPartitioningPass.cpp:984:    creating exit in block $BB_5_0007_external_out_handler_to_5_0009
(0.006918) KernelPartitioningPass.cpp:809:    adding $BB_5_0007 to frontierExitBlocks
(0.006926) KernelPartitioningPass.cpp:813:  Barrier exits
(0.006933) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.006942) KernelPartitioningPass.cpp:899:   block $BB_5_0007 (1 external edges) terminator: bra.uni $BB_5_0009
(0.006949) KernelPartitioningPass.cpp:907:   1 external edge, modifying branch target to point to handler
(0.006956) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.006964) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.006971) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_kernelEntry_5(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r15;
	$BB_5_0007_external_in_handler__from_5_0003:		// 3 live-in values 
		bra $BB_5_0007; 
	$BB_5_0007:		/*BB4_5*/ 
		mov.u64 %r12, funcTriple; 
		bra.uni $BB_5_0007_external_out_handler_to_5_0009; 
	$BB_5_0007_external_out_handler_to_5_0009:		// 3 live-out values 
		mov.s32 %r13, _Zocelot_spill_area; 
		st.local.s64 [%r13 + 96], %r12; 
		mov.s32 %r14, _Zocelot_resume_status; 
		st.local.u32 [%r14], 8; 
		mov.s32 %r15, _Zocelot_resume_point; 
		st.local.u32 [%r15], 458755; 
		exit; 
}
(0.007075) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.007086) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.007093) KernelPartitioningPass.cpp:773:      IN-edge: $BB_5_0008_external_in_handler__from_5_0002 -> $BB_5_0008 (3 live values
(0.007104) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.007112) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_5_0008 -> $BB_5_0008_external_out_handler_to_5_0009 (3 live values
(0.007121) KernelPartitioningPass.cpp:853:        alive-out: 12 [type: s64]
(0.007136) KernelPartitioningPass.cpp:984:    creating exit in block $BB_5_0008_external_out_handler_to_5_0009
(0.007150) KernelPartitioningPass.cpp:809:    adding $BB_5_0008 to frontierExitBlocks
(0.007158) KernelPartitioningPass.cpp:813:  Barrier exits
(0.007164) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.007175) KernelPartitioningPass.cpp:899:   block $BB_5_0008 (1 external edges) terminator: mov.u64 %r12, funcDouble
(0.007186) KernelPartitioningPass.cpp:939:   fall-through non-control-flow instruction to external edge: mov.u64 %r12, funcDouble
(0.007192) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.007201) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.007207) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_kernelEntry_6(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s64 %r12;
	.reg .u32 %r13;
	.reg .u32 %r14;
	.reg .u32 %r15;
	$BB_5_0008_external_in_handler__from_5_0002:		// 3 live-in values 
		bra $BB_5_0008; 
	$BB_5_0008:		/*BB4_6*/ 
		mov.u64 %r12, funcDouble; 
	$BB_5_0008_external_out_handler_to_5_0009:		// 3 live-out values 
		mov.s32 %r13, _Zocelot_spill_area; 
		st.local.s64 [%r13 + 96], %r12; 
		mov.s32 %r14, _Zocelot_resume_status; 
		st.local.u32 [%r14], 8; 
		mov.s32 %r15, _Zocelot_resume_point; 
		st.local.u32 [%r15], 458752; 
		exit; 
}
(0.007345) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.007360) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.007367) KernelPartitioningPass.cpp:773:      IN-edge: $BB_5_0009_external_in_handler__from_5_0008 -> $BB_5_0009 (3 live values
(0.007376) KernelPartitioningPass.cpp:853:        alive-out: 12 [type: s64]
(0.007388) KernelPartitioningPass.cpp:853:        alive-out: 2 [type: s64]
(0.007401) KernelPartitioningPass.cpp:853:        alive-out: 6 [type: s32]
(0.007414) KernelPartitioningPass.cpp:773:      IN-edge: $BB_5_0009_external_in_handler__from_5_0005 -> $BB_5_0009 (3 live values
(0.007423) KernelPartitioningPass.cpp:853:        alive-out: 12 [type: s64]
(0.007434) KernelPartitioningPass.cpp:853:        alive-out: 2 [type: s64]
(0.007444) KernelPartitioningPass.cpp:853:        alive-out: 6 [type: s32]
(0.007458) KernelPartitioningPass.cpp:773:      IN-edge: $BB_5_0009_external_in_handler__from_5_0006 -> $BB_5_0009 (3 live values
(0.007468) KernelPartitioningPass.cpp:853:        alive-out: 12 [type: s64]
(0.007478) KernelPartitioningPass.cpp:853:        alive-out: 2 [type: s64]
(0.007488) KernelPartitioningPass.cpp:853:        alive-out: 6 [type: s32]
(0.007503) KernelPartitioningPass.cpp:773:      IN-edge: $BB_5_0009_external_in_handler__from_5_0007 -> $BB_5_0009 (3 live values
(0.007512) KernelPartitioningPass.cpp:853:        alive-out: 12 [type: s64]
(0.007523) KernelPartitioningPass.cpp:853:        alive-out: 2 [type: s64]
(0.007533) KernelPartitioningPass.cpp:853:        alive-out: 6 [type: s32]
(0.007544) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.007551) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_5_0009 -> $BB_5_0009_external_out_handler_to_ (0 live values
(0.007560) KernelPartitioningPass.cpp:984:    creating exit in block $BB_5_0009_external_out_handler_to_
(0.007576) KernelPartitioningPass.cpp:809:    adding $BB_5_0009 to frontierExitBlocks
(0.007584) KernelPartitioningPass.cpp:813:  Barrier exits
(0.007590) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.007598) KernelPartitioningPass.cpp:899:   block $BB_5_0009 (1 external edges) terminator: exit
(0.007605) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.007614) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.007620) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_kernelEntry_7(.param  .u64 kernelEntry_param_0,
		.param  .u32 kernelEntry_param_1)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[120];

	.reg .s32 %r6;
	.reg .s64 %r12;
	.reg .s32 %r13;
	.reg .s64 %r14;
	.reg .s64 %r15;
	.reg .s64 %r2;
	.reg .u32 %r20;
	.reg .u32 %r21;
	.reg .u32 %r16;
	.reg .u32 %r17;
	.reg .u32 %r18;
	.reg .u32 %r19;
	
	prototype_0: .callprototype (.param .b32 _) prototype_0 (.param .b32 _);
	
	$BB_5_0009_external_in_handler__from_5_0007:		// 3 live-in values 
		mov.s32 %r19, _Zocelot_spill_area; 
		ld.local.s64 %r12, [%r19 + 96]; 
		ld.local.s64 %r2, [%r19 + 16]; 
		ld.local.s32 %r6, [%r19 + 48]; 
		bra $BB_5_0009; 
	$BB_5_0009:		/*BB4_7*/ 
		st.param.b32 [param0], %r6; 
		call (retval0), %r12, (param0), prototype_0; 
		ld.param.b32 %r13, [retval0]; 
		mul.wide.s32 %r14, %r6, 4; 
		add.s64 %r15, %r2, %r14; 
		st.global.u32 [%r15], %r13; 
		bra $BB_5_0009_external_out_handler_to_; 
	$BB_5_0009_TestIndirectFunctionCall: ocelot/executive/implementation/DynamicTranslationCache.cpp:886: void setupCallTargets(ir::PTXKernel&, const executive::DynamicTranslationCache&): Assertion `0 && "arbitrary function calls not yet supported"' failed.
external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r20, _Zocelot_resume_status; 
		st.local.u32 [%r20], 6; 
		mov.s32 %r21, _Zocelot_resume_point; 
		st.local.u32 [%r21], 0; 
		exit; 
	$BB_5_0009_external_in_handler__from_5_0006:		// 3 live-in values 
		mov.s32 %r18, _Zocelot_spill_area; 
		ld.local.s64 %r12, [%r18 + 96]; 
		ld.local.s64 %r2, [%r18 + 16]; 
		ld.local.s32 %r6, [%r18 + 48]; 
		bra $BB_5_0009; 
	$BB_5_0009_external_in_handler__from_5_0005:		// 3 live-in values 
		mov.s32 %r17, _Zocelot_spill_area; 
		ld.local.s64 %r12, [%r17 + 96]; 
		ld.local.s64 %r2, [%r17 + 16]; 
		ld.local.s32 %r6, [%r17 + 48]; 
		bra $BB_5_0009; 
	$BB_5_0009_external_in_handler__from_5_0008:		// 3 live-in values 
		mov.s32 %r16, _Zocelot_spill_area; 
		ld.local.s64 %r12, [%r16 + 96]; 
		ld.local.s64 %r2, [%r16 + 16]; 
		ld.local.s32 %r6, [%r16 + 48]; 
		bra $BB_5_0009; 
}
(0.007914) DynamicTranslationCache.cpp:161:  DynamicTranslationCache::loadModule(ocelot/cuda/test/functions/indirectCall.cu)
(0.007937) DynamicTranslationCache.cpp:135:  DynamicTranslationCache::registerKernel(kernelEntry)
(0.007952) DynamicTranslationCache.cpp:1121: __translateKernel()
(0.007962) DynamicTranslationCache.cpp:1142:   translating subkernel _subkernel_kernelEntry_0
(0.007995) DynamicTranslationCache.cpp:1155:   Converting from PTX IR to LLVM IR.
(0.009512) DynamicTranslationCache.cpp:1172: translated PTX to LLVM
(0.010225) DynamicTranslationCache.cpp:1142:   translating subkernel _subkernel_kernelEntry_1
(0.010247) DynamicTranslationCache.cpp:1155:   Converting from PTX IR to LLVM IR.
(0.010978) DynamicTranslationCache.cpp:1172: translated PTX to LLVM
(0.011283) DynamicTranslationCache.cpp:1142:   translating subkernel _subkernel_kernelEntry_2
(0.011305) DynamicTranslationCache.cpp:1155:   Converting from PTX IR to LLVM IR.
(0.011848) DynamicTranslationCache.cpp:1172: translated PTX to LLVM
(0.012079) DynamicTranslationCache.cpp:1142:   translating subkernel _subkernel_kernelEntry_3

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestParser -i ../tests/ptx 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestKernels
INFO     Test completed in 0.0677678585052 seconds
INFO      It produced the following output:
(0.009370) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
Pass/Fail : Pass


Name : TestKernels

Description: 


Test Seed : 1327430391
Test time : 0.0126233

Status : Test output:
looping kernel succeeded
matrix vector kernel succeeded



INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestExternalFunctions 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestParser
INFO     Test completed in 0.0484840869904 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestParser

Description: A test for the PTXParser class. Test Points: 1) Load a PTX file 
             and run it through the parser generating a module. Write the 
             module to an intermediate stream. Parse the stream again 
             generating a new module, compare both to make sure that they match.


Test Seed : 1327430391
Test time : 1.35899e-05

Status : 


INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaGlobals 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestExternalFunctions
INFO     Test completed in 0.0396649837494 seconds
INFO      It produced the following output:
(0.000604) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
(0.002193) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(kernel)
(0.002204) KernelPartitioningPass.cpp:58:   partitioning blocks at barriers
(0.002210) KernelPartitioningPass.cpp:92:     encountered 0 barriers
(0.002304) KernelPartitioningPass.cpp:110:  Partitioning kernel kernel
/*
* Ocelot Version : 2.1.1658
*/
.entry kernel(.param  .u64 result)
{

	.param  .u64 freeValue;
	.param  .u64 returned;
	.param  .u64 value;
	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u64 %r2;
	.reg .u64 %r3;
	$BB_1_0002:		/**/ 
		mov.u64 %r0, 8; 
		st.param.u64 [value], %r0; 
		call.uni (returned), malloc, (value); 
		ld.param.u64 %r1, [returned]; 
		st.global.u64 [%r1], %r0; 
		ld.global.u64 %r2, [%r1]; 
		ld.param.u64 %r3, [result]; 
		st.global.u64 [%r3], %r2; 
		st.param.u64 [freeValue], %r1; 
		call.uni free, (freeValue); 
		exit; 
}
(0.002446) KernelPartitioningPass.cpp:253:    Spill region size is 24
(0.002458) KernelPartitioningPass.cpp:147:  KernelGraph::_partitionMinimumSize()
(0.002469) KernelPartitioningPass.cpp:314:  Subkernel::create(kernel)
(0.002477) KernelPartitioningPass.cpp:341:  Subkernel::_create(kernel)
(0.002492) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.002506) KernelPartitioningPass.cpp:440:   adding block $BB_1_0002
(0.002522) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.002531) KernelPartitioningPass.cpp:492:   ENTRY EDGE
(0.002540) KernelPartitioningPass.cpp:502:   creating internal edges
(0.002547) KernelPartitioningPass.cpp:506:   looking in block mapping: entry -> $BB_1_0002
(0.002553) KernelPartitioningPass.cpp:518:    adding internal edge: entry -> $BB_1_0002
(0.002561) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.002567) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.002575) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.002583) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_kernel_0(.param  .u64 result)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[24];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u64 %r2;
	.reg .u64 %r3;
	$BB_1_0002:		/**/ 
		mov.u64 %r0, 8; 
		st.param.u64 [value], %r0; 
		call.uni (returned), malloc, (value); 
		ld.param.u64 %r1, [returned]; 
		st.global.u64 [%r1], %r0; 
		ld.global.u64 %r2, [%r1]; 
		ld.param.u64 %r3, [result]; 
		st.global.u64 [%r3], %r2; 
		st.param.u64 [freeValue], %r1; 
		call.uni free, (freeValue); 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.002699) KernelPartitioningPass.cpp:169:  Linking external edges
(0.002707) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_1_0002 -> exit
(0.002745) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.002760) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.002768) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.002777) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.002794) KernelPartitioningPass.cpp:984:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.002811) KernelPartitioningPass.cpp:809:    adding $BB_1_0002 to frontierExitBlocks
(0.002823) KernelPartitioningPass.cpp:813:  Barrier exits
(0.002830) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.002838) KernelPartitioningPass.cpp:899:   block $BB_1_0002 (1 external edges) terminator: exit
(0.002846) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.002857) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.002865) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_kernel_0(.param  .u64 result)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[24];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u64 %r2;
	.reTestExternalFunctions: ocelot/executive/implementation/DynamicTranslationCache.cpp:886: void setupCallTargets(ir::PTXKernel&, const executive::DynamicTranslationCache&): Assertion `0 && "arbitrary function calls not yet supported"' failed.
g .u64 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	$BB_1_0002:		/**/ 
		mov.u64 %r0, 8; 
		st.param.u64 [value], %r0; 
		call.uni (returned), malloc, (value); 
		ld.param.u64 %r1, [returned]; 
		st.global.u64 [%r1], %r0; 
		ld.global.u64 %r2, [%r1]; 
		ld.param.u64 %r3, [result]; 
		st.global.u64 [%r3], %r2; 
		st.param.u64 [freeValue], %r1; 
		call.uni free, (freeValue); 
		bra $BB_1_0002_external_out_handler_to_; 
	$BB_1_0002_external_out_handler_to_:		// 0 live-out values 
		mov.s32 %r4, _Zocelot_resume_status; 
		st.local.u32 [%r4], 6; 
		mov.s32 %r5, _Zocelot_resume_point; 
		st.local.u32 [%r5], 0; 
		exit; 
}
(0.003025) DynamicTranslationCache.cpp:161:  DynamicTranslationCache::loadModule(someModule)
(0.003047) DynamicTranslationCache.cpp:135:  DynamicTranslationCache::registerKernel(kernel)
(0.003063) DynamicTranslationCache.cpp:1121: __translateKernel()
(0.003072) DynamicTranslationCache.cpp:1142:   translating subkernel _subkernel_kernel_0

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestEmulator 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCalVectorScale
INFO     Test completed in 0.0990679264069 seconds
INFO      It produced the following output:
(0.000540) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
No CAL devices found
Pass/Fail : Pass

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXAssembly 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMKernels
INFO     Test completed in 0.104954004288 seconds
INFO      It produced the following output:
(0.008389) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
Pass/Fail : Pass


Name : TestLLVMKernels

Description: A unit test for the LLVM executive runtime. Test Points: 1) 
             Execute a kernel with a loop. 2) Execute a matrix multiply kernel.


Test Seed : 1327430391
Test time : 0.0526183

Status : A = [
 1 0 0 0 0 0 0 0 ;
 0.5 1 0 0 0 0 0 0 ;
 0.333333 0.5 1 0 0 0 0 0 ;
 0.25 0.333333 0.5 1 0 0 0 0 ;
 0.2 0.25 0.333333 0.5 1 0 0 0 ;
 0.166667 0.2 0.25 0.333333 0.5 1 0 0 ;
 0.142857 0.166667 0.2 0.25 0.333333 0.5 1 0 ;
 0.125 0.142857 0.166667 0.2 0.25 0.333333 0.5 1 ;
];
V = [
 1 ;
 2 ;
 3 ;
 4 ;
 5 ;
 6 ;
 7 ;
 8 ;
];
R = [
 1 ;
 2.5 ;
 4.33333 ;
 6.41667 ;
 8.7 ;
 11.15 ;
 13.7429 ;
 16.4607 ;
];



INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaGlobals
INFO     Test completed in 0.0506150722504 seconds
INFO      It produced the following output:
(0.000551) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
Pass/Fail : Pass

INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaMalloc 
INFO     Running test program /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDataflowGraph -i ../tests/ptx 
INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestEmulator
INFO     Test completed in 0.0681369304657 seconds
INFO      It produced the following output:
(0.013357) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
Pass/Fail : Pass


Name : TestEmulator

Description: 


Test Seed : 1327430391
Test time : 0.00356889

Status : Test output:
10 registers
Register test passed
Load test passed
Store test passed
no errors
Full kernel test passed



INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXAssembly
INFO     Test completed in 0.0579419136047 seconds
INFO      It produced the following output:
(0.003286) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
(0.004629) KernelPartitioningPass.cpp:46:   KernelPartitioningPass::runOnFunction(test)
(0.004639) KernelPartitioningPass.cpp:58:   partitioning blocks at barriers
(0.004646) KernelPartitioningPass.cpp:92:     encountered 0 barriers
(0.004739) KernelPartitioningPass.cpp:110:  Partitioning kernel test
/*
* Ocelot Version : 2.1.1658
*/
.entry test(.param  .u64 out,
		.param  .u64 in)
{

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
}
(0.004867) KernelPartitioningPass.cpp:253:    Spill region size is 72
(0.004879) KernelPartitioningPass.cpp:147:  KernelGraph::_partitionMinimumSize()
(0.004889) KernelPartitioningPass.cpp:314:  Subkernel::create(test)
(0.004897) KernelPartitioningPass.cpp:341:  Subkernel::_create(test)
(0.004913) KernelPartitioningPass.cpp:430:   _analyzeExternalEdges()
(0.004925) KernelPartitioningPass.cpp:440:   adding block $BB_1_0002
(0.004940) KernelPartitioningPass.cpp:463:    adding EXTERNAL OUT-Edge $BB_1_0002 -> exit
(0.004949) KernelPartitioningPass.cpp:492:   ENTRY EDGE
(0.004958) KernelPartitioningPass.cpp:502:   creating internal edges
(0.004964) KernelPartitioningPass.cpp:506:   looking in block mapping: entry -> $BB_1_0002
(0.004970) KernelPartitioningPass.cpp:518:    adding internal edge: entry -> $BB_1_0002
(0.004977) KernelPartitioningPass.cpp:523:   identifying targets of external IN edges
(0.004983) KernelPartitioningPass.cpp:535:   identifying sources of external OUT edges
(0.004992) KernelPartitioningPass.cpp:369:   _analyzeBarriers()
(0.005000) KernelPartitioningPass.cpp:550:   _analyzeDivergentControlFlow()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.reg .u32 %r2;
	.reg .u32 %r3;
	.reg .u32 %r4;
	.reg .u32 %r5;
	.reg .u32 %r6;
	.reg .u32 %r7;
	.reg .u32 %r8;
	.reg .u32 %r9;
	$BB_1_0002:		/**/ 
		ld.param.u64 %r0, [in]; 
		ld.param.u64 %r1, [out]; 
		ld.global.v4.u32 {%r2, %r3, %r4, %r5}, [%r0]; 
		mov.u32 %r6, %r3; 
		mov.u32 %r7, %r4; 
		mov.u32 %r8, %r5; 
		mov.u32 %r9, %r2; 
		st.global.v4.u32 [%r1], {%r6, %r7, %r8, %r9}; 
		exit; 
	$BB_1_0002_external_out_handler_to_:
}
(0.005120) KernelPartitioningPass.cpp:169:  Linking external edges
(0.005128) KernelPartitioningPass.cpp:203:   failed to link external edge: $BB_1_0002 -> exit
(0.005167) KernelPartitioningPass.cpp:754:  Subkernel::_createExternalHandlers()
(0.005182) KernelPartitioningPass.cpp:762:    visiting external IN-edges
(0.005189) KernelPartitioningPass.cpp:788:    visiting external OUT-edges
(0.005198) KernelPartitioningPass.cpp:800:      OUT-edge: $BB_1_0002 -> $BB_1_0002_external_out_handler_to_ (0 live values
(0.005213) KernelPartitioningPass.cpp:984:    creating exit in block $BB_1_0002_external_out_handler_to_
(0.005230) KernelPartitioningPass.cpp:809:    adding $BB_1_0002 to frontierExitBlocks
(0.005241) KernelPartitioningPass.cpp:813:  Barrier exits
(0.005248) KernelPartitioningPass.cpp:887:  Frontier exit blocks:
(0.005255) KernelPartitioningPass.cpp:899:   block $BB_1_0002 (1 external edges) terminator: exit
(0.005264) KernelPartitioningPass.cpp:943:  end frontier exit blocks:
(0.005275) KernelPartitioningPass.cpp:961:  _createBarrierHandlers()
(0.005282) KernelPartitioningPass.cpp:971:  _createDivergenceHandlers()
/*
* Ocelot Version : 2.1.1658
*/
.entry _subkernel_test_0(.param  .u64 out,
		.param  .u64 in)
{
	.local .u32 _Zocelot_resume_point[1];
	.local .u32 _Zocelot_resume_status[1];
	.local .b8 _Zocelot_spill_area[72];

	.reg .u64 %r0;
	.reg .u64 %r1;
	.Stack dump:
0.	Running pass 'Ocelot LLVM Uniform Vectorization' on function '@_subkernel_test_0_opt0_ws1'

INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDataflowGraph
INFO     Test completed in 0.0478210449219 seconds
INFO      It produced the following output:
Pass/Fail : Pass


Name : TestDataflowGraph

Description: A test for the DataflowGraph class. Test Points: 1) 
             Generic: load PTX files, convert them into dataflow graphs, verify that 
             all live ranges spanning blocks are consistent. 2) SSA: convert to 
             ssa form, verify that no register is declared more than once. 3) 
             reverse SSA: convert to ssa then out of ssa, verify that all live 
             ranges spanning blocks are consistent.


Test Seed : 1327430391
Test time : 1.69277e-05

Status : Testing Generic Dataflow
 Test Passed
Testing SSA Dataflow
 Test Passed
Testing SSA then back Dataflow
 Test Passed



INFO     Test /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaMalloc
INFO     Test completed in 0.0779869556427 seconds
INFO      It produced the following output:
(0.000647) OcelotConfiguration.cpp:239:  Unknown optimization level - using none
test_malloc(256, 128)
PASSED
test_mallocArray(256, 128)
checking results from last cudaMemcpyFromArray
PASSED
[1] mallocing pitch
[2] memcpying2d
[3] memcpying
[4] checking for errors
[5] mallocing
[6] memcpying
[7] memcpying
[8] final free
Pass/Fail : Pass

INFO     
Passing tests:
 (0.048s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDataflowGraph : Passed
 (0.105s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMKernels : Passed
 (0.051s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaGlobals : Passed
 (0.051s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLexer : Passed
 (0.054s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXToLLVMTranslator : Passed
 (0.078s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaMalloc : Passed
 (0.068s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestEmulator : Passed
 (0.048s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestParser : Passed
 (0.055s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestDeviceSwitching : Passed
 (0.053s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestInstructions : Passed
 (0.055s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestLLVMInstructions : Passed
 (0.099s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCalVectorScale : Passed
 (0.068s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestKernels : Passed

Failing tests:
 (0.089s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaSequence : Did not complete.
 (0.054s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTexture2D : Did not complete.
 (0.055s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestIndirectFunctionCall : Did not complete.
 (0.053s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestCudaTextureArray : Did not complete.
 (0.040s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestExternalFunctions : Did not complete.
 (0.058s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestPTXAssembly : Did not complete.
 (0.051s) : /home/andrew/repositories/gpuocelot/branch/ocelot-vector-subkernel/.release_build/TestFunctionCall : Did not complete.

